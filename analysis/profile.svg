<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1606" onload="init(evt)" viewBox="0 0 1200 1606" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1606.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1589" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1589" > </text>
<g id="frames">
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (5 samples, 0.08%)</title><rect x="737.9" y="997" width="1.0" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="740.92" y="1007.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (1 samples, 0.02%)</title><rect x="949.7" y="1205" width="0.2" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="952.67" y="1215.5" ></text>
</g>
<g >
<title>DisjointSetUnion::Get(unsigned long) (1 samples, 0.02%)</title><rect x="362.1" y="1461" width="0.2" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="365.06" y="1471.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (1 samples, 0.02%)</title><rect x="785.2" y="533" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="788.16" y="543.5" ></text>
</g>
<g >
<title>DisjointSetUnion::InSameSet(unsigned long, unsigned long) (21 samples, 0.35%)</title><rect x="35.2" y="1493" width="4.2" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="38.20" y="1503.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (1 samples, 0.02%)</title><rect x="786.0" y="501" width="0.1" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="788.95" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator++() (2 samples, 0.03%)</title><rect x="871.9" y="1333" width="0.4" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="874.88" y="1343.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long) (2,414 samples, 40.60%)</title><rect x="443.2" y="1461" width="479.1" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="446.22" y="1471.5" >SpanningTree::FindCycle(unsigned long, unsigned long)</text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (1 samples, 0.02%)</title><rect x="777.8" y="693" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="780.81" y="703.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="830.2" y="1109" width="0.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="833.21" y="1119.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_S_key(std::_Rb_tree_node&lt;unsigned long&gt; const*) (1 samples, 0.02%)</title><rect x="954.2" y="1109" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="957.24" y="1119.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned (1 samples, 0.02%)</title><rect x="579.8" y="1285" width="0.2" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="582.76" y="1295.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base() const (1 samples, 0.02%)</title><rect x="754.0" y="853" width="0.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="757.00" y="863.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (2 samples, 0.03%)</title><rect x="704.0" y="1125" width="0.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="706.99" y="1135.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (1 samples, 0.02%)</title><rect x="787.7" y="501" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="790.74" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (1 samples, 0.02%)</title><rect x="845.1" y="1189" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="848.09" y="1199.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="775.4" y="725" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="778.43" y="735.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (1 samples, 0.02%)</title><rect x="768.7" y="805" width="0.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="771.68" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (3 samples, 0.05%)</title><rect x="764.9" y="821" width="0.6" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="767.91" y="831.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (2 samples, 0.03%)</title><rect x="715.9" y="1077" width="0.4" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="718.90" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::max_size() const (4 samples, 0.07%)</title><rect x="690.3" y="1109" width="0.8" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="693.30" y="1119.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned (1 samples, 0.02%)</title><rect x="539.5" y="1317" width="0.2" height="15.0" fill="rgb(248,121,121)" rx="2" ry="2" />
<text  x="542.47" y="1327.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (3 samples, 0.05%)</title><rect x="769.5" y="757" width="0.6" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="772.48" y="767.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (1 samples, 0.02%)</title><rect x="790.5" y="693" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="793.51" y="703.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (9 samples, 0.15%)</title><rect x="369.4" y="1445" width="1.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="372.40" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (2 samples, 0.03%)</title><rect x="728.0" y="1029" width="0.4" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="731.00" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator*() const (2 samples, 0.03%)</title><rect x="757.4" y="869" width="0.4" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="760.37" y="879.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator*() const (2 samples, 0.03%)</title><rect x="516.1" y="1381" width="0.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="519.05" y="1391.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="848.1" y="1237" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="851.07" y="1247.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (1 samples, 0.02%)</title><rect x="798.3" y="821" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="801.25" y="831.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (1 samples, 0.02%)</title><rect x="846.9" y="1221" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="849.88" y="1231.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="865.7" y="1269" width="0.2" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="868.73" y="1279.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (4 samples, 0.07%)</title><rect x="937.8" y="1397" width="0.8" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="940.77" y="1407.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (10 samples, 0.17%)</title><rect x="680.0" y="1189" width="2.0" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="682.98" y="1199.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (22 samples, 0.37%)</title><rect x="593.3" y="1333" width="4.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="596.25" y="1343.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;unsigned long*, unsigned long&gt;(unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt;&amp;) (1 samples, 0.02%)</title><rect x="974.7" y="1461" width="0.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="977.68" y="1471.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="718.7" y="1045" width="0.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="721.67" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (3 samples, 0.05%)</title><rect x="814.3" y="997" width="0.6" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="817.33" y="1007.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_upper_bound(std::_Rb_tree_node&lt;unsigned long&gt;*, std::_Rb_tree_node_base*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="947.7" y="1269" width="0.2" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="950.69" y="1279.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (4 samples, 0.07%)</title><rect x="648.0" y="1237" width="0.8" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="651.03" y="1247.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::max&lt;unsigned long&gt;(unsigned long const&amp;, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="537.3" y="1333" width="0.2" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="540.29" y="1343.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (1 samples, 0.02%)</title><rect x="804.2" y="901" width="0.2" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="807.21" y="911.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (8 samples, 0.13%)</title><rect x="761.9" y="853" width="1.6" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="764.94" y="863.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;unsigned long&gt; &gt; &gt;::deallocate(std::allocator&lt;std::_Rb_tree_node&lt;unsigned long&gt; &gt;&amp;, std::_Rb_tree_node&lt;unsigned long&gt;*, unsigned long) (1 samples, 0.02%)</title><rect x="941.9" y="1269" width="0.2" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="944.93" y="1279.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (6 samples, 0.10%)</title><rect x="657.7" y="1221" width="1.2" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="660.75" y="1231.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_get_insert_unique_pos(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="942.7" y="1317" width="0.4" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="945.73" y="1327.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (19 samples, 0.32%)</title><rect x="634.1" y="1285" width="3.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="637.13" y="1295.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_S_left(std::_Rb_tree_node_base*) (1 samples, 0.02%)</title><rect x="942.3" y="1333" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="945.33" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (157 samples, 2.64%)</title><rect x="483.5" y="1397" width="31.2" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="486.51" y="1407.5" >st..</text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (7 samples, 0.12%)</title><rect x="636.1" y="1269" width="1.4" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="639.12" y="1279.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate(unsigned long) (1 samples, 0.02%)</title><rect x="449.8" y="1397" width="0.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="452.77" y="1407.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (246 samples, 4.14%)</title><rect x="755.2" y="917" width="48.8" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="758.19" y="927.5" >bool..</text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="781.0" y="613" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="783.99" y="623.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::insert(unsigned long const&amp;) (18 samples, 0.30%)</title><rect x="931.8" y="1413" width="3.6" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="934.81" y="1423.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="822.3" y="1045" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="825.27" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (1 samples, 0.02%)</title><rect x="870.1" y="1317" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="873.09" y="1327.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (8 samples, 0.13%)</title><rect x="710.1" y="1109" width="1.6" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="713.14" y="1119.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (4 samples, 0.07%)</title><rect x="810.2" y="981" width="0.8" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="813.16" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (6 samples, 0.10%)</title><rect x="559.7" y="1365" width="1.2" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="562.71" y="1375.5" ></text>
</g>
<g >
<title>SpanningTree::Propagate(unsigned long) (19 samples, 0.32%)</title><rect x="955.0" y="1173" width="3.8" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="958.03" y="1183.5" ></text>
</g>
<g >
<title>std::vector&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::operator[](unsigned long) const (1 samples, 0.02%)</title><rect x="888.0" y="1365" width="0.2" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="890.95" y="1375.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (912 samples, 15.34%)</title><rect x="666.1" y="1237" width="181.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="669.08" y="1247.5" >bool LinkedList::DepthF..</text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (2 samples, 0.03%)</title><rect x="796.1" y="773" width="0.4" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="799.07" y="783.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::destroy&lt;unsigned long&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*) (2 samples, 0.03%)</title><rect x="964.0" y="1445" width="0.4" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="966.96" y="1455.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="743.9" y="933" width="0.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="746.88" y="943.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator*() const (2 samples, 0.03%)</title><rect x="583.3" y="1333" width="0.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="586.33" y="1343.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (8 samples, 0.13%)</title><rect x="722.2" y="1077" width="1.6" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="725.25" y="1087.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (1 samples, 0.02%)</title><rect x="854.8" y="1253" width="0.2" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="857.81" y="1263.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;std::pair&lt;unsigned long, unsigned long&gt; const*, std::vector&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::pair&lt;unsigned long, unsigned long&gt; const*, std::vector&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;std::pair&lt;unsigned long, unsigned long&gt; const*, std::vector&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt; &gt; &gt; const&amp;) (2 samples, 0.03%)</title><rect x="1177.7" y="1493" width="0.4" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="1180.70" y="1503.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (2 samples, 0.03%)</title><rect x="776.0" y="725" width="0.4" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="779.03" y="735.5" ></text>
</g>
<g >
<title>DisjointSetUnion::Get(unsigned long) (4 samples, 0.07%)</title><rect x="142.6" y="1477" width="0.8" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="145.57" y="1487.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (460 samples, 7.74%)</title><rect x="727.0" y="1061" width="91.3" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="730.01" y="1071.5" >bool Linke..</text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (5 samples, 0.08%)</title><rect x="684.9" y="1157" width="1.0" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="687.94" y="1167.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (4 samples, 0.07%)</title><rect x="786.5" y="437" width="0.8" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="789.55" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (6 samples, 0.10%)</title><rect x="876.2" y="1317" width="1.2" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="879.25" y="1327.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator++() (1 samples, 0.02%)</title><rect x="855.6" y="1269" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="858.61" y="1279.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate(unsigned long) (13 samples, 0.22%)</title><rect x="492.2" y="1365" width="2.6" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="495.24" y="1375.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_S_key(std::_Rb_tree_node&lt;unsigned long&gt; const*) (1 samples, 0.02%)</title><rect x="950.3" y="1237" width="0.2" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="953.27" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_fill_assign(unsigned long, unsigned long const&amp;) (12 samples, 0.20%)</title><rect x="414.0" y="1445" width="2.4" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="417.05" y="1455.5" ></text>
</g>
<g >
<title>SpanningTree::DivideIntoComponents() (243 samples, 4.09%)</title><rect x="349.8" y="1477" width="48.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="352.75" y="1487.5" >Span..</text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (1 samples, 0.02%)</title><rect x="763.3" y="837" width="0.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="766.33" y="847.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (1 samples, 0.02%)</title><rect x="806.0" y="933" width="0.2" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="808.99" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (5 samples, 0.08%)</title><rect x="718.3" y="1077" width="1.0" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="721.28" y="1087.5" ></text>
</g>
<g >
<title>DisjointSetUnion::Unite(unsigned long, unsigned long) (8 samples, 0.13%)</title><rect x="365.6" y="1461" width="1.6" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="368.63" y="1471.5" ></text>
</g>
<g >
<title>unsigned long* std::__relocate_a&lt;unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt; &gt;(unsigned long*, unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt;&amp;) (3 samples, 0.05%)</title><rect x="691.3" y="1109" width="0.6" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="694.29" y="1119.5" ></text>
</g>
<g >
<title>unsigned long&amp;&amp; std::__pair_get&lt;1ul&gt;::__move_get&lt;unsigned long, unsigned long&gt;(std::pair&lt;unsigned long, unsigned long&gt;&amp;&amp;) (35 samples, 0.59%)</title><rect x="1161.0" y="1477" width="7.0" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="1164.03" y="1487.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (1,931 samples, 32.48%)</title><rect x="520.8" y="1413" width="383.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="523.82" y="1423.5" >bool LinkedList::DepthFirstSearch&lt;SpanningTree::Find..</text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (1 samples, 0.02%)</title><rect x="788.5" y="613" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="791.53" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (4 samples, 0.07%)</title><rect x="741.3" y="965" width="0.8" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="744.30" y="975.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::__is_bitwise_relocatable&lt;unsigned long&gt;::value, unsigned long*&gt;::type std::__relocate_a_1&lt;unsigned long, unsigned long&gt;(unsigned long*, unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt;&amp;) (6 samples, 0.10%)</title><rect x="510.7" y="1333" width="1.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="513.70" y="1343.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (3 samples, 0.05%)</title><rect x="575.4" y="1333" width="0.6" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="578.39" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (2 samples, 0.03%)</title><rect x="776.4" y="709" width="0.4" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="779.42" y="719.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;unsigned long&gt;, bool&gt; std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt;(unsigned long const&amp;) (6 samples, 0.10%)</title><rect x="936.6" y="1381" width="1.2" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="939.58" y="1391.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (6 samples, 0.10%)</title><rect x="858.4" y="1269" width="1.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="861.39" y="1279.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (3 samples, 0.05%)</title><rect x="754.6" y="917" width="0.6" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="757.59" y="927.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (8 samples, 0.13%)</title><rect x="716.5" y="1093" width="1.6" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="719.49" y="1103.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (3 samples, 0.05%)</title><rect x="806.8" y="949" width="0.6" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="809.79" y="959.5" ></text>
</g>
<g >
<title>void std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long const&amp;) (59 samples, 0.99%)</title><rect x="529.7" y="1365" width="11.8" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="532.75" y="1375.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (4 samples, 0.07%)</title><rect x="805.0" y="917" width="0.8" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="808.00" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (5 samples, 0.08%)</title><rect x="702.4" y="1125" width="1.0" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="705.40" y="1135.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (10 samples, 0.17%)</title><rect x="875.5" y="1333" width="1.9" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="878.45" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (4 samples, 0.07%)</title><rect x="664.7" y="1205" width="0.8" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="667.70" y="1215.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="833.2" y="1125" width="0.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="836.18" y="1135.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="862.2" y="1253" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="865.16" y="1263.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::_Vector_impl() (7 samples, 0.12%)</title><rect x="920.7" y="1413" width="1.4" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="923.70" y="1423.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="773.2" y="741" width="0.2" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="776.25" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (1 samples, 0.02%)</title><rect x="863.1" y="1269" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="866.15" y="1279.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator++() (2 samples, 0.03%)</title><rect x="853.0" y="1253" width="0.4" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="856.03" y="1263.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_S_key(std::_Rb_tree_node&lt;unsigned long&gt; const*) (1 samples, 0.02%)</title><rect x="939.8" y="1333" width="0.1" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="942.75" y="1343.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;unsigned long&gt;) (1 samples, 0.02%)</title><rect x="957.0" y="997" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="960.02" y="1007.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (2 samples, 0.03%)</title><rect x="850.1" y="1221" width="0.3" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="853.05" y="1231.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (2 samples, 0.03%)</title><rect x="759.0" y="885" width="0.4" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="761.96" y="895.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (2 samples, 0.03%)</title><rect x="830.0" y="1125" width="0.4" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="833.01" y="1135.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (2 samples, 0.03%)</title><rect x="562.3" y="1365" width="0.4" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="565.29" y="1375.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;unsigned long&gt;::_Rb_tree_iterator(std::_Rb_tree_node_base*) (1 samples, 0.02%)</title><rect x="944.5" y="1301" width="0.2" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="947.51" y="1311.5" ></text>
</g>
<g >
<title>SpanningTree::Propagate(unsigned long) (102 samples, 1.72%)</title><rect x="938.8" y="1413" width="20.2" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="941.76" y="1423.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (1 samples, 0.02%)</title><rect x="894.9" y="1381" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="897.90" y="1391.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (2 samples, 0.03%)</title><rect x="813.5" y="1013" width="0.4" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="816.54" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (1 samples, 0.02%)</title><rect x="780.0" y="661" width="0.2" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="783.00" y="671.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::insert(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="953.4" y="1205" width="0.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="956.44" y="1215.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (3 samples, 0.05%)</title><rect x="669.5" y="1173" width="0.6" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="672.46" y="1183.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::assign(unsigned long, unsigned long const&amp;) (7 samples, 0.12%)</title><rect x="402.7" y="1445" width="1.4" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="405.74" y="1455.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (12 samples, 0.20%)</title><rect x="662.3" y="1205" width="2.4" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="665.31" y="1215.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (2 samples, 0.03%)</title><rect x="746.5" y="933" width="0.4" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="749.46" y="943.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="797.1" y="837" width="0.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="800.06" y="847.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;unsigned long&gt;::_Rb_tree_iterator(std::_Rb_tree_node_base*) (1 samples, 0.02%)</title><rect x="927.6" y="1397" width="0.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="930.65" y="1407.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (2 samples, 0.03%)</title><rect x="717.7" y="1077" width="0.4" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="720.68" y="1087.5" ></text>
</g>
<g >
<title>LinkedList::AddEdge(unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="955.0" y="1157" width="0.2" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="958.03" y="1167.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_erase(std::_Rb_tree_node&lt;unsigned long&gt;*) (1 samples, 0.02%)</title><rect x="957.6" y="965" width="0.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="960.61" y="975.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (2 samples, 0.03%)</title><rect x="894.5" y="1381" width="0.4" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="897.50" y="1391.5" ></text>
</g>
<g >
<title>LinkedList::RemoveEdge(unsigned long, unsigned long) (5 samples, 0.08%)</title><rect x="939.0" y="1397" width="0.9" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="941.96" y="1407.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (43 samples, 0.72%)</title><rect x="560.9" y="1381" width="8.5" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="563.90" y="1391.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="730.4" y="997" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="733.38" y="1007.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_iterator&lt;unsigned long&gt; const&amp;) (1 samples, 0.02%)</title><rect x="954.4" y="1125" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="957.44" y="1135.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::destroy&lt;unsigned long&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*) (1 samples, 0.02%)</title><rect x="740.3" y="965" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="743.31" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_S_key(std::_Rb_tree_node&lt;unsigned long&gt; const*) (1 samples, 0.02%)</title><rect x="945.1" y="1269" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="948.11" y="1279.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;unsigned long&gt;, bool&gt; std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt;(unsigned long const&amp;) (5 samples, 0.08%)</title><rect x="940.5" y="1349" width="1.0" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="943.54" y="1359.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (1 samples, 0.02%)</title><rect x="883.4" y="1333" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="886.39" y="1343.5" ></text>
</g>
<g >
<title>unsigned long* std::__niter_base&lt;unsigned long*&gt;(unsigned long*) (1 samples, 0.02%)</title><rect x="691.7" y="1093" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="694.69" y="1103.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (2 samples, 0.03%)</title><rect x="786.9" y="149" width="0.4" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="789.94" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (8 samples, 0.13%)</title><rect x="742.5" y="965" width="1.6" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="745.49" y="975.5" ></text>
</g>
<g >
<title>LinkedList::AddEdge(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="956.0" y="1093" width="0.4" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="959.02" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="730.6" y="997" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="733.58" y="1007.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (1 samples, 0.02%)</title><rect x="810.0" y="965" width="0.2" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="812.96" y="975.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (2 samples, 0.03%)</title><rect x="784.0" y="597" width="0.4" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="786.97" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="650.4" y="1221" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="653.41" y="1231.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (55 samples, 0.92%)</title><rect x="571.4" y="1365" width="10.9" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="574.42" y="1375.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (3 samples, 0.05%)</title><rect x="681.4" y="1141" width="0.6" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="684.37" y="1151.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;unsigned long&gt;::_Rb_tree_iterator(std::_Rb_tree_node_base*) (1 samples, 0.02%)</title><rect x="938.4" y="1349" width="0.2" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="941.36" y="1359.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="602.8" y="1301" width="0.4" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="605.78" y="1311.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="794.9" y="741" width="0.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="797.88" y="751.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="841.5" y="1205" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="844.52" y="1215.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;unsigned long, unsigned long&gt; const*, std::vector&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt; &gt; &gt;::base() const (32 samples, 0.54%)</title><rect x="974.9" y="1477" width="6.3" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="977.88" y="1487.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="894.7" y="1349" width="0.2" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="897.70" y="1359.5" ></text>
</g>
<g >
<title>void std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long const&amp;) (3 samples, 0.05%)</title><rect x="753.6" y="885" width="0.6" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="756.60" y="895.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (1,408 samples, 23.68%)</title><rect x="598.4" y="1349" width="279.4" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="601.41" y="1359.5" >bool LinkedList::DepthFirstSearch&lt;Spa..</text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (5 samples, 0.08%)</title><rect x="893.5" y="1381" width="1.0" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="896.51" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::pop_back() (1 samples, 0.02%)</title><rect x="694.7" y="1157" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="697.66" y="1167.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (2 samples, 0.03%)</title><rect x="822.5" y="1061" width="0.4" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="825.47" y="1071.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="528.0" y="1365" width="0.4" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="530.96" y="1375.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (1 samples, 0.02%)</title><rect x="820.3" y="1045" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="823.28" y="1055.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (1 samples, 0.02%)</title><rect x="797.5" y="821" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="800.46" y="831.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::destroy&lt;unsigned long&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*) (1 samples, 0.02%)</title><rect x="608.9" y="1301" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="611.93" y="1311.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (4 samples, 0.07%)</title><rect x="603.2" y="1301" width="0.8" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="606.18" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (2 samples, 0.03%)</title><rect x="761.3" y="837" width="0.4" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="764.34" y="847.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (5 samples, 0.08%)</title><rect x="848.3" y="1237" width="1.0" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="851.26" y="1247.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;) (1 samples, 0.02%)</title><rect x="948.1" y="1269" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="951.09" y="1279.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (4 samples, 0.07%)</title><rect x="550.0" y="1349" width="0.8" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="552.99" y="1359.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator++() (4 samples, 0.07%)</title><rect x="906.0" y="1413" width="0.8" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="909.01" y="1423.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (2 samples, 0.03%)</title><rect x="811.9" y="981" width="0.4" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="814.95" y="991.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;unsigned long&gt;::deallocate(unsigned long*, unsigned long) (2 samples, 0.03%)</title><rect x="495.6" y="1333" width="0.4" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="498.61" y="1343.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() (2 samples, 0.03%)</title><rect x="927.8" y="1381" width="0.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="930.84" y="1391.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::insert(unsigned long const&amp;) (6 samples, 0.10%)</title><rect x="936.6" y="1397" width="1.2" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="939.58" y="1407.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (1 samples, 0.02%)</title><rect x="803.0" y="901" width="0.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="806.02" y="911.5" ></text>
</g>
<g >
<title>DisjointSetUnion::Get(unsigned long) (958 samples, 16.11%)</title><rect x="154.7" y="1461" width="190.1" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="157.67" y="1471.5" >DisjointSetUnion::Get(un..</text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (432 samples, 7.27%)</title><rect x="731.0" y="1045" width="85.7" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="733.98" y="1055.5" >bool Linke..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (6 samples, 0.10%)</title><rect x="760.2" y="837" width="1.1" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="763.15" y="847.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::destroy&lt;unsigned long&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*) (1 samples, 0.02%)</title><rect x="650.6" y="1237" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="653.61" y="1247.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator*() const (2 samples, 0.03%)</title><rect x="759.8" y="837" width="0.4" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="762.75" y="847.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (1 samples, 0.02%)</title><rect x="839.9" y="1189" width="0.2" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="842.93" y="1199.5" ></text>
</g>
<g >
<title>unsigned long* std::fill_n&lt;unsigned long*, unsigned long, unsigned long&gt;(unsigned long*, unsigned long, unsigned long const&amp;) (5 samples, 0.08%)</title><rect x="403.1" y="1413" width="1.0" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="406.13" y="1423.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator++() (2 samples, 0.03%)</title><rect x="896.9" y="1397" width="0.4" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="899.89" y="1407.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (520 samples, 8.75%)</title><rect x="719.7" y="1093" width="103.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="722.67" y="1103.5" >bool LinkedL..</text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (3 samples, 0.05%)</title><rect x="744.5" y="949" width="0.6" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="747.47" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_max_size(std::allocator&lt;unsigned long&gt; const&amp;) (2 samples, 0.03%)</title><rect x="577.6" y="1285" width="0.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="580.57" y="1295.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::max_size(std::allocator&lt;unsigned long&gt; const&amp;) (1 samples, 0.02%)</title><rect x="503.2" y="1317" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="506.16" y="1327.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_construct_node&lt;unsigned long const&amp;&gt;(std::_Rb_tree_node&lt;unsigned long&gt;*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="943.1" y="1269" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="946.12" y="1279.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator*() const (1 samples, 0.02%)</title><rect x="778.2" y="677" width="0.2" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="781.21" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (4 samples, 0.07%)</title><rect x="753.4" y="901" width="0.8" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="756.40" y="911.5" ></text>
</g>
<g >
<title>unsigned long* std::__niter_base&lt;unsigned long*&gt;(unsigned long*) (2 samples, 0.03%)</title><rect x="627.6" y="1221" width="0.4" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="630.58" y="1231.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="951.9" y="1237" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="954.86" y="1247.5" ></text>
</g>
<g >
<title>DisjointSetUnion::InSameSet(unsigned long, unsigned long) (1,040 samples, 17.49%)</title><rect x="143.4" y="1477" width="206.4" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="146.36" y="1487.5" >DisjointSetUnion::InSameSet..</text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (1 samples, 0.02%)</title><rect x="926.7" y="1333" width="0.2" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="929.65" y="1343.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (2 samples, 0.03%)</title><rect x="796.1" y="789" width="0.4" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="799.07" y="799.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (62 samples, 1.04%)</title><rect x="778.8" y="709" width="12.3" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="781.81" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (2 samples, 0.03%)</title><rect x="751.0" y="917" width="0.4" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="754.02" y="927.5" ></text>
</g>
<g >
<title>LinkedList::RemoveEdge(unsigned long, unsigned long) (19 samples, 0.32%)</title><rect x="927.8" y="1445" width="3.8" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="930.84" y="1455.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="756.0" y="869" width="0.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="758.98" y="879.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::max_size(std::allocator&lt;unsigned long&gt; const&amp;) (1 samples, 0.02%)</title><rect x="577.4" y="1285" width="0.2" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="580.38" y="1295.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (1 samples, 0.02%)</title><rect x="736.7" y="981" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="739.73" y="991.5" ></text>
</g>
<g >
<title>LinkedList::AddEdge(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="1172.1" y="1461" width="0.4" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="1175.14" y="1471.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (13 samples, 0.22%)</title><rect x="785.6" y="533" width="2.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="788.55" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (3 samples, 0.05%)</title><rect x="687.7" y="1157" width="0.6" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="690.72" y="1167.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&amp;) const (2,391 samples, 40.21%)</title><rect x="445.2" y="1445" width="474.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="448.21" y="1455.5" >bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigne..</text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (1,095 samples, 18.42%)</title><rect x="642.3" y="1285" width="217.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="645.27" y="1295.5" >bool LinkedList::DepthFirstS..</text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (10 samples, 0.17%)</title><rect x="917.1" y="1429" width="2.0" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="920.13" y="1439.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_S_key(std::_Rb_tree_node&lt;unsigned long&gt; const*) (2 samples, 0.03%)</title><rect x="930.2" y="1381" width="0.4" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="933.23" y="1391.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (1,491 samples, 25.08%)</title><rect x="586.9" y="1365" width="295.9" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="589.90" y="1375.5" >bool LinkedList::DepthFirstSearch&lt;Spann..</text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_get_insert_unique_pos(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="950.9" y="1237" width="0.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="953.86" y="1247.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (2 samples, 0.03%)</title><rect x="839.3" y="1189" width="0.4" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="842.33" y="1199.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (2 samples, 0.03%)</title><rect x="786.9" y="181" width="0.4" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="789.94" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (1 samples, 0.02%)</title><rect x="515.9" y="1397" width="0.2" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="518.86" y="1407.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::pop_back() (1 samples, 0.02%)</title><rect x="650.6" y="1253" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="653.61" y="1263.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (2 samples, 0.03%)</title><rect x="862.9" y="1285" width="0.4" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="865.95" y="1295.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (2 samples, 0.03%)</title><rect x="802.6" y="901" width="0.4" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="805.62" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_fill_assign(unsigned long, int const&amp;) (4 samples, 0.07%)</title><rect x="407.7" y="1445" width="0.8" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="410.70" y="1455.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::size() const (1 samples, 0.02%)</title><rect x="404.1" y="1461" width="0.2" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="407.13" y="1471.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (5 samples, 0.08%)</title><rect x="762.3" y="837" width="1.0" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="765.33" y="847.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;* std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_create_node&lt;unsigned long const&amp;&gt;(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="943.1" y="1285" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="946.12" y="1295.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="784.2" y="549" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="787.16" y="559.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (4 samples, 0.07%)</title><rect x="786.5" y="325" width="0.8" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="789.55" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="912.0" y="1381" width="0.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="914.97" y="1391.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="938.2" y="1349" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="941.16" y="1359.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="528.8" y="1349" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="531.76" y="1359.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (3 samples, 0.05%)</title><rect x="863.5" y="1301" width="0.6" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="866.55" y="1311.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (2 samples, 0.03%)</title><rect x="833.8" y="1157" width="0.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="836.78" y="1167.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (8 samples, 0.13%)</title><rect x="558.1" y="1349" width="1.6" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="561.13" y="1359.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (5 samples, 0.08%)</title><rect x="782.6" y="613" width="1.0" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="785.58" y="623.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (1 samples, 0.02%)</title><rect x="803.8" y="901" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="806.81" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (5 samples, 0.08%)</title><rect x="478.7" y="1397" width="1.0" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="481.75" y="1407.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (1 samples, 0.02%)</title><rect x="951.5" y="1173" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="954.46" y="1183.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="386.3" y="1445" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="389.27" y="1455.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (5 samples, 0.08%)</title><rect x="939.0" y="1365" width="0.9" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="941.96" y="1375.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (5 samples, 0.08%)</title><rect x="590.5" y="1317" width="1.0" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="593.47" y="1327.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (4 samples, 0.07%)</title><rect x="862.6" y="1301" width="0.7" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="865.55" y="1311.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;unsigned long&gt;) (1 samples, 0.02%)</title><rect x="941.9" y="1317" width="0.2" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="944.93" y="1327.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;unsigned long&gt;, std::_Rb_tree_const_iterator&lt;unsigned long&gt;) (9 samples, 0.15%)</title><rect x="927.8" y="1397" width="1.8" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="930.84" y="1407.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (1 samples, 0.02%)</title><rect x="751.8" y="901" width="0.2" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="754.82" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (3 samples, 0.05%)</title><rect x="773.6" y="741" width="0.6" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="776.65" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::pop_back() (1 samples, 0.02%)</title><rect x="685.9" y="1173" width="0.2" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="688.93" y="1183.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (12 samples, 0.20%)</title><rect x="704.4" y="1125" width="2.4" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="707.39" y="1135.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (80 samples, 1.35%)</title><rect x="776.0" y="741" width="15.9" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="779.03" y="751.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::size() const (1 samples, 0.02%)</title><rect x="959.2" y="1445" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="962.20" y="1455.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (11 samples, 0.18%)</title><rect x="727.4" y="1045" width="2.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="730.41" y="1055.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="782.2" y="597" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="785.18" y="607.5" ></text>
</g>
<g >
<title>void std::__fill_a&lt;int*, int&gt;(int*, int*, int const&amp;) (4 samples, 0.07%)</title><rect x="407.7" y="1397" width="0.8" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="410.70" y="1407.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;unsigned long&gt;, std::_Rb_tree_const_iterator&lt;unsigned long&gt;) (1 samples, 0.02%)</title><rect x="950.1" y="1253" width="0.2" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="953.07" y="1263.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::max_size() const (34 samples, 0.57%)</title><rect x="498.8" y="1349" width="6.7" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="501.79" y="1359.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (4 samples, 0.07%)</title><rect x="857.6" y="1237" width="0.8" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="860.59" y="1247.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (1 samples, 0.02%)</title><rect x="808.4" y="933" width="0.2" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="811.38" y="943.5" ></text>
</g>
<g >
<title>SpanningTree::Propagate(unsigned long) (31 samples, 0.52%)</title><rect x="952.8" y="1253" width="6.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="955.85" y="1263.5" ></text>
</g>
<g >
<title>std::vector&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::operator[](unsigned long) (5 samples, 0.08%)</title><rect x="1153.7" y="1477" width="1.0" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1156.68" y="1487.5" ></text>
</g>
<g >
<title>__GI___libc_free (10 samples, 0.17%)</title><rect x="27.5" y="1525" width="1.9" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="30.46" y="1535.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;unsigned long&gt;, std::_Rb_tree_const_iterator&lt;unsigned long&gt;) (2 samples, 0.03%)</title><rect x="941.9" y="1333" width="0.4" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="944.93" y="1343.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="583.1" y="1333" width="0.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="586.13" y="1343.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (3 samples, 0.05%)</title><rect x="493.2" y="1333" width="0.6" height="15.0" fill="rgb(218,77,77)" rx="2" ry="2" />
<text  x="496.23" y="1343.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (6 samples, 0.10%)</title><rect x="668.9" y="1189" width="1.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="671.86" y="1199.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base() const (3 samples, 0.05%)</title><rect x="454.3" y="1381" width="0.6" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="457.34" y="1391.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::insert(unsigned long const&amp;) (27 samples, 0.45%)</title><rect x="922.5" y="1429" width="5.3" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="925.49" y="1439.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (4 samples, 0.07%)</title><rect x="842.5" y="1173" width="0.8" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="845.51" y="1183.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator*() const (1 samples, 0.02%)</title><rect x="729.8" y="1013" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="732.79" y="1023.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (761 samples, 12.80%)</title><rect x="686.1" y="1189" width="151.1" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="689.13" y="1199.5" >bool LinkedList::De..</text>
</g>
<g >
<title>unsigned long* std::__fill_n_a&lt;unsigned long*, unsigned long, unsigned long&gt;(unsigned long*, unsigned long, unsigned long const&amp;, std::random_access_iterator_tag) (11 samples, 0.18%)</title><rect x="414.2" y="1413" width="2.2" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="417.25" y="1423.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (2 samples, 0.03%)</title><rect x="786.9" y="117" width="0.4" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="789.94" y="127.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (1 samples, 0.02%)</title><rect x="804.8" y="917" width="0.2" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="807.80" y="927.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;unsigned long&gt;, bool&gt; std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt;(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="951.5" y="1237" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="954.46" y="1247.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (2 samples, 0.03%)</title><rect x="805.4" y="885" width="0.4" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="808.40" y="895.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;unsigned long&gt;, std::_Rb_tree_const_iterator&lt;unsigned long&gt;) (2 samples, 0.03%)</title><rect x="951.1" y="1237" width="0.4" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="954.06" y="1247.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_S_key(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="924.5" y="1381" width="0.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="927.47" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (3 samples, 0.05%)</title><rect x="442.6" y="1445" width="0.6" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="445.63" y="1455.5" ></text>
</g>
<g >
<title>LinkedList::RemoveEdge(unsigned long, unsigned long) (3 samples, 0.05%)</title><rect x="957.6" y="1045" width="0.6" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="960.61" y="1055.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="748.0" y="917" width="0.4" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="751.05" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::assign(unsigned long, int const&amp;) (5 samples, 0.08%)</title><rect x="407.5" y="1461" width="1.0" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="410.50" y="1471.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;unsigned long, unsigned long&gt; const*, std::vector&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt; &gt; &gt;::operator++() (28 samples, 0.47%)</title><rect x="986.6" y="1477" width="5.5" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="989.59" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector() (46 samples, 0.77%)</title><rect x="965.5" y="1461" width="9.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="968.55" y="1471.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset() (1 samples, 0.02%)</title><rect x="946.3" y="1269" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="949.30" y="1279.5" ></text>
</g>
<g >
<title>LinkedList::RemoveEdge(unsigned long, unsigned long) (5 samples, 0.08%)</title><rect x="937.8" y="1413" width="1.0" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="940.77" y="1423.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::destroy&lt;unsigned long&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*) (1 samples, 0.02%)</title><rect x="569.2" y="1365" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="572.24" y="1375.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="955.8" y="1093" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="958.83" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (1 samples, 0.02%)</title><rect x="808.4" y="917" width="0.2" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="811.38" y="927.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::equal_range(unsigned long const&amp;) (3 samples, 0.05%)</title><rect x="936.0" y="1381" width="0.6" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="938.98" y="1391.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; const&amp;) (1 samples, 0.02%)</title><rect x="531.3" y="1349" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="534.34" y="1359.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (17 samples, 0.29%)</title><rect x="367.8" y="1461" width="3.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="370.81" y="1471.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (3 samples, 0.05%)</title><rect x="722.6" y="1045" width="0.6" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="725.64" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (8 samples, 0.13%)</title><rect x="618.7" y="1285" width="1.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="621.65" y="1295.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (1 samples, 0.02%)</title><rect x="786.1" y="453" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="789.15" y="463.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;0ul, std::pair&lt;unsigned long, unsigned long&gt; &gt;::type&amp;&amp; std::get&lt;0ul, unsigned long, unsigned long&gt;(std::pair&lt;unsigned long, unsigned long&gt;&amp;&amp;) (101 samples, 1.70%)</title><rect x="1061.8" y="1477" width="20.0" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1064.80" y="1487.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;unsigned long&gt;, bool&gt; std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt;(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="1172.1" y="1429" width="0.4" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="1175.14" y="1439.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base() (24 samples, 0.40%)</title><rect x="968.5" y="1445" width="4.8" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="971.53" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (1 samples, 0.02%)</title><rect x="647.0" y="1253" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="650.03" y="1263.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_get_insert_unique_pos(unsigned long const&amp;) (13 samples, 0.22%)</title><rect x="922.9" y="1397" width="2.6" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="925.88" y="1407.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (1 samples, 0.02%)</title><rect x="1154.7" y="1477" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1157.68" y="1487.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (152 samples, 2.56%)</title><rect x="766.7" y="837" width="30.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="769.70" y="847.5" >bo..</text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin() (1 samples, 0.02%)</title><rect x="540.9" y="1349" width="0.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="543.86" y="1359.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="887.8" y="1349" width="0.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="890.76" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (4 samples, 0.07%)</title><rect x="697.4" y="1141" width="0.8" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="700.44" y="1151.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (1 samples, 0.02%)</title><rect x="754.8" y="901" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="757.79" y="911.5" ></text>
</g>
<g >
<title>unsigned long* std::__niter_base&lt;unsigned long*&gt;(unsigned long*) (2 samples, 0.03%)</title><rect x="537.9" y="1333" width="0.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="540.88" y="1343.5" ></text>
</g>
<g >
<title>SpanningTree::BuildTree() (30 samples, 0.50%)</title><rect x="1168.0" y="1477" width="5.9" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="1170.97" y="1487.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (1 samples, 0.02%)</title><rect x="862.2" y="1285" width="0.2" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="865.16" y="1295.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (1 samples, 0.02%)</title><rect x="771.7" y="773" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="774.66" y="783.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (3 samples, 0.05%)</title><rect x="829.4" y="1125" width="0.6" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="832.41" y="1135.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (4 samples, 0.07%)</title><rect x="765.9" y="821" width="0.8" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="768.91" y="831.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (2 samples, 0.03%)</title><rect x="821.3" y="1077" width="0.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="824.27" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[](unsigned long) (8 samples, 0.13%)</title><rect x="960.4" y="1461" width="1.6" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="963.39" y="1471.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;unsigned long&gt;::allocate(unsigned long, void const*) (1 samples, 0.02%)</title><rect x="532.5" y="1317" width="0.2" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="535.53" y="1327.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate(unsigned long) (2 samples, 0.03%)</title><rect x="689.3" y="1125" width="0.4" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="692.30" y="1135.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;unsigned long&gt;*) (1 samples, 0.02%)</title><rect x="937.8" y="1317" width="0.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="940.77" y="1327.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; const&amp;) (1 samples, 0.02%)</title><rect x="754.0" y="869" width="0.2" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="757.00" y="879.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (1 samples, 0.02%)</title><rect x="797.9" y="821" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="800.86" y="831.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (9 samples, 0.15%)</title><rect x="837.2" y="1189" width="1.7" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="840.15" y="1199.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (12 samples, 0.20%)</title><rect x="701.2" y="1141" width="2.4" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="704.21" y="1151.5" ></text>
</g>
<g >
<title>std::vector&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::operator[](unsigned long) (2 samples, 0.03%)</title><rect x="941.5" y="1365" width="0.4" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="944.54" y="1375.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="758.4" y="853" width="0.2" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="761.37" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (4 samples, 0.07%)</title><rect x="937.8" y="1381" width="0.8" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="940.77" y="1391.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&gt;::pair&lt;std::_Rb_tree_node&lt;unsigned long&gt;*&amp;, std::_Rb_tree_node_base*&amp;&gt;(std::_Rb_tree_node&lt;unsigned long&gt;*&amp;, std::_Rb_tree_node_base*&amp;) (1 samples, 0.02%)</title><rect x="925.3" y="1381" width="0.2" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="928.26" y="1391.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (2 samples, 0.03%)</title><rect x="592.9" y="1333" width="0.4" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="595.86" y="1343.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::size() const (1 samples, 0.02%)</title><rect x="960.2" y="1461" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="963.19" y="1471.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_upper_bound(std::_Rb_tree_node&lt;unsigned long&gt;*, std::_Rb_tree_node_base*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="930.0" y="1381" width="0.2" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="933.03" y="1391.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;0ul, std::pair&lt;unsigned long, unsigned long&gt; &gt;::type&amp;&amp; std::get&lt;0ul, unsigned long, unsigned long&gt;(std::pair&lt;unsigned long, unsigned long&gt;&amp;&amp;) (22 samples, 0.37%)</title><rect x="1178.1" y="1493" width="4.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1181.09" y="1503.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (1 samples, 0.02%)</title><rect x="791.7" y="693" width="0.2" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="794.71" y="703.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (1 samples, 0.02%)</title><rect x="840.9" y="1189" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="843.92" y="1199.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::destroy&lt;unsigned long&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*) (1 samples, 0.02%)</title><rect x="569.0" y="1349" width="0.2" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="572.04" y="1359.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (1 samples, 0.02%)</title><rect x="864.1" y="1301" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="867.14" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (4 samples, 0.07%)</title><rect x="716.9" y="1077" width="0.8" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="719.89" y="1087.5" ></text>
</g>
<g >
<title>unsigned long* std::__fill_n_a&lt;unsigned long*, unsigned long, unsigned long&gt;(unsigned long*, unsigned long, unsigned long const&amp;, std::random_access_iterator_tag) (5 samples, 0.08%)</title><rect x="403.1" y="1397" width="1.0" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="406.13" y="1407.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_const_iterator&lt;unsigned long&gt;, bool&gt;::pair&lt;std::_Rb_tree_iterator&lt;unsigned long&gt;&amp;, bool&amp;&gt;(std::_Rb_tree_iterator&lt;unsigned long&gt;&amp;, bool&amp;) (1 samples, 0.02%)</title><rect x="956.0" y="1061" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="959.02" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (73 samples, 1.23%)</title><rect x="527.0" y="1381" width="14.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="529.97" y="1391.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (4 samples, 0.07%)</title><rect x="385.5" y="1429" width="0.8" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="388.47" y="1439.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator*() const (1 samples, 0.02%)</title><rect x="477.8" y="1397" width="0.2" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="480.75" y="1407.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (8 samples, 0.13%)</title><rect x="704.8" y="1109" width="1.6" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="707.78" y="1119.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (5 samples, 0.08%)</title><rect x="607.9" y="1285" width="1.0" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="610.94" y="1295.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (3 samples, 0.05%)</title><rect x="799.6" y="869" width="0.6" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="802.64" y="879.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="709.3" y="1077" width="0.2" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="712.35" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::max_size() const (26 samples, 0.44%)</title><rect x="464.1" y="1365" width="5.1" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="467.06" y="1375.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="543.8" y="1365" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="546.84" y="1375.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (4 samples, 0.07%)</title><rect x="849.3" y="1221" width="0.8" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="852.26" y="1231.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (3 samples, 0.05%)</title><rect x="631.2" y="1253" width="0.6" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="634.16" y="1263.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (6 samples, 0.10%)</title><rect x="450.6" y="1397" width="1.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="453.57" y="1407.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (2 samples, 0.03%)</title><rect x="736.9" y="965" width="0.4" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="739.93" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (1 samples, 0.02%)</title><rect x="802.2" y="869" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="805.22" y="879.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;1ul, std::pair&lt;unsigned long, unsigned long&gt; &gt;::type&amp;&amp; std::get&lt;1ul, unsigned long, unsigned long&gt;(std::pair&lt;unsigned long, unsigned long&gt;&amp;&amp;) (123 samples, 2.07%)</title><rect x="1081.8" y="1477" width="24.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="1084.84" y="1487.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;unsigned long&gt;::_Rb_tree_iterator(std::_Rb_tree_node_base*) (1 samples, 0.02%)</title><rect x="948.3" y="1269" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="951.28" y="1279.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator++() (1 samples, 0.02%)</title><rect x="831.6" y="1157" width="0.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="834.59" y="1167.5" ></text>
</g>
<g >
<title>std::vector&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::operator[](unsigned long) (9 samples, 0.15%)</title><rect x="391.2" y="1461" width="1.8" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="394.23" y="1471.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="580.8" y="1317" width="0.1" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="583.75" y="1327.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (1 samples, 0.02%)</title><rect x="759.2" y="853" width="0.2" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="762.16" y="863.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;unsigned long, unsigned long&gt; const*, std::vector&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt; &gt; &gt;::__normal_iterator(std::pair&lt;unsigned long, unsigned long&gt; const* const&amp;) (1 samples, 0.02%)</title><rect x="1153.5" y="1461" width="0.2" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1156.48" y="1471.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (1 samples, 0.02%)</title><rect x="811.6" y="997" width="0.1" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="814.55" y="1007.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (3 samples, 0.05%)</title><rect x="805.2" y="901" width="0.6" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="808.20" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (4 samples, 0.07%)</title><rect x="1171.1" y="1429" width="0.8" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="1174.15" y="1439.5" ></text>
</g>
<g >
<title>LinkedList::RemoveEdge(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="956.4" y="1093" width="0.4" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="959.42" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="693.9" y="1125" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="696.87" y="1135.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (1 samples, 0.02%)</title><rect x="718.1" y="1077" width="0.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="721.08" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (1 samples, 0.02%)</title><rect x="831.4" y="1109" width="0.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="834.40" y="1119.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (2 samples, 0.03%)</title><rect x="750.0" y="901" width="0.4" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="753.03" y="911.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;unsigned long&gt;, bool&gt; std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt;(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="954.2" y="1157" width="0.2" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="957.24" y="1167.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="746.3" y="917" width="0.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="749.26" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::operator[](unsigned long) const (1 samples, 0.02%)</title><rect x="840.5" y="1189" width="0.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="843.52" y="1199.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (7 samples, 0.12%)</title><rect x="567.5" y="1333" width="1.3" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="570.45" y="1343.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (8 samples, 0.13%)</title><rect x="718.1" y="1093" width="1.6" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="721.08" y="1103.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="948.5" y="1285" width="0.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="951.48" y="1295.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (1 samples, 0.02%)</title><rect x="952.1" y="1157" width="0.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="955.06" y="1167.5" ></text>
</g>
<g >
<title>LinkedList::AddEdge(unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="950.9" y="1285" width="0.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="953.86" y="1295.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::equal_range(unsigned long const&amp;) (3 samples, 0.05%)</title><rect x="944.1" y="1317" width="0.6" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="947.12" y="1327.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (2 samples, 0.03%)</title><rect x="760.9" y="821" width="0.4" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="763.95" y="831.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::__is_bitwise_relocatable&lt;unsigned long&gt;::value, unsigned long*&gt;::type std::__relocate_a_1&lt;unsigned long, unsigned long&gt;(unsigned long*, unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt;&amp;) (1 samples, 0.02%)</title><rect x="537.7" y="1333" width="0.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="540.69" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (6 samples, 0.10%)</title><rect x="733.4" y="1013" width="1.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="736.36" y="1023.5" ></text>
</g>
<g >
<title>std::less&lt;unsigned long&gt;::operator()(unsigned long const&amp;, unsigned long const&amp;) const (1 samples, 0.02%)</title><rect x="952.8" y="1173" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="955.85" y="1183.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="689.5" y="1093" width="0.2" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="692.50" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="706.6" y="1093" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="709.57" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt; &gt;::_M_fill_assign(unsigned long, std::pair&lt;unsigned long, unsigned long&gt; const&amp;) (17 samples, 0.29%)</title><rect x="408.5" y="1445" width="3.4" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="411.49" y="1455.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (1 samples, 0.02%)</title><rect x="833.4" y="1157" width="0.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="836.38" y="1167.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (1 samples, 0.02%)</title><rect x="771.1" y="773" width="0.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="774.07" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (1 samples, 0.02%)</title><rect x="730.6" y="1013" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="733.58" y="1023.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;unsigned long&gt;, std::_Rb_tree_const_iterator&lt;unsigned long&gt;) (2 samples, 0.03%)</title><rect x="956.8" y="1013" width="0.4" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="959.82" y="1023.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (332 samples, 5.58%)</title><rect x="744.3" y="981" width="65.9" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="747.28" y="991.5" >bool Li..</text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (4 samples, 0.07%)</title><rect x="821.7" y="1061" width="0.8" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="824.67" y="1071.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (2 samples, 0.03%)</title><rect x="827.2" y="1125" width="0.4" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="830.23" y="1135.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (3 samples, 0.05%)</title><rect x="831.0" y="1125" width="0.6" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="834.00" y="1135.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (3 samples, 0.05%)</title><rect x="729.0" y="1029" width="0.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="731.99" y="1039.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_upper_bound(std::_Rb_tree_node&lt;unsigned long&gt;*, std::_Rb_tree_node_base*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="956.4" y="1029" width="0.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="959.42" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (1 samples, 0.02%)</title><rect x="889.3" y="1349" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="892.34" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::pop_back() (1 samples, 0.02%)</title><rect x="744.1" y="965" width="0.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="747.08" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (4 samples, 0.07%)</title><rect x="710.5" y="1093" width="0.8" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="713.54" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (1 samples, 0.02%)</title><rect x="932.8" y="1333" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="935.81" y="1343.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (4 samples, 0.07%)</title><rect x="832.0" y="1157" width="0.8" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="834.99" y="1167.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="478.5" y="1381" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="481.55" y="1391.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (4 samples, 0.07%)</title><rect x="702.6" y="1109" width="0.8" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="705.60" y="1119.5" ></text>
</g>
<g >
<title>LinkedList::RemoveEdge(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="952.5" y="1253" width="0.3" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="955.45" y="1263.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (1 samples, 0.02%)</title><rect x="753.2" y="901" width="0.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="756.21" y="911.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (1,240 samples, 20.85%)</title><rect x="620.4" y="1317" width="246.1" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="623.44" y="1327.5" >bool LinkedList::DepthFirstSearc..</text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (1 samples, 0.02%)</title><rect x="476.0" y="1381" width="0.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="478.97" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (1 samples, 0.02%)</title><rect x="780.6" y="645" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="783.59" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::pop_back() (6 samples, 0.10%)</title><rect x="963.4" y="1461" width="1.2" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="966.37" y="1471.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator++() (3 samples, 0.05%)</title><rect x="814.9" y="1029" width="0.6" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="817.92" y="1039.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="807.8" y="933" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="810.78" y="943.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (36 samples, 0.61%)</title><rect x="621.0" y="1301" width="7.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="624.04" y="1311.5" ></text>
</g>
<g >
<title>DisjointSetUnion::InSameSet(unsigned long, unsigned long) (41 samples, 0.69%)</title><rect x="428.9" y="1461" width="8.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="431.93" y="1471.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (1 samples, 0.02%)</title><rect x="862.4" y="1269" width="0.2" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="865.35" y="1279.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator++() (1 samples, 0.02%)</title><rect x="804.4" y="917" width="0.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="807.41" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (31 samples, 0.52%)</title><rect x="574.8" y="1349" width="6.1" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="577.80" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (1 samples, 0.02%)</title><rect x="771.5" y="773" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="774.46" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_relocate(unsigned long*, unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt;&amp;) (1 samples, 0.02%)</title><rect x="753.4" y="885" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="756.40" y="895.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (2 samples, 0.03%)</title><rect x="575.0" y="1333" width="0.4" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="577.99" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (2 samples, 0.03%)</title><rect x="775.6" y="725" width="0.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="778.63" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="659.9" y="1221" width="0.4" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="662.93" y="1231.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="738.5" y="965" width="0.4" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="741.52" y="975.5" ></text>
</g>
<g >
<title>SpanningTree::Propagate(unsigned long) (35 samples, 0.59%)</title><rect x="952.1" y="1269" width="6.9" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="955.06" y="1279.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="956.4" y="1061" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="959.42" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (1 samples, 0.02%)</title><rect x="687.5" y="1157" width="0.2" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="690.52" y="1167.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::insert(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="952.8" y="1221" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="955.85" y="1231.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (2 samples, 0.03%)</title><rect x="767.5" y="789" width="0.4" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="770.49" y="799.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_iterator&lt;unsigned long&gt; const&amp;) (1 samples, 0.02%)</title><rect x="948.9" y="1253" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="951.88" y="1263.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;unsigned long&gt;, bool&gt; std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt;(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="950.9" y="1253" width="0.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="953.86" y="1263.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_S_key(std::_Rb_tree_node&lt;unsigned long&gt; const*) (2 samples, 0.03%)</title><rect x="932.6" y="1365" width="0.4" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="935.61" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (4 samples, 0.07%)</title><rect x="701.6" y="1125" width="0.8" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="704.61" y="1135.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (4 samples, 0.07%)</title><rect x="478.0" y="1397" width="0.7" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="480.95" y="1407.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (6 samples, 0.10%)</title><rect x="900.5" y="1381" width="1.1" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="903.46" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (1 samples, 0.02%)</title><rect x="680.6" y="1173" width="0.2" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="683.57" y="1183.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (2 samples, 0.03%)</title><rect x="514.7" y="1397" width="0.4" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="517.67" y="1407.5" ></text>
</g>
<g >
<title>unsigned long* std::fill_n&lt;unsigned long*, unsigned long, unsigned long&gt;(unsigned long*, unsigned long, unsigned long const&amp;) (12 samples, 0.20%)</title><rect x="414.0" y="1429" width="2.4" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="417.05" y="1439.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (1 samples, 0.02%)</title><rect x="774.8" y="757" width="0.2" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="777.84" y="767.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (8 samples, 0.13%)</title><rect x="735.9" y="1013" width="1.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="738.94" y="1023.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (1 samples, 0.02%)</title><rect x="947.1" y="1237" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="950.09" y="1247.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::equal_range(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="958.2" y="949" width="0.2" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="961.21" y="959.5" ></text>
</g>
<g >
<title>LinkedList::RemoveEdge(unsigned long, unsigned long) (3 samples, 0.05%)</title><rect x="950.1" y="1301" width="0.6" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="953.07" y="1311.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="953.0" y="1205" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="956.05" y="1215.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;unsigned long&gt;::deallocate(unsigned long*, unsigned long) (2 samples, 0.03%)</title><rect x="971.7" y="1397" width="0.4" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="974.70" y="1407.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_check_len(unsigned long, char const*) const (7 samples, 0.12%)</title><rect x="625.6" y="1253" width="1.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="628.60" y="1263.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (6 samples, 0.10%)</title><rect x="835.6" y="1173" width="1.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="838.56" y="1183.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="843.9" y="1173" width="0.2" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="846.90" y="1183.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (6 samples, 0.10%)</title><rect x="866.5" y="1317" width="1.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="869.52" y="1327.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (1 samples, 0.02%)</title><rect x="879.6" y="1317" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="882.62" y="1327.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (3 samples, 0.05%)</title><rect x="820.5" y="1077" width="0.6" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="823.48" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (3 samples, 0.05%)</title><rect x="764.1" y="837" width="0.6" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="767.12" y="847.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (4 samples, 0.07%)</title><rect x="905.2" y="1397" width="0.8" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="908.22" y="1407.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (10 samples, 0.17%)</title><rect x="712.7" y="1109" width="2.0" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="715.72" y="1119.5" ></text>
</g>
<g >
<title>LinkedList::RemoveEdge(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="948.5" y="1317" width="0.4" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="951.48" y="1327.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (1 samples, 0.02%)</title><rect x="802.2" y="885" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="805.22" y="895.5" ></text>
</g>
<g >
<title>all (5,946 samples, 100%)</title><rect x="10.0" y="1557" width="1180.0" height="15.0" fill="rgb(230,93,93)" rx="2" ry="2" />
<text  x="13.00" y="1567.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_S_key(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="949.7" y="1237" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="952.67" y="1247.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_upper_bound(std::_Rb_tree_node&lt;unsigned long&gt;*, std::_Rb_tree_node_base*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="939.6" y="1333" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="942.55" y="1343.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (15 samples, 0.25%)</title><rect x="383.5" y="1461" width="3.0" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="386.49" y="1471.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="697.2" y="1125" width="0.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="700.24" y="1135.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;unsigned long&gt;::_Rb_tree_iterator(std::_Rb_tree_node_base*) (1 samples, 0.02%)</title><rect x="936.4" y="1349" width="0.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="939.38" y="1359.5" ></text>
</g>
<g >
<title>std::_Identity&lt;unsigned long&gt;::operator()(unsigned long const&amp;) const (1 samples, 0.02%)</title><rect x="954.2" y="1093" width="0.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="957.24" y="1103.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (1 samples, 0.02%)</title><rect x="829.2" y="1141" width="0.2" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="832.21" y="1151.5" ></text>
</g>
<g >
<title>DisjointSetUnion::Get(unsigned long) (1 samples, 0.02%)</title><rect x="428.7" y="1461" width="0.2" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="431.74" y="1471.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (6 samples, 0.10%)</title><rect x="674.4" y="1173" width="1.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="677.42" y="1183.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (19 samples, 0.32%)</title><rect x="616.5" y="1301" width="3.7" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="619.47" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_max_size(std::allocator&lt;unsigned long&gt; const&amp;) (1 samples, 0.02%)</title><rect x="534.9" y="1333" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="537.91" y="1343.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (3 samples, 0.05%)</title><rect x="889.9" y="1333" width="0.6" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="892.94" y="1343.5" ></text>
</g>
<g >
<title>SpanningTree::Propagate(unsigned long) (63 samples, 1.06%)</title><rect x="946.5" y="1349" width="12.5" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="949.50" y="1359.5" ></text>
</g>
<g >
<title>__gnu_cxx::__enable_if&lt;__is_scalar&lt;unsigned long&gt;::__value, void&gt;::__type std::__fill_a1&lt;unsigned long*, unsigned long&gt;(unsigned long*, unsigned long*, unsigned long const&amp;) (10 samples, 0.17%)</title><rect x="414.4" y="1381" width="2.0" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="417.45" y="1391.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (4 samples, 0.07%)</title><rect x="764.7" y="837" width="0.8" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="767.72" y="847.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (2 samples, 0.03%)</title><rect x="822.5" y="1077" width="0.4" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="825.47" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (23 samples, 0.39%)</title><rect x="516.1" y="1397" width="4.5" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="519.05" y="1407.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_get_insert_unique_pos(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="946.7" y="1285" width="0.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="949.70" y="1295.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (1 samples, 0.02%)</title><rect x="799.2" y="853" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="802.25" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="836.6" y="1141" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="839.56" y="1151.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (8 samples, 0.13%)</title><rect x="841.7" y="1205" width="1.6" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="844.72" y="1215.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (1 samples, 0.02%)</title><rect x="845.1" y="1173" width="0.2" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="848.09" y="1183.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="646.0" y="1237" width="0.4" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="649.04" y="1247.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (4 samples, 0.07%)</title><rect x="698.4" y="1125" width="0.8" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="701.43" y="1135.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (344 samples, 5.79%)</title><rect x="276.5" y="1445" width="68.3" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="279.52" y="1455.5" >std::ve..</text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate(unsigned long*, unsigned long) (1 samples, 0.02%)</title><rect x="967.3" y="1445" width="0.2" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="970.34" y="1455.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (1,316 samples, 22.13%)</title><rect x="609.1" y="1333" width="261.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="612.13" y="1343.5" >bool LinkedList::DepthFirstSearch&lt;..</text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="738.5" y="981" width="0.4" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="741.52" y="991.5" ></text>
</g>
<g >
<title>std::_Identity&lt;unsigned long&gt;::operator()(unsigned long const&amp;) const (1 samples, 0.02%)</title><rect x="922.5" y="1397" width="0.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="925.49" y="1407.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="946.1" y="1317" width="0.4" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="949.10" y="1327.5" ></text>
</g>
<g >
<title>DisjointSetUnion::Get(unsigned long) (1 samples, 0.02%)</title><rect x="1171.9" y="1445" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="1174.94" y="1455.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;unsigned long&gt;::_Rb_tree_iterator(std::_Rb_tree_node_base*) (1 samples, 0.02%)</title><rect x="955.6" y="1077" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="958.63" y="1087.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (1 samples, 0.02%)</title><rect x="811.2" y="965" width="0.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="814.15" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="774.0" y="725" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="777.04" y="735.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::max&lt;unsigned long&gt;(unsigned long const&amp;, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="578.2" y="1301" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="581.17" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::pop_back() (2 samples, 0.03%)</title><rect x="706.8" y="1125" width="0.4" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="709.77" y="1135.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (2 samples, 0.03%)</title><rect x="792.3" y="709" width="0.4" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="795.30" y="719.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (3 samples, 0.05%)</title><rect x="956.8" y="1045" width="0.6" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="959.82" y="1055.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;unsigned long&gt;, bool&gt; std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt;(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="952.8" y="1205" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="955.85" y="1215.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="756.0" y="853" width="0.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="758.98" y="863.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (6 samples, 0.10%)</title><rect x="768.9" y="805" width="1.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="771.88" y="815.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator++() (1 samples, 0.02%)</title><rect x="863.3" y="1301" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="866.35" y="1311.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (14 samples, 0.24%)</title><rect x="785.4" y="549" width="2.7" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="788.35" y="559.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (146 samples, 2.46%)</title><rect x="447.8" y="1429" width="29.0" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="450.79" y="1439.5" >Sp..</text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="887.0" y="1349" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="889.96" y="1359.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator*() const (3 samples, 0.05%)</title><rect x="736.1" y="981" width="0.6" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="739.14" y="991.5" ></text>
</g>
<g >
<title>LinkedList::AddEdge(unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="938.8" y="1397" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="941.76" y="1407.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (16 samples, 0.27%)</title><rect x="651.8" y="1253" width="3.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="654.80" y="1263.5" ></text>
</g>
<g >
<title>unsigned long* std::__niter_base&lt;unsigned long*&gt;(unsigned long*) (3 samples, 0.05%)</title><rect x="540.3" y="1317" width="0.6" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="543.27" y="1327.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (1 samples, 0.02%)</title><rect x="798.3" y="805" width="0.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="801.25" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() (1 samples, 0.02%)</title><rect x="945.9" y="1221" width="0.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="948.90" y="1231.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (3 samples, 0.05%)</title><rect x="728.4" y="1029" width="0.6" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="731.40" y="1039.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="915.1" y="1429" width="0.2" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="918.14" y="1439.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (1 samples, 0.02%)</title><rect x="824.6" y="1109" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="827.65" y="1119.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (1 samples, 0.02%)</title><rect x="628.0" y="1285" width="0.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="630.98" y="1295.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (2 samples, 0.03%)</title><rect x="784.6" y="549" width="0.4" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="787.56" y="559.5" ></text>
</g>
<g >
<title>SpanningTree::Propagate(unsigned long) (83 samples, 1.40%)</title><rect x="942.5" y="1381" width="16.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="945.53" y="1391.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="826.4" y="1077" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="829.43" y="1087.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (1 samples, 0.02%)</title><rect x="930.4" y="1365" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="933.42" y="1375.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;unsigned long&gt;, bool&gt; std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt;(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="952.1" y="1221" width="0.4" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="955.06" y="1231.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_Tp_allocator() (1 samples, 0.02%)</title><rect x="689.9" y="1125" width="0.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="692.90" y="1135.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_S_key(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="951.5" y="1205" width="0.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="954.46" y="1215.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_mbegin() const (1 samples, 0.02%)</title><rect x="952.7" y="1173" width="0.1" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="955.65" y="1183.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (4 samples, 0.07%)</title><rect x="847.1" y="1237" width="0.8" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="850.07" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt; &gt;::end() const (1 samples, 0.02%)</title><rect x="1153.5" y="1477" width="0.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="1156.48" y="1487.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (487 samples, 8.19%)</title><rect x="723.8" y="1077" width="96.7" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="726.83" y="1087.5" >bool Linked..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (1 samples, 0.02%)</title><rect x="780.4" y="645" width="0.2" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="783.39" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (3 samples, 0.05%)</title><rect x="505.5" y="1349" width="0.6" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="508.54" y="1359.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::destroy&lt;unsigned long&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*) (1 samples, 0.02%)</title><rect x="679.4" y="1173" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="682.38" y="1183.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::insert(unsigned long const&amp;) (4 samples, 0.07%)</title><rect x="946.7" y="1317" width="0.8" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="949.70" y="1327.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (1 samples, 0.02%)</title><rect x="722.0" y="1061" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="725.05" y="1071.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (1 samples, 0.02%)</title><rect x="816.3" y="1029" width="0.2" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="819.31" y="1039.5" ></text>
</g>
<g >
<title>_int_free (17 samples, 0.29%)</title><rect x="24.1" y="1509" width="3.4" height="15.0" fill="rgb(252,127,127)" rx="2" ry="2" />
<text  x="27.09" y="1519.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (5 samples, 0.08%)</title><rect x="777.2" y="709" width="1.0" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="780.22" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (1 samples, 0.02%)</title><rect x="771.7" y="757" width="0.2" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="774.66" y="767.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="947.5" y="1301" width="0.4" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="950.49" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (31 samples, 0.52%)</title><rect x="562.7" y="1365" width="6.1" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="565.69" y="1375.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (9 samples, 0.15%)</title><rect x="630.0" y="1269" width="1.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="632.97" y="1279.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (1 samples, 0.02%)</title><rect x="774.8" y="741" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="777.84" y="751.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::destroy&lt;unsigned long&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*) (1 samples, 0.02%)</title><rect x="694.7" y="1141" width="0.2" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="697.66" y="1151.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (2 samples, 0.03%)</title><rect x="817.3" y="1045" width="0.4" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="820.31" y="1055.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="660.1" y="1205" width="0.2" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="663.13" y="1215.5" ></text>
</g>
<g >
<title>unsigned long&amp;&amp; std::__pair_get&lt;0ul&gt;::__move_get&lt;unsigned long, unsigned long&gt;(std::pair&lt;unsigned long, unsigned long&gt;&amp;&amp;) (1 samples, 0.02%)</title><rect x="1173.5" y="1461" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1176.53" y="1471.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (1 samples, 0.02%)</title><rect x="833.2" y="1141" width="0.2" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="836.18" y="1151.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (3 samples, 0.05%)</title><rect x="585.7" y="1317" width="0.6" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="588.71" y="1327.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (2 samples, 0.03%)</title><rect x="840.1" y="1189" width="0.4" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="843.13" y="1199.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (7 samples, 0.12%)</title><rect x="786.3" y="485" width="1.4" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="789.35" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (1 samples, 0.02%)</title><rect x="789.3" y="629" width="0.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="792.32" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (1 samples, 0.02%)</title><rect x="824.5" y="1093" width="0.1" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="827.45" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (2 samples, 0.03%)</title><rect x="597.6" y="1333" width="0.4" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="600.62" y="1343.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;* std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_create_node&lt;unsigned long const&amp;&gt;(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="952.3" y="1189" width="0.2" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="955.25" y="1199.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator*() const (2 samples, 0.03%)</title><rect x="739.3" y="965" width="0.4" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="742.31" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator*() const (1 samples, 0.02%)</title><rect x="683.2" y="1157" width="0.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="686.15" y="1167.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long) (1 samples, 0.02%)</title><rect x="973.1" y="1429" width="0.2" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="976.09" y="1439.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (4 samples, 0.07%)</title><rect x="556.1" y="1365" width="0.8" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="559.14" y="1375.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator*() const (1 samples, 0.02%)</title><rect x="715.1" y="1077" width="0.2" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="718.10" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="866.3" y="1301" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="869.32" y="1311.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="783.4" y="565" width="0.2" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="786.37" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="827.0" y="1125" width="0.2" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="830.03" y="1135.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::clear() (1 samples, 0.02%)</title><rect x="946.3" y="1285" width="0.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="949.30" y="1295.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="637.1" y="1237" width="0.4" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="640.11" y="1247.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base() (1 samples, 0.02%)</title><rect x="959.6" y="1461" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="962.60" y="1471.5" ></text>
</g>
<g >
<title>SpanningTree::Propagate(unsigned long) (51 samples, 0.86%)</title><rect x="948.9" y="1317" width="10.1" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="951.88" y="1327.5" ></text>
</g>
<g >
<title>std::__size_to_integer(unsigned long) (1 samples, 0.02%)</title><rect x="408.5" y="1413" width="0.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="411.49" y="1423.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (11 samples, 0.18%)</title><rect x="616.5" y="1285" width="2.2" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="619.47" y="1295.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (1 samples, 0.02%)</title><rect x="847.7" y="1221" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="850.67" y="1231.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_Tp_allocator() const (2 samples, 0.03%)</title><rect x="463.7" y="1365" width="0.4" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="466.66" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (2 samples, 0.03%)</title><rect x="604.0" y="1317" width="0.4" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="606.97" y="1327.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="824.3" y="1061" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="827.25" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (2 samples, 0.03%)</title><rect x="528.6" y="1365" width="0.4" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="531.56" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (17 samples, 0.29%)</title><rect x="582.9" y="1349" width="3.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="585.93" y="1359.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::size() const (1 samples, 0.02%)</title><rect x="959.2" y="1429" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="962.20" y="1439.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (11 samples, 0.18%)</title><rect x="670.5" y="1205" width="2.1" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="673.45" y="1215.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="476.2" y="1381" width="0.4" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="479.17" y="1391.5" ></text>
</g>
<g >
<title>int* std::__fill_n_a&lt;int*, unsigned long, int&gt;(int*, unsigned long, int const&amp;, std::random_access_iterator_tag) (4 samples, 0.07%)</title><rect x="407.7" y="1413" width="0.8" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="410.70" y="1423.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="952.5" y="1237" width="0.3" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="955.45" y="1247.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::equal_range(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="948.7" y="1269" width="0.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="951.68" y="1279.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;0ul, std::pair&lt;unsigned long, unsigned long&gt; &gt;::type&amp;&amp; std::get&lt;0ul, unsigned long, unsigned long&gt;(std::pair&lt;unsigned long, unsigned long&gt;&amp;&amp;) (2 samples, 0.03%)</title><rect x="1173.1" y="1461" width="0.4" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="1176.13" y="1471.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (2 samples, 0.03%)</title><rect x="766.3" y="789" width="0.4" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="769.30" y="799.5" ></text>
</g>
<g >
<title>std::_Identity&lt;unsigned long&gt;::operator()(unsigned long const&amp;) const (2 samples, 0.03%)</title><rect x="954.6" y="1093" width="0.4" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="957.64" y="1103.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::min&lt;unsigned long&gt;(unsigned long const&amp;, unsigned long const&amp;) (8 samples, 0.13%)</title><rect x="467.6" y="1333" width="1.6" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="470.63" y="1343.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (2 samples, 0.03%)</title><rect x="924.1" y="1365" width="0.4" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="927.07" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[](unsigned long) (238 samples, 4.00%)</title><rect x="1106.3" y="1477" width="47.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="1109.25" y="1487.5" >std:..</text>
</g>
<g >
<title>__gnu_cxx::__enable_if&lt;__is_scalar&lt;unsigned long&gt;::__value, void&gt;::__type std::__fill_a1&lt;unsigned long*, unsigned long&gt;(unsigned long*, unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="403.1" y="1381" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="406.13" y="1391.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (2 samples, 0.03%)</title><rect x="838.1" y="1157" width="0.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="841.14" y="1167.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="748.2" y="901" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="751.24" y="911.5" ></text>
</g>
<g >
<title>__libc_start_call_main (5,808 samples, 97.68%)</title><rect x="35.2" y="1525" width="1152.6" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text  x="38.20" y="1535.5" >__libc_start_call_main</text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (1 samples, 0.02%)</title><rect x="445.0" y="1445" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="448.01" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (1 samples, 0.02%)</title><rect x="703.4" y="1125" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="706.39" y="1135.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (3 samples, 0.05%)</title><rect x="957.6" y="1013" width="0.6" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="960.61" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (2 samples, 0.03%)</title><rect x="745.1" y="949" width="0.4" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="748.07" y="959.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;unsigned long&gt;::_Rb_tree_iterator(std::_Rb_tree_node_base*) (1 samples, 0.02%)</title><rect x="946.1" y="1269" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="949.10" y="1279.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_relocate(unsigned long*, unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt;&amp;) (11 samples, 0.18%)</title><rect x="578.4" y="1317" width="2.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="581.37" y="1327.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="656.2" y="1221" width="0.2" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="659.16" y="1231.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (7 samples, 0.12%)</title><rect x="640.9" y="1253" width="1.4" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="643.88" y="1263.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="813.9" y="1013" width="0.2" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="816.93" y="1023.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (6 samples, 0.10%)</title><rect x="884.2" y="1365" width="1.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="887.18" y="1375.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;unsigned long, unsigned long&gt; const*, std::vector&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt; &gt; &gt;::operator++() (17 samples, 0.29%)</title><rect x="1174.3" y="1493" width="3.4" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="1177.32" y="1503.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_begin() (1 samples, 0.02%)</title><rect x="952.7" y="1189" width="0.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="955.65" y="1199.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (3 samples, 0.05%)</title><rect x="853.4" y="1253" width="0.6" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="856.42" y="1263.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::destroy&lt;unsigned long&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*) (1 samples, 0.02%)</title><rect x="730.8" y="1013" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="733.78" y="1023.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base() (10 samples, 0.17%)</title><rect x="920.3" y="1429" width="2.0" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="923.30" y="1439.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (3 samples, 0.05%)</title><rect x="721.1" y="1061" width="0.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="724.06" y="1071.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() (3 samples, 0.05%)</title><rect x="928.2" y="1381" width="0.6" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="931.24" y="1391.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (3 samples, 0.05%)</title><rect x="807.4" y="949" width="0.6" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="810.38" y="959.5" ></text>
</g>
<g >
<title>DisjointSetUnion::Get(unsigned long) (41 samples, 0.69%)</title><rect x="428.9" y="1445" width="8.2" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="431.93" y="1455.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (21 samples, 0.35%)</title><rect x="682.0" y="1189" width="4.1" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="684.96" y="1199.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::~allocator() (4 samples, 0.07%)</title><rect x="972.3" y="1429" width="0.8" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="975.30" y="1439.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (2 samples, 0.03%)</title><rect x="637.5" y="1269" width="0.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="640.51" y="1279.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::equal_range(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="954.6" y="1125" width="0.4" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="957.64" y="1135.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (3 samples, 0.05%)</title><rect x="827.6" y="1125" width="0.6" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="830.63" y="1135.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (7 samples, 0.12%)</title><rect x="857.0" y="1253" width="1.4" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="860.00" y="1263.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (2 samples, 0.03%)</title><rect x="732.0" y="1013" width="0.4" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="734.97" y="1023.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (3 samples, 0.05%)</title><rect x="786.7" y="229" width="0.6" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="789.74" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_Tp_allocator() (3 samples, 0.05%)</title><rect x="967.5" y="1445" width="0.6" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="970.53" y="1455.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (6 samples, 0.10%)</title><rect x="372.2" y="1461" width="1.2" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="375.18" y="1471.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (5 samples, 0.08%)</title><rect x="485.5" y="1365" width="1.0" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="488.49" y="1375.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::~_Vector_impl() (2 samples, 0.03%)</title><rect x="968.1" y="1445" width="0.4" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="971.13" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (2 samples, 0.03%)</title><rect x="653.2" y="1237" width="0.4" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="656.19" y="1247.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::equal_range(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="955.4" y="1093" width="0.4" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="958.43" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (1 samples, 0.02%)</title><rect x="924.3" y="1349" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="927.27" y="1359.5" ></text>
</g>
<g >
<title>LinkedList::AddEdge(unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="952.8" y="1237" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="955.85" y="1247.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_Tp_allocator() const (3 samples, 0.05%)</title><rect x="498.8" y="1333" width="0.6" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="501.79" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (2 samples, 0.03%)</title><rect x="673.6" y="1189" width="0.4" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="676.63" y="1199.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (3 samples, 0.05%)</title><rect x="803.2" y="901" width="0.6" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="806.22" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base() const (2 samples, 0.03%)</title><rect x="491.8" y="1349" width="0.4" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="494.84" y="1359.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator++() (2 samples, 0.03%)</title><rect x="861.4" y="1285" width="0.4" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="864.36" y="1295.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (2 samples, 0.03%)</title><rect x="726.6" y="1029" width="0.4" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="729.61" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::pop_back() (1 samples, 0.02%)</title><rect x="730.8" y="1029" width="0.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="733.78" y="1039.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (1 samples, 0.02%)</title><rect x="797.9" y="837" width="0.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="800.86" y="847.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (19 samples, 0.32%)</title><rect x="784.6" y="597" width="3.7" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="787.56" y="607.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (9 samples, 0.15%)</title><rect x="748.6" y="949" width="1.8" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="751.64" y="959.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="479.5" y="1381" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="482.54" y="1391.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator++() (10 samples, 0.17%)</title><rect x="890.5" y="1381" width="2.0" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="893.53" y="1391.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (4 samples, 0.07%)</title><rect x="726.2" y="1061" width="0.8" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="729.22" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (2 samples, 0.03%)</title><rect x="370.8" y="1413" width="0.4" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="373.79" y="1423.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="620.0" y="1269" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="623.04" y="1279.5" ></text>
</g>
<g >
<title>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;) (2 samples, 0.03%)</title><rect x="929.0" y="1381" width="0.4" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="932.03" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (2 samples, 0.03%)</title><rect x="718.9" y="1061" width="0.4" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="721.87" y="1071.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (6 samples, 0.10%)</title><rect x="755.8" y="901" width="1.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="758.79" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator*() const (9 samples, 0.15%)</title><rect x="544.0" y="1365" width="1.8" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="547.04" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (3 samples, 0.05%)</title><rect x="723.2" y="1045" width="0.6" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="726.24" y="1055.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (1 samples, 0.02%)</title><rect x="862.4" y="1285" width="0.2" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="865.35" y="1295.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (2,185 samples, 36.75%)</title><rect x="479.7" y="1429" width="433.7" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="482.74" y="1439.5" >bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(u..</text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (5 samples, 0.08%)</title><rect x="744.5" y="965" width="1.0" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="747.47" y="975.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (4 samples, 0.07%)</title><rect x="786.5" y="309" width="0.8" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="789.55" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_S_key(std::_Rb_tree_node&lt;unsigned long&gt; const*) (2 samples, 0.03%)</title><rect x="940.9" y="1301" width="0.4" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="943.94" y="1311.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_Tp_allocator() const (1 samples, 0.02%)</title><rect x="464.3" y="1349" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="467.26" y="1359.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (2 samples, 0.03%)</title><rect x="829.6" y="1109" width="0.4" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="832.61" y="1119.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (3 samples, 0.05%)</title><rect x="658.3" y="1205" width="0.6" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="661.35" y="1215.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (1 samples, 0.02%)</title><rect x="765.7" y="821" width="0.2" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="768.71" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="484.3" y="1381" width="0.2" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="487.30" y="1391.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_Tp_allocator() (2 samples, 0.03%)</title><rect x="450.0" y="1397" width="0.4" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="452.97" y="1407.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (2 samples, 0.03%)</title><rect x="820.1" y="1061" width="0.4" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="823.08" y="1071.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::max&lt;unsigned long&gt;(unsigned long const&amp;, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="626.8" y="1237" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="629.79" y="1247.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_get_insert_unique_pos(unsigned long const&amp;) (5 samples, 0.08%)</title><rect x="932.4" y="1381" width="1.0" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="935.41" y="1391.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;unsigned long&gt; &gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;std::_Rb_tree_node&lt;unsigned long&gt; &gt;&amp;, unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="927.4" y="1349" width="0.2" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="930.45" y="1359.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (3 samples, 0.05%)</title><rect x="781.8" y="629" width="0.6" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="784.78" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (1 samples, 0.02%)</title><rect x="800.6" y="853" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="803.64" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (1 samples, 0.02%)</title><rect x="945.1" y="1253" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="948.11" y="1263.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;unsigned long&gt;, bool&gt;::pair&lt;std::_Rb_tree_iterator&lt;unsigned long&gt;, bool&gt;(std::_Rb_tree_iterator&lt;unsigned long&gt;&amp;&amp;, bool&amp;&amp;) (1 samples, 0.02%)</title><rect x="935.2" y="1381" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="938.19" y="1391.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (1 samples, 0.02%)</title><rect x="850.6" y="1253" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="853.65" y="1263.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (2 samples, 0.03%)</title><rect x="854.2" y="1253" width="0.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="857.22" y="1263.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (1 samples, 0.02%)</title><rect x="792.7" y="757" width="0.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="795.70" y="767.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (5 samples, 0.08%)</title><rect x="844.3" y="1221" width="1.0" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="847.30" y="1231.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (6 samples, 0.10%)</title><rect x="653.6" y="1237" width="1.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="656.58" y="1247.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator*() const (1 samples, 0.02%)</title><rect x="765.9" y="805" width="0.2" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="768.91" y="815.5" ></text>
</g>
<g >
<title>std::_Identity&lt;unsigned long&gt;::operator()(unsigned long const&amp;) const (2 samples, 0.03%)</title><rect x="934.0" y="1333" width="0.4" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="937.00" y="1343.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (14 samples, 0.24%)</title><rect x="695.5" y="1157" width="2.7" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="698.46" y="1167.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (2 samples, 0.03%)</title><rect x="751.6" y="917" width="0.4" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="754.62" y="927.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (3 samples, 0.05%)</title><rect x="896.3" y="1381" width="0.6" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="899.29" y="1391.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_S_key(std::_Rb_tree_node&lt;unsigned long&gt; const*) (2 samples, 0.03%)</title><rect x="954.6" y="1109" width="0.4" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="957.64" y="1119.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (19 samples, 0.32%)</title><rect x="588.1" y="1349" width="3.8" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="591.09" y="1359.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::equal_range(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="956.4" y="1045" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="959.42" y="1055.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (2 samples, 0.03%)</title><rect x="801.6" y="869" width="0.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="804.63" y="879.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (2 samples, 0.03%)</title><rect x="887.4" y="1349" width="0.4" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="890.36" y="1359.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (4 samples, 0.07%)</title><rect x="451.0" y="1381" width="0.8" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="453.96" y="1391.5" ></text>
</g>
<g >
<title>LinkedList::AddEdge(unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="957.4" y="1045" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="960.41" y="1055.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (4 samples, 0.07%)</title><rect x="786.5" y="373" width="0.8" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="789.55" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (1 samples, 0.02%)</title><rect x="795.1" y="789" width="0.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="798.08" y="799.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="829.0" y="1141" width="0.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="832.01" y="1151.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (2 samples, 0.03%)</title><rect x="897.3" y="1397" width="0.4" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="900.28" y="1407.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::equal_range(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="947.7" y="1285" width="0.2" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="950.69" y="1295.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (4 samples, 0.07%)</title><rect x="964.6" y="1461" width="0.8" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="967.56" y="1471.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate(std::allocator&lt;unsigned long&gt;&amp;, unsigned long) (2 samples, 0.03%)</title><rect x="624.4" y="1237" width="0.4" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="627.41" y="1247.5" ></text>
</g>
<g >
<title>__memcpy_avx_unaligned_erms (2 samples, 0.03%)</title><rect x="691.3" y="1093" width="0.4" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="694.29" y="1103.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&amp;) const (1 samples, 0.02%)</title><rect x="959.4" y="1461" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="962.40" y="1471.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator*() const (1 samples, 0.02%)</title><rect x="662.1" y="1205" width="0.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="665.12" y="1215.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (1 samples, 0.02%)</title><rect x="919.7" y="1445" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="922.71" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (3 samples, 0.05%)</title><rect x="732.4" y="1013" width="0.6" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="735.37" y="1023.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (1 samples, 0.02%)</title><rect x="846.5" y="1221" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="849.48" y="1231.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (2 samples, 0.03%)</title><rect x="794.5" y="773" width="0.4" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="797.48" y="783.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator++() (1 samples, 0.02%)</title><rect x="818.9" y="1061" width="0.2" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="821.89" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (1 samples, 0.02%)</title><rect x="930.4" y="1349" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="933.42" y="1359.5" ></text>
</g>
<g >
<title>SpanningTree::Propagate(unsigned long) (6 samples, 0.10%)</title><rect x="957.4" y="1061" width="1.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="960.41" y="1071.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator++() (1 samples, 0.02%)</title><rect x="802.4" y="901" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="805.42" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator*() const (2 samples, 0.03%)</title><rect x="704.4" y="1109" width="0.4" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="707.39" y="1119.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (1 samples, 0.02%)</title><rect x="869.9" y="1301" width="0.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="872.90" y="1311.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (1 samples, 0.02%)</title><rect x="924.1" y="1349" width="0.2" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="927.07" y="1359.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="575.6" y="1317" width="0.4" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="578.59" y="1327.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="732.8" y="997" width="0.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="735.76" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (1 samples, 0.02%)</title><rect x="844.1" y="1205" width="0.2" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="847.10" y="1215.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (2 samples, 0.03%)</title><rect x="865.9" y="1285" width="0.4" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="868.93" y="1295.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (1 samples, 0.02%)</title><rect x="833.6" y="1157" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="836.58" y="1167.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (1 samples, 0.02%)</title><rect x="786.1" y="469" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="789.15" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::pop_back() (2 samples, 0.03%)</title><rect x="568.8" y="1365" width="0.4" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="571.84" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (14 samples, 0.24%)</title><rect x="556.9" y="1365" width="2.8" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="559.94" y="1375.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (4 samples, 0.07%)</title><rect x="786.5" y="357" width="0.8" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="789.55" y="367.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;unsigned long*&gt;(unsigned long*, unsigned long*) (2 samples, 0.03%)</title><rect x="973.9" y="1429" width="0.4" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="976.88" y="1439.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::size() const (12 samples, 0.20%)</title><rect x="405.1" y="1445" width="2.4" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="408.12" y="1455.5" ></text>
</g>
<g >
<title>SpanningTree::Propagate(unsigned long) (9 samples, 0.15%)</title><rect x="956.8" y="1093" width="1.8" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="959.82" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base() const (1 samples, 0.02%)</title><rect x="576.6" y="1317" width="0.2" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="579.58" y="1327.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (2 samples, 0.03%)</title><rect x="865.9" y="1301" width="0.4" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="868.93" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (12 samples, 0.20%)</title><rect x="676.8" y="1189" width="2.4" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="679.80" y="1199.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (7 samples, 0.12%)</title><rect x="729.6" y="1045" width="1.4" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="732.59" y="1055.5" ></text>
</g>
<g >
<title>LinkedList::RemoveEdge(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="955.4" y="1141" width="0.4" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="958.43" y="1151.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (1 samples, 0.02%)</title><rect x="647.4" y="1253" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="650.43" y="1263.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_construct_node&lt;unsigned long const&amp;&gt;(std::_Rb_tree_node&lt;unsigned long&gt;*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="945.9" y="1253" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="948.90" y="1263.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="787.1" y="37" width="0.2" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="790.14" y="47.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (7 samples, 0.12%)</title><rect x="590.1" y="1333" width="1.4" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="593.08" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::operator[](unsigned long) (2 samples, 0.03%)</title><rect x="962.0" y="1461" width="0.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="964.98" y="1471.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (9 samples, 0.15%)</title><rect x="720.5" y="1077" width="1.7" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="723.46" y="1087.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (2 samples, 0.03%)</title><rect x="804.0" y="917" width="0.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="807.01" y="927.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;unsigned long&gt; &gt; &gt;::allocate(std::allocator&lt;std::_Rb_tree_node&lt;unsigned long&gt; &gt;&amp;, unsigned long) (2 samples, 0.03%)</title><rect x="927.1" y="1333" width="0.3" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="930.05" y="1343.5" ></text>
</g>
<g >
<title>SpanningTree::Propagate(unsigned long) (18 samples, 0.30%)</title><rect x="955.2" y="1157" width="3.6" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="958.23" y="1167.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (6 samples, 0.10%)</title><rect x="851.8" y="1237" width="1.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="854.84" y="1247.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (1 samples, 0.02%)</title><rect x="790.1" y="677" width="0.2" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="793.12" y="687.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (17 samples, 0.29%)</title><rect x="785.0" y="581" width="3.3" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="787.96" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;unsigned long&gt;, std::_Rb_tree_const_iterator&lt;unsigned long&gt;) (1 samples, 0.02%)</title><rect x="947.5" y="1285" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="950.49" y="1295.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (28 samples, 0.47%)</title><rect x="377.5" y="1445" width="5.6" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="380.53" y="1455.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (1 samples, 0.02%)</title><rect x="941.1" y="1269" width="0.2" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="944.14" y="1279.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (10 samples, 0.17%)</title><rect x="745.5" y="965" width="2.0" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="748.47" y="975.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate(unsigned long) (6 samples, 0.10%)</title><rect x="531.5" y="1349" width="1.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="534.53" y="1359.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="795.9" y="805" width="0.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="798.87" y="815.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_get_node() (1 samples, 0.02%)</title><rect x="941.3" y="1285" width="0.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="944.34" y="1295.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (1 samples, 0.02%)</title><rect x="612.9" y="1301" width="0.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="615.90" y="1311.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator++() (1 samples, 0.02%)</title><rect x="796.9" y="837" width="0.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="799.87" y="847.5" ></text>
</g>
<g >
<title>LinkedList::AddEdge(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="952.1" y="1253" width="0.4" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="955.06" y="1263.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (1 samples, 0.02%)</title><rect x="799.2" y="837" width="0.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="802.25" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_max_size(std::allocator&lt;unsigned long&gt; const&amp;) (21 samples, 0.35%)</title><rect x="465.1" y="1349" width="4.1" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="468.05" y="1359.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (2 samples, 0.03%)</title><rect x="815.5" y="1029" width="0.4" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="818.52" y="1039.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;* std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_Alloc_node::operator()&lt;unsigned long const&amp;&gt;(unsigned long const&amp;) const (1 samples, 0.02%)</title><rect x="945.9" y="1285" width="0.2" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="948.90" y="1295.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (8 samples, 0.13%)</title><rect x="864.3" y="1301" width="1.6" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="867.34" y="1311.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_lower_bound(std::_Rb_tree_node&lt;unsigned long&gt;*, std::_Rb_tree_node_base*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="955.4" y="1077" width="0.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="958.43" y="1087.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::max&lt;unsigned long&gt;(unsigned long const&amp;, unsigned long const&amp;) (5 samples, 0.08%)</title><rect x="470.0" y="1365" width="1.0" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="473.01" y="1375.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (3 samples, 0.05%)</title><rect x="684.3" y="1141" width="0.6" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="687.34" y="1151.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator++() (5 samples, 0.08%)</title><rect x="371.2" y="1461" width="1.0" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="374.18" y="1471.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="728.8" y="997" width="0.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="731.80" y="1007.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (1 samples, 0.02%)</title><rect x="789.9" y="661" width="0.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="792.92" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (25 samples, 0.42%)</title><rect x="344.8" y="1461" width="5.0" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="347.79" y="1471.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="514.5" y="1349" width="0.2" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="517.47" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (5 samples, 0.08%)</title><rect x="589.1" y="1333" width="1.0" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="592.09" y="1343.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;unsigned long, unsigned long&gt; const*, std::vector&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt; &gt; &gt;::operator*() const (2 samples, 0.03%)</title><rect x="1173.9" y="1493" width="0.4" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="1176.93" y="1503.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::max&lt;unsigned long&gt;(unsigned long const&amp;, unsigned long const&amp;) (17 samples, 0.29%)</title><rect x="416.4" y="1461" width="3.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="419.43" y="1471.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (2 samples, 0.03%)</title><rect x="867.3" y="1269" width="0.4" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="870.32" y="1279.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="773.1" y="757" width="0.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="776.05" y="767.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (3 samples, 0.05%)</title><rect x="844.7" y="1205" width="0.6" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="847.69" y="1215.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;unsigned long&gt;, std::_Rb_tree_const_iterator&lt;unsigned long&gt;) (3 samples, 0.05%)</title><rect x="935.4" y="1381" width="0.6" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="938.39" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (1 samples, 0.02%)</title><rect x="734.4" y="997" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="737.35" y="1007.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (1 samples, 0.02%)</title><rect x="942.9" y="1285" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="945.93" y="1295.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (1 samples, 0.02%)</title><rect x="799.0" y="853" width="0.2" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="802.05" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (1 samples, 0.02%)</title><rect x="826.6" y="1125" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="829.63" y="1135.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (3 samples, 0.05%)</title><rect x="367.2" y="1461" width="0.6" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="370.21" y="1471.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_const_iterator&lt;unsigned long&gt;, bool&gt;::pair&lt;std::_Rb_tree_iterator&lt;unsigned long&gt;&amp;, bool&amp;&gt;(std::_Rb_tree_iterator&lt;unsigned long&gt;&amp;, bool&amp;) (1 samples, 0.02%)</title><rect x="957.4" y="1013" width="0.2" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="960.41" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (14 samples, 0.24%)</title><rect x="683.2" y="1173" width="2.7" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="686.15" y="1183.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (4 samples, 0.07%)</title><rect x="843.3" y="1205" width="0.8" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="846.30" y="1215.5" ></text>
</g>
<g >
<title>SpanningTree::Propagate(unsigned long) (1 samples, 0.02%)</title><rect x="958.2" y="1013" width="0.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="961.21" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="756.0" y="885" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="758.98" y="895.5" ></text>
</g>
<g >
<title>DisjointSetUnion::Get(unsigned long) (15 samples, 0.25%)</title><rect x="362.7" y="1445" width="2.9" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="365.65" y="1455.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (1 samples, 0.02%)</title><rect x="805.8" y="901" width="0.2" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="808.80" y="911.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned long, unsigned long&gt;* std::__fill_n_a&lt;std::pair&lt;unsigned long, unsigned long&gt;*, unsigned long, std::pair&lt;unsigned long, unsigned long&gt; &gt;(std::pair&lt;unsigned long, unsigned long&gt;*, unsigned long, std::pair&lt;unsigned long, unsigned long&gt; const&amp;, std::random_access_iterator_tag) (16 samples, 0.27%)</title><rect x="408.7" y="1413" width="3.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="411.69" y="1423.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="771.3" y="757" width="0.2" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="774.26" y="767.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (9 samples, 0.15%)</title><rect x="885.4" y="1365" width="1.8" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="888.38" y="1375.5" ></text>
</g>
<g >
<title>unsigned long* std::__relocate_a&lt;unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt; &gt;(unsigned long*, unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt;&amp;) (3 samples, 0.05%)</title><rect x="627.4" y="1237" width="0.6" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="630.39" y="1247.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;unsigned long&gt;::_Rb_tree_iterator(std::_Rb_tree_node_base*) (1 samples, 0.02%)</title><rect x="945.3" y="1285" width="0.2" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="948.31" y="1295.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (18 samples, 0.30%)</title><rect x="647.2" y="1269" width="3.6" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="650.23" y="1279.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (8 samples, 0.13%)</title><rect x="384.7" y="1445" width="1.6" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="387.68" y="1455.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::size() const (16 samples, 0.27%)</title><rect x="386.5" y="1461" width="3.1" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="389.46" y="1471.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (7 samples, 0.12%)</title><rect x="913.6" y="1429" width="1.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="916.56" y="1439.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="527.6" y="1365" width="0.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="530.56" y="1375.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned long, unsigned long&gt;* std::fill_n&lt;std::pair&lt;unsigned long, unsigned long&gt;*, unsigned long, std::pair&lt;unsigned long, unsigned long&gt; &gt;(std::pair&lt;unsigned long, unsigned long&gt;*, unsigned long, std::pair&lt;unsigned long, unsigned long&gt; const&amp;) (17 samples, 0.29%)</title><rect x="408.5" y="1429" width="3.4" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="411.49" y="1439.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (1 samples, 0.02%)</title><rect x="787.1" y="53" width="0.2" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="790.14" y="63.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_relocate(unsigned long*, unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt;&amp;) (4 samples, 0.07%)</title><rect x="691.1" y="1125" width="0.8" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="694.09" y="1135.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (2 samples, 0.03%)</title><rect x="786.9" y="101" width="0.4" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="789.94" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (4 samples, 0.07%)</title><rect x="773.4" y="757" width="0.8" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="776.45" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (2 samples, 0.03%)</title><rect x="759.0" y="869" width="0.4" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="761.96" y="879.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;unsigned long&gt;*) (1 samples, 0.02%)</title><rect x="957.0" y="965" width="0.2" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="960.02" y="975.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (1,606 samples, 27.01%)</title><rect x="569.4" y="1381" width="318.8" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="572.44" y="1391.5" >bool LinkedList::DepthFirstSearch&lt;SpanningT..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="575.2" y="1317" width="0.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="578.19" y="1327.5" ></text>
</g>
<g >
<title>LinkedList::RemoveEdge(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="953.0" y="1237" width="0.4" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="956.05" y="1247.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (41 samples, 0.69%)</title><rect x="781.2" y="661" width="8.1" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="784.19" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;unsigned long, unsigned long&gt; const*, std::vector&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt; &gt; &gt;::base() const (76 samples, 1.28%)</title><rect x="1046.5" y="1461" width="15.1" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="1049.52" y="1471.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_get_insert_unique_pos(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="952.1" y="1205" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="955.06" y="1215.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::equal_range(unsigned long const&amp;) (8 samples, 0.13%)</title><rect x="929.6" y="1397" width="1.6" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="932.63" y="1407.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (1 samples, 0.02%)</title><rect x="881.2" y="1349" width="0.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="884.21" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="782.0" y="613" width="0.4" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="784.98" y="623.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="541.3" y="1349" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="544.26" y="1359.5" ></text>
</g>
<g >
<title>LinkedList::RemoveEdge(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="947.5" y="1333" width="0.4" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="950.49" y="1343.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long) (1 samples, 0.02%)</title><rect x="533.3" y="1349" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="536.32" y="1359.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="782.2" y="581" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="785.18" y="591.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (23 samples, 0.39%)</title><rect x="582.3" y="1365" width="4.6" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="585.34" y="1375.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;unsigned long, unsigned long&gt; const*, std::vector&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt; &gt; &gt;::operator*() const (27 samples, 0.45%)</title><rect x="981.2" y="1477" width="5.4" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="984.23" y="1487.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_get_node() (2 samples, 0.03%)</title><rect x="927.1" y="1349" width="0.3" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="930.05" y="1359.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::max_size(std::allocator&lt;unsigned long&gt; const&amp;) (1 samples, 0.02%)</title><rect x="535.3" y="1317" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="538.30" y="1327.5" ></text>
</g>
<g >
<title>DisjointSetUnion::InSameSet(unsigned long, unsigned long) (17 samples, 0.29%)</title><rect x="362.3" y="1461" width="3.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="365.25" y="1471.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;unsigned long&gt;::_Rb_tree_iterator(std::_Rb_tree_node_base*) (1 samples, 0.02%)</title><rect x="944.3" y="1285" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="947.32" y="1295.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (18 samples, 0.30%)</title><rect x="661.9" y="1221" width="3.6" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="664.92" y="1231.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (1,158 samples, 19.48%)</title><rect x="632.7" y="1301" width="229.9" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="635.74" y="1311.5" >bool LinkedList::DepthFirstSea..</text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (1 samples, 0.02%)</title><rect x="785.2" y="549" width="0.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="788.16" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::equal_range(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="950.3" y="1253" width="0.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="953.27" y="1263.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (1 samples, 0.02%)</title><rect x="591.5" y="1333" width="0.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="594.47" y="1343.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator++() (2 samples, 0.03%)</title><rect x="828.6" y="1141" width="0.4" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="831.62" y="1151.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (1 samples, 0.02%)</title><rect x="855.0" y="1269" width="0.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="858.01" y="1279.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (2 samples, 0.03%)</title><rect x="775.2" y="741" width="0.4" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="778.23" y="751.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (1 samples, 0.02%)</title><rect x="935.8" y="1365" width="0.2" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="938.78" y="1375.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (5 samples, 0.08%)</title><rect x="742.5" y="949" width="1.0" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="745.49" y="959.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (8 samples, 0.13%)</title><rect x="714.7" y="1109" width="1.6" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="717.71" y="1119.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::insert(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="1172.1" y="1445" width="0.4" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="1175.14" y="1455.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;unsigned long&gt;, std::_Rb_tree_const_iterator&lt;unsigned long&gt;) (1 samples, 0.02%)</title><rect x="948.5" y="1269" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="951.48" y="1279.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (4 samples, 0.07%)</title><rect x="631.8" y="1269" width="0.7" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="634.75" y="1279.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="761.5" y="821" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="764.54" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (3 samples, 0.05%)</title><rect x="685.3" y="1141" width="0.6" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="688.33" y="1151.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (2 samples, 0.03%)</title><rect x="818.5" y="1013" width="0.4" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="821.50" y="1023.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="866.1" y="1269" width="0.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="869.13" y="1279.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (3 samples, 0.05%)</title><rect x="786.7" y="245" width="0.6" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="789.74" y="255.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (76 samples, 1.28%)</title><rect x="776.8" y="725" width="15.1" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="779.82" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (9 samples, 0.15%)</title><rect x="748.6" y="933" width="1.8" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="751.64" y="943.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&gt;::pair&lt;std::_Rb_tree_node&lt;unsigned long&gt;*&amp;, std::_Rb_tree_node_base*&amp;&gt;(std::_Rb_tree_node&lt;unsigned long&gt;*&amp;, std::_Rb_tree_node_base*&amp;) (1 samples, 0.02%)</title><rect x="933.2" y="1365" width="0.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="936.20" y="1375.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="958.2" y="981" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="961.21" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (4 samples, 0.07%)</title><rect x="641.5" y="1237" width="0.8" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="644.48" y="1247.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="715.7" y="1061" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="718.70" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator*() const (2 samples, 0.03%)</title><rect x="563.1" y="1349" width="0.4" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="566.09" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (2 samples, 0.03%)</title><rect x="754.2" y="901" width="0.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="757.20" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::operator[](unsigned long) const (3 samples, 0.05%)</title><rect x="919.1" y="1429" width="0.6" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="922.11" y="1439.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator*() const (1 samples, 0.02%)</title><rect x="638.5" y="1253" width="0.2" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="641.50" y="1263.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (2 samples, 0.03%)</title><rect x="796.5" y="805" width="0.4" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="799.47" y="815.5" ></text>
</g>
<g >
<title>SpanningTree::Propagate(unsigned long) (15 samples, 0.25%)</title><rect x="955.8" y="1141" width="3.0" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="958.83" y="1151.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_S_key(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="954.2" y="1125" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="957.24" y="1135.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (1 samples, 0.02%)</title><rect x="790.1" y="661" width="0.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="793.12" y="671.5" ></text>
</g>
<g >
<title>unsigned long* std::__relocate_a&lt;unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt; &gt;(unsigned long*, unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt;&amp;) (13 samples, 0.22%)</title><rect x="538.3" y="1333" width="2.6" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="541.28" y="1343.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_Tp_allocator() const (1 samples, 0.02%)</title><rect x="534.7" y="1333" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="537.71" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase_at_end(int*) (1 samples, 0.02%)</title><rect x="407.5" y="1445" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="410.50" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (19 samples, 0.32%)</title><rect x="433.3" y="1429" width="3.8" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="436.30" y="1439.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="942.1" y="1317" width="0.2" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="945.13" y="1327.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (2 samples, 0.03%)</title><rect x="541.5" y="1381" width="0.4" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="544.46" y="1391.5" ></text>
</g>
<g >
<title>unsigned long* std::__relocate_a&lt;unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt; &gt;(unsigned long*, unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt;&amp;) (6 samples, 0.10%)</title><rect x="579.4" y="1301" width="1.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="582.36" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (2 samples, 0.03%)</title><rect x="735.5" y="997" width="0.4" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="738.54" y="1007.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_S_left(std::_Rb_tree_node_base*) (1 samples, 0.02%)</title><rect x="947.7" y="1253" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="950.69" y="1263.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (2 samples, 0.03%)</title><rect x="811.0" y="981" width="0.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="813.96" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (20 samples, 0.34%)</title><rect x="605.0" y="1317" width="3.9" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="607.96" y="1327.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (5 samples, 0.08%)</title><rect x="747.6" y="949" width="1.0" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="750.65" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (1 samples, 0.02%)</title><rect x="537.1" y="1333" width="0.2" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="540.09" y="1343.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator++() (2 samples, 0.03%)</title><rect x="841.1" y="1205" width="0.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="844.12" y="1215.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="811.4" y="949" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="814.35" y="959.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (8 samples, 0.13%)</title><rect x="724.6" y="1061" width="1.6" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="727.63" y="1071.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() (1 samples, 0.02%)</title><rect x="946.1" y="1285" width="0.2" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="949.10" y="1295.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (6 samples, 0.10%)</title><rect x="915.9" y="1429" width="1.2" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="918.94" y="1439.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (3 samples, 0.05%)</title><rect x="786.7" y="277" width="0.6" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="789.74" y="287.5" ></text>
</g>
<g >
<title>void std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long const&amp;) (25 samples, 0.42%)</title><rect x="576.0" y="1333" width="4.9" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="578.99" y="1343.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (46 samples, 0.77%)</title><rect x="781.0" y="677" width="9.1" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="783.99" y="687.5" ></text>
</g>
<g >
<title>SpanningTree::ApproximateMinimumDegree() (5,687 samples, 95.64%)</title><rect x="39.4" y="1493" width="1128.6" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="42.37" y="1503.5" >SpanningTree::ApproximateMinimumDegree()</text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (1 samples, 0.02%)</title><rect x="896.7" y="1365" width="0.2" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="899.69" y="1375.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;unsigned long&gt;, bool&gt; std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt;(unsigned long const&amp;) (6 samples, 0.10%)</title><rect x="944.9" y="1317" width="1.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="947.91" y="1327.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (46 samples, 0.77%)</title><rect x="542.3" y="1397" width="9.1" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="545.25" y="1407.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector() (11 samples, 0.18%)</title><rect x="920.1" y="1445" width="2.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="923.10" y="1455.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator*() const (1 samples, 0.02%)</title><rect x="757.2" y="885" width="0.2" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="760.17" y="895.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (7 samples, 0.12%)</title><rect x="870.5" y="1333" width="1.4" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="873.49" y="1343.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::insert(unsigned long const&amp;) (4 samples, 0.07%)</title><rect x="942.5" y="1349" width="0.8" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="945.53" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="784.2" y="581" width="0.2" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="787.16" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (1 samples, 0.02%)</title><rect x="870.3" y="1333" width="0.2" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="873.29" y="1343.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (7 samples, 0.12%)</title><rect x="857.0" y="1269" width="1.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="860.00" y="1279.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (6 samples, 0.10%)</title><rect x="607.7" y="1301" width="1.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="610.74" y="1311.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (3 samples, 0.05%)</title><rect x="786.7" y="213" width="0.6" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="789.74" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (5 samples, 0.08%)</title><rect x="729.8" y="1029" width="1.0" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="732.79" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (5 samples, 0.08%)</title><rect x="656.8" y="1221" width="0.9" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="659.76" y="1231.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;unsigned long&gt;, bool&gt; std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt;(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="938.8" y="1365" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="941.76" y="1375.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="785.2" y="501" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="788.16" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (1 samples, 0.02%)</title><rect x="945.1" y="1237" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="948.11" y="1247.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="721.7" y="1029" width="0.3" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="724.65" y="1039.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;unsigned long*, unsigned long&gt;(unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt;&amp;) (7 samples, 0.12%)</title><rect x="973.3" y="1445" width="1.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="976.29" y="1455.5" ></text>
</g>
<g >
<title>LinkedList::AddEdge(unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="954.2" y="1189" width="0.2" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="957.24" y="1199.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;unsigned long&gt;, std::_Rb_tree_const_iterator&lt;unsigned long&gt;) (3 samples, 0.05%)</title><rect x="939.0" y="1349" width="0.6" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="941.96" y="1359.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="956.4" y="1077" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="959.42" y="1087.5" ></text>
</g>
<g >
<title>unsigned long&amp;&amp; std::__pair_get&lt;0ul&gt;::__move_get&lt;unsigned long, unsigned long&gt;(std::pair&lt;unsigned long, unsigned long&gt;&amp;&amp;) (30 samples, 0.50%)</title><rect x="1155.1" y="1477" width="5.9" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1158.07" y="1487.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (1 samples, 0.02%)</title><rect x="913.4" y="1429" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="916.36" y="1439.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;* std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_Alloc_node::operator()&lt;unsigned long const&amp;&gt;(unsigned long const&amp;) const (3 samples, 0.05%)</title><rect x="927.1" y="1381" width="0.5" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="930.05" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (7 samples, 0.12%)</title><rect x="602.6" y="1317" width="1.4" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="605.58" y="1327.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;unsigned long&gt;, std::_Rb_tree_const_iterator&lt;unsigned long&gt;) (1 samples, 0.02%)</title><rect x="951.7" y="1237" width="0.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="954.66" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (3 samples, 0.05%)</title><rect x="709.5" y="1109" width="0.6" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="712.55" y="1119.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;unsigned long&gt; std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_&lt;unsigned long const&amp;, std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, unsigned long const&amp;, std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_Alloc_node&amp;) (1 samples, 0.02%)</title><rect x="952.8" y="1189" width="0.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="955.85" y="1199.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (1 samples, 0.02%)</title><rect x="629.4" y="1285" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="632.37" y="1295.5" ></text>
</g>
<g >
<title>std::vector&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::operator[](unsigned long) const (1 samples, 0.02%)</title><rect x="850.4" y="1237" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="853.45" y="1247.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (3 samples, 0.05%)</title><rect x="745.9" y="933" width="0.6" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="748.86" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (6 samples, 0.10%)</title><rect x="580.9" y="1349" width="1.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="583.95" y="1359.5" ></text>
</g>
<g >
<title>LinkedList::RemoveEdge(unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="955.8" y="1109" width="0.2" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="958.83" y="1119.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() (1 samples, 0.02%)</title><rect x="943.1" y="1237" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="946.12" y="1247.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator++() (1 samples, 0.02%)</title><rect x="806.6" y="949" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="809.59" y="959.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;* std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_create_node&lt;unsigned long const&amp;&gt;(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="935.0" y="1349" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="937.99" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (8 samples, 0.13%)</title><rect x="549.2" y="1365" width="1.6" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="552.20" y="1375.5" ></text>
</g>
<g >
<title>void std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long const&amp;) (23 samples, 0.39%)</title><rect x="623.4" y="1269" width="4.6" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="626.42" y="1279.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="798.5" y="853" width="0.2" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="801.45" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::pop_back() (1 samples, 0.02%)</title><rect x="737.3" y="997" width="0.2" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="740.33" y="1007.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate(unsigned long) (19 samples, 0.32%)</title><rect x="455.7" y="1381" width="3.8" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="458.72" y="1391.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_Tp_allocator() (1 samples, 0.02%)</title><rect x="484.7" y="1381" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="487.70" y="1391.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="946.1" y="1333" width="0.4" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="949.10" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (1 samples, 0.02%)</title><rect x="785.2" y="517" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="788.16" y="527.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (1 samples, 0.02%)</title><rect x="787.5" y="469" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="790.54" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="839.9" y="1157" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="842.93" y="1167.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (10 samples, 0.17%)</title><rect x="904.0" y="1413" width="2.0" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="907.03" y="1423.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (2 samples, 0.03%)</title><rect x="826.2" y="1109" width="0.4" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="829.24" y="1119.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (2 samples, 0.03%)</title><rect x="881.4" y="1349" width="0.4" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="884.41" y="1359.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (1 samples, 0.02%)</title><rect x="793.3" y="741" width="0.2" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="796.29" y="751.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (5 samples, 0.08%)</title><rect x="779.2" y="677" width="1.0" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="782.20" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (1 samples, 0.02%)</title><rect x="877.6" y="1333" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="880.64" y="1343.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (15 samples, 0.25%)</title><rect x="380.1" y="1429" width="3.0" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="383.11" y="1439.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (7 samples, 0.12%)</title><rect x="943.5" y="1349" width="1.4" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="946.52" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin() (6 samples, 0.10%)</title><rect x="474.6" y="1381" width="1.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="477.58" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (141 samples, 2.37%)</title><rect x="448.6" y="1413" width="28.0" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="451.58" y="1423.5" >s..</text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (1 samples, 0.02%)</title><rect x="688.7" y="1141" width="0.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="691.71" y="1151.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::destroy&lt;unsigned long&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*) (1 samples, 0.02%)</title><rect x="774.2" y="757" width="0.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="777.24" y="767.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (3 samples, 0.05%)</title><rect x="786.7" y="197" width="0.6" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="789.74" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::equal_range(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="939.6" y="1349" width="0.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="942.55" y="1359.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (10 samples, 0.17%)</title><rect x="752.6" y="917" width="2.0" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="755.61" y="927.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator++() (2 samples, 0.03%)</title><rect x="867.7" y="1317" width="0.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="870.71" y="1327.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="831.8" y="1157" width="0.2" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="834.79" y="1167.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator++() (2 samples, 0.03%)</title><rect x="838.9" y="1189" width="0.4" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="841.94" y="1199.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base() const (1 samples, 0.02%)</title><rect x="622.8" y="1269" width="0.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="625.82" y="1279.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (13 samples, 0.22%)</title><rect x="673.4" y="1205" width="2.6" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="676.43" y="1215.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="675.2" y="1157" width="0.4" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="678.21" y="1167.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::min&lt;unsigned long&gt;(unsigned long const&amp;, unsigned long const&amp;) (3 samples, 0.05%)</title><rect x="536.5" y="1301" width="0.6" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="539.50" y="1311.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (4 samples, 0.07%)</title><rect x="882.8" y="1365" width="0.8" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="885.80" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_check_len(unsigned long, char const*) const (5 samples, 0.08%)</title><rect x="690.1" y="1125" width="1.0" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="693.10" y="1135.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;unsigned long&gt;::_Rb_tree_iterator(std::_Rb_tree_node_base*) (1 samples, 0.02%)</title><rect x="940.7" y="1317" width="0.2" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="943.74" y="1327.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (8 samples, 0.13%)</title><rect x="738.9" y="997" width="1.6" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="741.92" y="1007.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="623.0" y="1269" width="0.2" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="626.02" y="1279.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::insert(unsigned long const&amp;) (6 samples, 0.10%)</title><rect x="948.9" y="1285" width="1.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="951.88" y="1295.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (1 samples, 0.02%)</title><rect x="787.9" y="501" width="0.2" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="790.93" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (2 samples, 0.03%)</title><rect x="811.9" y="965" width="0.4" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="814.95" y="975.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::min&lt;unsigned long&gt;(unsigned long const&amp;, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="690.9" y="1077" width="0.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="693.89" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::operator[](unsigned long) const (1 samples, 0.02%)</title><rect x="830.4" y="1141" width="0.2" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="833.40" y="1151.5" ></text>
</g>
<g >
<title>std::enable_if&lt;__and_&lt;std::__not_&lt;std::__is_tuple_like&lt;unsigned long&gt; &gt;, std::is_move_constructible&lt;unsigned long&gt;, std::is_move_assignable&lt;unsigned long&gt; &gt;::value, void&gt;::type std::swap&lt;unsigned long&gt;(unsigned long&amp;, unsigned long&amp;) (2 samples, 0.03%)</title><rect x="959.8" y="1461" width="0.4" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="962.79" y="1471.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (4 samples, 0.07%)</title><rect x="565.7" y="1333" width="0.8" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="568.67" y="1343.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (1 samples, 0.02%)</title><rect x="839.7" y="1189" width="0.2" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="842.73" y="1199.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (3 samples, 0.05%)</title><rect x="758.0" y="869" width="0.6" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="760.97" y="879.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (20 samples, 0.34%)</title><rect x="600.4" y="1333" width="4.0" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="603.40" y="1343.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="706.2" y="1093" width="0.2" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="709.17" y="1103.5" ></text>
</g>
<g >
<title>SpanningTree::Propagate(unsigned long) (25 samples, 0.42%)</title><rect x="953.8" y="1221" width="5.0" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="956.84" y="1231.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::equal_range(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="957.2" y="1013" width="0.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="960.21" y="1023.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;unsigned long&gt;(unsigned long*) (1 samples, 0.02%)</title><rect x="957.0" y="949" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="960.02" y="959.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (1 samples, 0.02%)</title><rect x="751.6" y="901" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="754.62" y="911.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (5 samples, 0.08%)</title><rect x="939.0" y="1381" width="0.9" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="941.96" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (4 samples, 0.07%)</title><rect x="782.8" y="597" width="0.8" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="785.77" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base() const (2 samples, 0.03%)</title><rect x="490.5" y="1365" width="0.4" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="493.45" y="1375.5" ></text>
</g>
<g >
<title>__memcpy_avx_unaligned_erms (2 samples, 0.03%)</title><rect x="510.3" y="1333" width="0.4" height="15.0" fill="rgb(231,96,96)" rx="2" ry="2" />
<text  x="513.30" y="1343.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;unsigned long&gt;::_M_max_size() const (1 samples, 0.02%)</title><rect x="494.6" y="1317" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="497.62" y="1327.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;unsigned long&gt;::_Rb_tree_iterator(std::_Rb_tree_node_base*) (1 samples, 0.02%)</title><rect x="935.6" y="1365" width="0.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="938.58" y="1375.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (1 samples, 0.02%)</title><rect x="862.0" y="1285" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="864.96" y="1295.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="775.4" y="709" width="0.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="778.43" y="719.5" ></text>
</g>
<g >
<title>void std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long const&amp;) (125 samples, 2.10%)</title><rect x="451.8" y="1397" width="24.8" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="454.76" y="1407.5" >v..</text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::size() const (1 samples, 0.02%)</title><rect x="958.4" y="1029" width="0.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="961.41" y="1039.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (38 samples, 0.64%)</title><rect x="781.4" y="645" width="7.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="784.39" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() (1 samples, 0.02%)</title><rect x="938.0" y="1349" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="940.97" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (3 samples, 0.05%)</title><rect x="694.1" y="1141" width="0.6" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="697.07" y="1151.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="714.1" y="1093" width="0.4" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="717.11" y="1103.5" ></text>
</g>
<g >
<title>SpanningTree::Propagate(unsigned long) (56 samples, 0.94%)</title><rect x="947.9" y="1333" width="11.1" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="950.89" y="1343.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;* std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_Alloc_node::operator()&lt;unsigned long const&amp;&gt;(unsigned long const&amp;) const (1 samples, 0.02%)</title><rect x="941.3" y="1317" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="944.34" y="1327.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (7 samples, 0.12%)</title><rect x="745.5" y="949" width="1.4" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="748.47" y="959.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (1 samples, 0.02%)</title><rect x="786.9" y="53" width="0.2" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="789.94" y="63.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (1 samples, 0.02%)</title><rect x="792.1" y="741" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="795.10" y="751.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="529.5" y="1349" width="0.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="532.55" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (1 samples, 0.02%)</title><rect x="714.5" y="1093" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="717.51" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="764.5" y="805" width="0.2" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="767.52" y="815.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (6 samples, 0.10%)</title><rect x="917.9" y="1397" width="1.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="920.92" y="1407.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (271 samples, 4.56%)</title><rect x="752.0" y="933" width="53.8" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="755.01" y="943.5" >bool ..</text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (2 samples, 0.03%)</title><rect x="825.8" y="1093" width="0.4" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="828.84" y="1103.5" ></text>
</g>
<g >
<title>LinkedList::AddEdge(unsigned long, unsigned long) (18 samples, 0.30%)</title><rect x="931.8" y="1429" width="3.6" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="934.81" y="1439.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (6 samples, 0.10%)</title><rect x="763.5" y="853" width="1.2" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="766.53" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (3 samples, 0.05%)</title><rect x="845.3" y="1221" width="0.6" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="848.29" y="1231.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (7 samples, 0.12%)</title><rect x="902.0" y="1365" width="1.4" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="905.05" y="1375.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (2 samples, 0.03%)</title><rect x="749.6" y="901" width="0.4" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="752.63" y="911.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (1 samples, 0.02%)</title><rect x="811.4" y="981" width="0.2" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="814.35" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::operator[](unsigned long) (4 samples, 0.07%)</title><rect x="411.9" y="1461" width="0.8" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="414.87" y="1471.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (5 samples, 0.08%)</title><rect x="770.7" y="789" width="1.0" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="773.67" y="799.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="775.4" y="693" width="0.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="778.43" y="703.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::__is_bitwise_relocatable&lt;unsigned long&gt;::value, unsigned long*&gt;::type std::__relocate_a_1&lt;unsigned long, unsigned long&gt;(unsigned long*, unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt;&amp;) (3 samples, 0.05%)</title><rect x="539.7" y="1317" width="0.6" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="542.67" y="1327.5" ></text>
</g>
<g >
<title>unsigned long&amp;&amp; std::__pair_get&lt;1ul&gt;::__move_get&lt;unsigned long, unsigned long&gt;(std::pair&lt;unsigned long, unsigned long&gt;&amp;&amp;) (66 samples, 1.11%)</title><rect x="1093.2" y="1461" width="13.1" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="1096.16" y="1471.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="953.8" y="1173" width="0.4" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="956.84" y="1183.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (7 samples, 0.12%)</title><rect x="841.9" y="1189" width="1.4" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="844.91" y="1199.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (2 samples, 0.03%)</title><rect x="793.5" y="741" width="0.4" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="796.49" y="751.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;unsigned long&gt; std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_&lt;unsigned long const&amp;, std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, unsigned long const&amp;, std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_Alloc_node&amp;) (3 samples, 0.05%)</title><rect x="940.9" y="1333" width="0.6" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="943.94" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (8 samples, 0.13%)</title><rect x="519.0" y="1381" width="1.6" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="522.03" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (9 samples, 0.15%)</title><rect x="648.8" y="1237" width="1.8" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="651.82" y="1247.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_S_key(std::_Rb_tree_node&lt;unsigned long&gt; const*) (1 samples, 0.02%)</title><rect x="957.2" y="997" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="960.21" y="1007.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (1 samples, 0.02%)</title><rect x="788.1" y="549" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="791.13" y="559.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate(unsigned long) (3 samples, 0.05%)</title><rect x="624.2" y="1253" width="0.6" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="627.21" y="1263.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (1 samples, 0.02%)</title><rect x="941.1" y="1285" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="944.14" y="1295.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (2 samples, 0.03%)</title><rect x="800.8" y="885" width="0.4" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="803.83" y="895.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (6 samples, 0.10%)</title><rect x="895.7" y="1397" width="1.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="898.69" y="1407.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="735.1" y="997" width="0.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="738.15" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (1 samples, 0.02%)</title><rect x="802.2" y="853" width="0.2" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="805.22" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="807.6" y="917" width="0.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="810.58" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (12 samples, 0.20%)</title><rect x="566.5" y="1349" width="2.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="569.46" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::size() const (24 samples, 0.40%)</title><rect x="393.0" y="1461" width="4.8" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="396.01" y="1471.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (1 samples, 0.02%)</title><rect x="794.9" y="773" width="0.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="797.88" y="783.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (2 samples, 0.03%)</title><rect x="840.7" y="1205" width="0.4" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="843.72" y="1215.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (1 samples, 0.02%)</title><rect x="787.1" y="69" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="790.14" y="79.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (1 samples, 0.02%)</title><rect x="950.3" y="1221" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="953.27" y="1231.5" ></text>
</g>
<g >
<title>void std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long const&amp;) (16 samples, 0.27%)</title><rect x="688.9" y="1141" width="3.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="691.91" y="1151.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (1 samples, 0.02%)</title><rect x="786.1" y="485" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="789.15" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (1 samples, 0.02%)</title><rect x="754.8" y="885" width="0.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="757.79" y="895.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_S_key(std::_Rb_tree_node_base const*) (4 samples, 0.07%)</title><rect x="934.0" y="1365" width="0.8" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="937.00" y="1375.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (9 samples, 0.15%)</title><rect x="659.3" y="1237" width="1.8" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="662.34" y="1247.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (3 samples, 0.05%)</title><rect x="751.4" y="933" width="0.6" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="754.42" y="943.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="580.8" y="1301" width="0.1" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="583.75" y="1311.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (7 samples, 0.12%)</title><rect x="864.5" y="1285" width="1.4" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="867.54" y="1295.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (3 samples, 0.05%)</title><rect x="769.5" y="773" width="0.6" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="772.48" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin() (1 samples, 0.02%)</title><rect x="450.4" y="1397" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="453.37" y="1407.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (1 samples, 0.02%)</title><rect x="806.4" y="949" width="0.2" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="809.39" y="959.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (1 samples, 0.02%)</title><rect x="798.1" y="853" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="801.06" y="863.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (3 samples, 0.05%)</title><rect x="823.9" y="1093" width="0.6" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="826.85" y="1103.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (4 samples, 0.07%)</title><rect x="871.1" y="1317" width="0.8" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="874.09" y="1327.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (1 samples, 0.02%)</title><rect x="828.4" y="1141" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="831.42" y="1151.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (4 samples, 0.07%)</title><rect x="702.6" y="1093" width="0.8" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="705.60" y="1103.5" ></text>
</g>
<g >
<title>void std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="541.9" y="1381" width="0.4" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="544.85" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (1 samples, 0.02%)</title><rect x="620.2" y="1301" width="0.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="623.24" y="1311.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (12 samples, 0.20%)</title><rect x="888.2" y="1381" width="2.3" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="891.15" y="1391.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="951.1" y="1269" width="0.4" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="954.06" y="1279.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (3 samples, 0.05%)</title><rect x="797.3" y="837" width="0.6" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="800.26" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (1 samples, 0.02%)</title><rect x="785.4" y="517" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="788.35" y="527.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (20 samples, 0.34%)</title><rect x="655.0" y="1253" width="3.9" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="657.97" y="1263.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::equal_range(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="955.8" y="1061" width="0.2" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="958.83" y="1071.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (3 samples, 0.05%)</title><rect x="792.9" y="757" width="0.6" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="795.90" y="767.5" ></text>
</g>
<g >
<title>SpanningTree::TryToImprove(unsigned long, unsigned long) (2,797 samples, 47.04%)</title><rect x="419.8" y="1477" width="555.1" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="422.80" y="1487.5" >SpanningTree::TryToImprove(unsigned long, unsigned long)</text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (4 samples, 0.07%)</title><rect x="880.4" y="1349" width="0.8" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="883.41" y="1359.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="793.3" y="725" width="0.2" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="796.29" y="735.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (282 samples, 4.74%)</title><rect x="750.4" y="949" width="56.0" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="753.43" y="959.5" >bool ..</text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (6 samples, 0.10%)</title><rect x="766.7" y="821" width="1.2" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="769.70" y="831.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (2 samples, 0.03%)</title><rect x="818.5" y="1045" width="0.4" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="821.50" y="1055.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;unsigned long&gt;::deallocate(unsigned long*, unsigned long) (1 samples, 0.02%)</title><rect x="970.9" y="1413" width="0.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="973.91" y="1423.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (2 samples, 0.03%)</title><rect x="725.0" y="1045" width="0.4" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="728.03" y="1055.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;unsigned long&gt;*) (1 samples, 0.02%)</title><rect x="941.9" y="1285" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="944.93" y="1295.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (1 samples, 0.02%)</title><rect x="930.4" y="1333" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="933.42" y="1343.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (13 samples, 0.22%)</title><rect x="516.5" y="1381" width="2.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="519.45" y="1391.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (6 samples, 0.10%)</title><rect x="858.4" y="1253" width="1.2" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="861.39" y="1263.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (3 samples, 0.05%)</title><rect x="670.8" y="1189" width="0.6" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="673.85" y="1199.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (5 samples, 0.08%)</title><rect x="734.9" y="1013" width="1.0" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="737.95" y="1023.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="735.3" y="965" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="738.34" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (1 samples, 0.02%)</title><rect x="788.3" y="613" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="791.33" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_relocate(unsigned long*, unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt;&amp;) (1 samples, 0.02%)</title><rect x="484.9" y="1381" width="0.2" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="487.90" y="1391.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_S_key(std::_Rb_tree_node_base const*) (2 samples, 0.03%)</title><rect x="940.9" y="1317" width="0.4" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="943.94" y="1327.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (2 samples, 0.03%)</title><rect x="776.4" y="677" width="0.4" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="779.42" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (8 samples, 0.13%)</title><rect x="674.0" y="1189" width="1.6" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="677.02" y="1199.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (2 samples, 0.03%)</title><rect x="814.5" y="981" width="0.4" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="817.53" y="991.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::insert(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="948.1" y="1301" width="0.4" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="951.09" y="1311.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (4 samples, 0.07%)</title><rect x="681.2" y="1157" width="0.8" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="684.17" y="1167.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::insert(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="938.8" y="1381" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="941.76" y="1391.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (3 samples, 0.05%)</title><rect x="941.9" y="1349" width="0.6" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="944.93" y="1359.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (1 samples, 0.02%)</title><rect x="861.2" y="1237" width="0.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="864.16" y="1247.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (2 samples, 0.03%)</title><rect x="883.2" y="1349" width="0.4" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="886.19" y="1359.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (3 samples, 0.05%)</title><rect x="718.3" y="1061" width="0.6" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="721.28" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="648.6" y="1221" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="651.62" y="1231.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (1 samples, 0.02%)</title><rect x="791.9" y="741" width="0.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="794.90" y="751.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="954.6" y="1141" width="0.4" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="957.64" y="1151.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (4 samples, 0.07%)</title><rect x="769.3" y="789" width="0.8" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="772.28" y="799.5" ></text>
</g>
<g >
<title>DisjointSetUnion::Get(unsigned long) (4 samples, 0.07%)</title><rect x="365.8" y="1445" width="0.8" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="368.83" y="1455.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (4 samples, 0.07%)</title><rect x="786.5" y="341" width="0.8" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="789.55" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator*() const (1 samples, 0.02%)</title><rect x="692.7" y="1141" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="695.68" y="1151.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;1ul, std::pair&lt;unsigned long, unsigned long&gt; &gt;::type&amp;&amp; std::get&lt;1ul, unsigned long, unsigned long&gt;(std::pair&lt;unsigned long, unsigned long&gt;&amp;&amp;) (15 samples, 0.25%)</title><rect x="1182.5" y="1493" width="2.9" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="1185.46" y="1503.5" ></text>
</g>
<g >
<title>SpanningTree::SpanningTree(EdgeList const&amp;) (30 samples, 0.50%)</title><rect x="1168.0" y="1493" width="5.9" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="1170.97" y="1503.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (4 samples, 0.07%)</title><rect x="601.8" y="1317" width="0.8" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="604.79" y="1327.5" ></text>
</g>
<g >
<title>LinkedList::AddEdge(unsigned long, unsigned long) (4 samples, 0.07%)</title><rect x="946.7" y="1333" width="0.8" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="949.70" y="1343.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;unsigned long&gt;::allocate(unsigned long, void const*) (1 samples, 0.02%)</title><rect x="456.5" y="1365" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="459.52" y="1375.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;unsigned long&gt;, bool&gt; std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt;(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="956.2" y="1061" width="0.2" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="959.22" y="1071.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="728.6" y="1013" width="0.4" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="731.60" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_max_size(std::allocator&lt;unsigned long&gt; const&amp;) (8 samples, 0.13%)</title><rect x="535.5" y="1317" width="1.6" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="538.50" y="1327.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() (1 samples, 0.02%)</title><rect x="943.1" y="1253" width="0.2" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="946.12" y="1263.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (5 samples, 0.08%)</title><rect x="653.8" y="1221" width="1.0" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="656.78" y="1231.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::equal_range(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="952.5" y="1205" width="0.3" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="955.45" y="1215.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (38 samples, 0.64%)</title><rect x="543.2" y="1381" width="7.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="546.24" y="1391.5" ></text>
</g>
<g >
<title>unsigned long* std::__niter_base&lt;unsigned long*&gt;(unsigned long*) (3 samples, 0.05%)</title><rect x="508.3" y="1349" width="0.6" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="511.31" y="1359.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (8 samples, 0.13%)</title><rect x="731.6" y="1029" width="1.6" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="734.57" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; const&amp;) (7 samples, 0.12%)</title><rect x="490.9" y="1365" width="1.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="493.85" y="1375.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (3 samples, 0.05%)</title><rect x="786.7" y="293" width="0.6" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="789.74" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (1 samples, 0.02%)</title><rect x="939.8" y="1317" width="0.1" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="942.75" y="1327.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (10 samples, 0.17%)</title><rect x="477.8" y="1413" width="1.9" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="480.75" y="1423.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (4 samples, 0.07%)</title><rect x="801.2" y="885" width="0.8" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="804.23" y="895.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (1 samples, 0.02%)</title><rect x="1171.9" y="1429" width="0.2" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="1174.94" y="1439.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (1 samples, 0.02%)</title><rect x="778.0" y="693" width="0.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="781.01" y="703.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (1 samples, 0.02%)</title><rect x="877.4" y="1317" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="880.44" y="1327.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (1 samples, 0.02%)</title><rect x="862.2" y="1269" width="0.2" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="865.16" y="1279.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (966 samples, 16.25%)</title><rect x="658.9" y="1253" width="191.7" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="661.94" y="1263.5" >bool LinkedList::DepthFir..</text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (1 samples, 0.02%)</title><rect x="942.9" y="1253" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="945.93" y="1263.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (4 samples, 0.07%)</title><rect x="469.2" y="1365" width="0.8" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="472.22" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (2 samples, 0.03%)</title><rect x="750.0" y="917" width="0.4" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="753.03" y="927.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_S_key(std::_Rb_tree_node&lt;unsigned long&gt; const*) (1 samples, 0.02%)</title><rect x="942.9" y="1301" width="0.2" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="945.93" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (3 samples, 0.05%)</title><rect x="699.2" y="1125" width="0.6" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="702.23" y="1135.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (3 samples, 0.05%)</title><rect x="914.3" y="1413" width="0.6" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="917.35" y="1423.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (18 samples, 0.30%)</title><rect x="676.0" y="1205" width="3.6" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="679.01" y="1215.5" ></text>
</g>
<g >
<title>main (5,808 samples, 97.68%)</title><rect x="35.2" y="1509" width="1152.6" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="38.20" y="1519.5" >main</text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (3 samples, 0.05%)</title><rect x="636.9" y="1253" width="0.6" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="639.91" y="1263.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="714.3" y="1077" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="717.31" y="1087.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_S_key(std::_Rb_tree_node&lt;unsigned long&gt; const*) (1 samples, 0.02%)</title><rect x="945.7" y="1285" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="948.70" y="1295.5" ></text>
</g>
<g >
<title>LinkedList::AddEdge(unsigned long, unsigned long) (6 samples, 0.10%)</title><rect x="948.9" y="1301" width="1.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="951.88" y="1311.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (2 samples, 0.03%)</title><rect x="793.5" y="773" width="0.4" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="796.49" y="783.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (4 samples, 0.07%)</title><rect x="786.5" y="389" width="0.8" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="789.55" y="399.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (33 samples, 0.55%)</title><rect x="591.9" y="1349" width="6.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="594.86" y="1359.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (2 samples, 0.03%)</title><rect x="678.8" y="1157" width="0.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="681.79" y="1167.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (2 samples, 0.03%)</title><rect x="793.5" y="725" width="0.4" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="796.49" y="735.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="721.7" y="1045" width="0.3" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="724.65" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator*() const (2 samples, 0.03%)</title><rect x="593.3" y="1317" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="596.25" y="1327.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="759.0" y="853" width="0.2" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="761.96" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (1 samples, 0.02%)</title><rect x="839.9" y="1173" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="842.93" y="1183.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (1 samples, 0.02%)</title><rect x="800.6" y="869" width="0.2" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="803.64" y="879.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate(unsigned long*, unsigned long) (4 samples, 0.07%)</title><rect x="624.8" y="1253" width="0.8" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="627.81" y="1263.5" ></text>
</g>
<g >
<title>LinkedList::RemoveEdge(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="953.8" y="1205" width="0.4" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="956.84" y="1215.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (1 samples, 0.02%)</title><rect x="621.6" y="1285" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="624.63" y="1295.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (1 samples, 0.02%)</title><rect x="914.3" y="1397" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="917.35" y="1407.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="744.9" y="933" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="747.87" y="943.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::destroy&lt;unsigned long&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*) (1 samples, 0.02%)</title><rect x="700.4" y="1141" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="703.42" y="1151.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (5 samples, 0.08%)</title><rect x="886.0" y="1349" width="1.0" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="888.97" y="1359.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator*() const (1 samples, 0.02%)</title><rect x="477.6" y="1413" width="0.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="480.55" y="1423.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="735.1" y="981" width="0.4" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="738.15" y="991.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="514.5" y="1365" width="0.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="517.47" y="1375.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="541.3" y="1333" width="0.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="544.26" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (1 samples, 0.02%)</title><rect x="476.6" y="1413" width="0.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="479.56" y="1423.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (3 samples, 0.05%)</title><rect x="883.6" y="1365" width="0.6" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="886.59" y="1375.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="722.4" y="1045" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="725.45" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="748.0" y="933" width="0.4" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="751.05" y="943.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (12 samples, 0.20%)</title><rect x="667.9" y="1221" width="2.4" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="670.87" y="1231.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_relocate(unsigned long*, unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt;&amp;) (5 samples, 0.08%)</title><rect x="627.0" y="1253" width="1.0" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="629.99" y="1263.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (1 samples, 0.02%)</title><rect x="823.3" y="1045" width="0.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="826.26" y="1055.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;unsigned long&gt;, bool&gt; std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt;(unsigned long const&amp;) (4 samples, 0.07%)</title><rect x="946.7" y="1301" width="0.8" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="949.70" y="1311.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_upper_bound(std::_Rb_tree_node&lt;unsigned long&gt;*, std::_Rb_tree_node_base*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="944.3" y="1301" width="0.2" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="947.32" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (1 samples, 0.02%)</title><rect x="774.6" y="741" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="777.64" y="751.5" ></text>
</g>
<g >
<title>void std::_Destroy_aux&lt;true&gt;::__destroy&lt;unsigned long*&gt;(unsigned long*, unsigned long*) (2 samples, 0.03%)</title><rect x="974.3" y="1429" width="0.4" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="977.28" y="1439.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_S_key(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="926.7" y="1381" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="929.65" y="1391.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (655 samples, 11.02%)</title><rect x="700.6" y="1157" width="130.0" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="703.62" y="1167.5" >bool LinkedList:..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (3 samples, 0.05%)</title><rect x="520.0" y="1365" width="0.6" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="523.02" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (4 samples, 0.07%)</title><rect x="725.4" y="1045" width="0.8" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="728.42" y="1055.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (4 samples, 0.07%)</title><rect x="869.1" y="1317" width="0.8" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="872.10" y="1327.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (190 samples, 3.20%)</title><rect x="761.7" y="869" width="37.7" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="764.74" y="879.5" >boo..</text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (12 samples, 0.20%)</title><rect x="670.3" y="1221" width="2.3" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="673.25" y="1231.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;* std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_create_node&lt;unsigned long const&amp;&gt;(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="947.3" y="1253" width="0.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="950.29" y="1263.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (12 samples, 0.20%)</title><rect x="698.2" y="1157" width="2.4" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="701.23" y="1167.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (1 samples, 0.02%)</title><rect x="733.2" y="1013" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="736.16" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (7 samples, 0.12%)</title><rect x="698.4" y="1141" width="1.4" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="701.43" y="1151.5" ></text>
</g>
<g >
<title>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;) (1 samples, 0.02%)</title><rect x="951.3" y="1221" width="0.2" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="954.26" y="1231.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (10 samples, 0.17%)</title><rect x="909.2" y="1413" width="2.0" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="912.19" y="1423.5" ></text>
</g>
<g >
<title>std::less&lt;unsigned long&gt;::operator()(unsigned long const&amp;, unsigned long const&amp;) const (1 samples, 0.02%)</title><rect x="931.0" y="1381" width="0.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="934.02" y="1391.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (2 samples, 0.03%)</title><rect x="794.1" y="773" width="0.4" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="797.09" y="783.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (3 samples, 0.05%)</title><rect x="800.2" y="885" width="0.6" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="803.24" y="895.5" ></text>
</g>
<g >
<title>std::iterator_traits&lt;unsigned long*&gt;::iterator_category std::__iterator_category&lt;unsigned long*&gt;(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="402.9" y="1413" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="405.94" y="1423.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="951.1" y="1253" width="0.4" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="954.06" y="1263.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (1 samples, 0.02%)</title><rect x="929.4" y="1381" width="0.2" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="932.43" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="709.1" y="1109" width="0.4" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="712.15" y="1119.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (1 samples, 0.02%)</title><rect x="654.8" y="1237" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="657.77" y="1247.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (2 samples, 0.03%)</title><rect x="817.9" y="1013" width="0.4" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="820.90" y="1023.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="786.1" y="437" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="789.15" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="716.1" y="1061" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="719.09" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (8 samples, 0.13%)</title><rect x="722.2" y="1061" width="1.6" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="725.25" y="1071.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() (1 samples, 0.02%)</title><rect x="956.2" y="1029" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="959.22" y="1039.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (3 samples, 0.05%)</title><rect x="817.7" y="1045" width="0.6" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="820.70" y="1055.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="886.8" y="1333" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="889.76" y="1343.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::destroy&lt;unsigned long&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*) (2 samples, 0.03%)</title><rect x="598.0" y="1333" width="0.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="601.02" y="1343.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator++() (1 samples, 0.02%)</title><rect x="795.3" y="789" width="0.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="798.28" y="799.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="640.7" y="1237" width="0.2" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="643.68" y="1247.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (5 samples, 0.08%)</title><rect x="889.5" y="1349" width="1.0" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="892.54" y="1359.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="398.0" y="1477" width="0.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="400.98" y="1487.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (3 samples, 0.05%)</title><rect x="715.3" y="1077" width="0.6" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="718.30" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (2 samples, 0.03%)</title><rect x="657.4" y="1205" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="660.35" y="1215.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (6 samples, 0.10%)</title><rect x="596.4" y="1317" width="1.2" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="599.43" y="1327.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (2 samples, 0.03%)</title><rect x="736.9" y="981" width="0.4" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="739.93" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="748.8" y="917" width="0.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="751.84" y="927.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;* std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_create_node&lt;unsigned long const&amp;&gt;(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="945.9" y="1269" width="0.2" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="948.90" y="1279.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (3 samples, 0.05%)</title><rect x="860.8" y="1253" width="0.6" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="863.77" y="1263.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (96 samples, 1.61%)</title><rect x="774.4" y="773" width="19.1" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="777.44" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator*() const (2 samples, 0.03%)</title><rect x="616.1" y="1301" width="0.4" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="619.07" y="1311.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (168 samples, 2.83%)</title><rect x="481.7" y="1413" width="33.4" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="484.72" y="1423.5" >Sp..</text>
</g>
<g >
<title>SpanningTree::Propagate(unsigned long) (13 samples, 0.22%)</title><rect x="956.0" y="1109" width="2.6" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="959.02" y="1119.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (4 samples, 0.07%)</title><rect x="786.5" y="405" width="0.8" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="789.55" y="415.5" ></text>
</g>
<g >
<title>workloads (5,946 samples, 100.00%)</title><rect x="10.0" y="1541" width="1180.0" height="15.0" fill="rgb(249,121,121)" rx="2" ry="2" />
<text  x="13.00" y="1551.5" >workloads</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (3 samples, 0.05%)</title><rect x="632.0" y="1253" width="0.5" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="634.95" y="1263.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (3 samples, 0.05%)</title><rect x="812.7" y="997" width="0.6" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="815.74" y="1007.5" ></text>
</g>
<g >
<title>DisjointSetUnion::Unite(unsigned long, unsigned long) (31 samples, 0.52%)</title><rect x="437.1" y="1461" width="6.1" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="440.07" y="1471.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="799.4" y="869" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="802.45" y="879.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl_data::_Vector_impl_data() (4 samples, 0.07%)</title><rect x="921.1" y="1397" width="0.8" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="924.10" y="1407.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;unsigned long&gt;::_Rb_tree_iterator(std::_Rb_tree_node_base*) (3 samples, 0.05%)</title><rect x="928.2" y="1365" width="0.6" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="931.24" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_max_size(std::allocator&lt;unsigned long&gt; const&amp;) (4 samples, 0.07%)</title><rect x="690.3" y="1093" width="0.8" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="693.30" y="1103.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (1 samples, 0.02%)</title><rect x="845.9" y="1221" width="0.2" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="848.88" y="1231.5" ></text>
</g>
<g >
<title>LinkedList::RemoveEdge(unsigned long, unsigned long) (3 samples, 0.05%)</title><rect x="956.8" y="1061" width="0.6" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="959.82" y="1071.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (29 samples, 0.49%)</title><rect x="515.1" y="1413" width="5.7" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="518.06" y="1423.5" ></text>
</g>
<g >
<title>void std::__fill_a&lt;unsigned long*, unsigned long&gt;(unsigned long*, unsigned long*, unsigned long const&amp;) (4 samples, 0.07%)</title><rect x="403.3" y="1381" width="0.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="406.33" y="1391.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (2 samples, 0.03%)</title><rect x="562.7" y="1349" width="0.4" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="565.69" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector() (1 samples, 0.02%)</title><rect x="1154.9" y="1477" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="1157.87" y="1487.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate(std::allocator&lt;unsigned long&gt;&amp;, unsigned long) (12 samples, 0.20%)</title><rect x="492.4" y="1349" width="2.4" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="495.44" y="1359.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long) (4 samples, 0.07%)</title><rect x="496.4" y="1365" width="0.8" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="499.41" y="1375.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (5 samples, 0.08%)</title><rect x="749.0" y="917" width="1.0" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="752.04" y="927.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;) (1 samples, 0.02%)</title><rect x="1172.3" y="1413" width="0.2" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="1175.34" y="1423.5" ></text>
</g>
<g >
<title>[Missed User Stack] (71 samples, 1.19%)</title><rect x="10.0" y="1525" width="14.1" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="13.00" y="1535.5" ></text>
</g>
<g >
<title>LinkedList::AddEdge(unsigned long, unsigned long) (8 samples, 0.13%)</title><rect x="940.3" y="1381" width="1.6" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="943.35" y="1391.5" ></text>
</g>
<g >
<title>void std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long const&amp;) (140 samples, 2.35%)</title><rect x="486.9" y="1381" width="27.8" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="489.88" y="1391.5" >v..</text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (2 samples, 0.03%)</title><rect x="711.3" y="1093" width="0.4" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="714.33" y="1103.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (4 samples, 0.07%)</title><rect x="838.1" y="1173" width="0.8" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="841.14" y="1183.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (37 samples, 0.62%)</title><rect x="553.6" y="1381" width="7.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="556.56" y="1391.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (2 samples, 0.03%)</title><rect x="774.4" y="757" width="0.4" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="777.44" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (2 samples, 0.03%)</title><rect x="718.9" y="1045" width="0.4" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="721.87" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (1 samples, 0.02%)</title><rect x="813.7" y="981" width="0.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="816.73" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator*() const (1 samples, 0.02%)</title><rect x="767.3" y="789" width="0.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="770.30" y="799.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (1 samples, 0.02%)</title><rect x="786.7" y="181" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="789.74" y="191.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::min&lt;unsigned long&gt;(unsigned long const&amp;, unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="577.6" y="1269" width="0.4" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="580.57" y="1279.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (1 samples, 0.02%)</title><rect x="757.8" y="869" width="0.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="760.77" y="879.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator++() (2 samples, 0.03%)</title><rect x="808.6" y="965" width="0.4" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="811.57" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (5 samples, 0.08%)</title><rect x="892.5" y="1381" width="1.0" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="895.52" y="1391.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::min&lt;unsigned long&gt;(unsigned long const&amp;, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="505.3" y="1333" width="0.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="508.34" y="1343.5" ></text>
</g>
<g >
<title>DisjointSetUnion::Get(unsigned long) (21 samples, 0.35%)</title><rect x="437.9" y="1445" width="4.1" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="440.86" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_check_len(unsigned long, char const*) const (6 samples, 0.10%)</title><rect x="577.2" y="1317" width="1.2" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="580.18" y="1327.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::insert(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="954.2" y="1173" width="0.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="957.24" y="1183.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (1 samples, 0.02%)</title><rect x="789.3" y="661" width="0.2" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="792.32" y="671.5" ></text>
</g>
<g >
<title>void std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="582.1" y="1349" width="0.2" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="585.14" y="1359.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="958.2" y="965" width="0.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="961.21" y="975.5" ></text>
</g>
<g >
<title>unsigned long* std::__niter_base&lt;unsigned long*&gt;(unsigned long*) (2 samples, 0.03%)</title><rect x="579.0" y="1301" width="0.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="581.96" y="1311.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (1 samples, 0.02%)</title><rect x="789.3" y="613" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="792.32" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (1 samples, 0.02%)</title><rect x="813.7" y="997" width="0.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="816.73" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::max_size() const (2 samples, 0.03%)</title><rect x="626.4" y="1237" width="0.4" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="629.39" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_check_len(unsigned long, char const*) const (20 samples, 0.34%)</title><rect x="533.5" y="1349" width="4.0" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="536.52" y="1359.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate(unsigned long*, unsigned long) (1 samples, 0.02%)</title><rect x="459.5" y="1381" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="462.50" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (3 samples, 0.05%)</title><rect x="750.4" y="917" width="0.6" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="753.43" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="751.8" y="885" width="0.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="754.82" y="895.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (1 samples, 0.02%)</title><rect x="781.2" y="629" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="784.19" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (3 samples, 0.05%)</title><rect x="905.4" y="1381" width="0.6" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="908.42" y="1391.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::~_Vector_impl() (1 samples, 0.02%)</title><rect x="972.1" y="1429" width="0.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="975.10" y="1439.5" ></text>
</g>
<g >
<title>unsigned long* std::__niter_base&lt;unsigned long*&gt;(unsigned long*) (2 samples, 0.03%)</title><rect x="471.8" y="1365" width="0.4" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="474.80" y="1375.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator*() const (1 samples, 0.02%)</title><rect x="683.0" y="1173" width="0.2" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="685.95" y="1183.5" ></text>
</g>
<g >
<title>std::less&lt;unsigned long&gt;::operator()(unsigned long const&amp;, unsigned long const&amp;) const (1 samples, 0.02%)</title><rect x="949.9" y="1237" width="0.2" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="952.87" y="1247.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="688.5" y="1141" width="0.2" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="691.51" y="1151.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (700 samples, 11.77%)</title><rect x="694.9" y="1173" width="138.9" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="697.86" y="1183.5" >bool LinkedList::..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator*() const (2 samples, 0.03%)</title><rect x="670.5" y="1189" width="0.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="673.45" y="1199.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (1 samples, 0.02%)</title><rect x="806.2" y="933" width="0.2" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="809.19" y="943.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (8 samples, 0.13%)</title><rect x="740.7" y="981" width="1.6" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="743.70" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (15 samples, 0.25%)</title><rect x="647.6" y="1253" width="3.0" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="650.63" y="1263.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="861.8" y="1285" width="0.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="864.76" y="1295.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (5 samples, 0.08%)</title><rect x="617.7" y="1269" width="1.0" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="620.66" y="1279.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="825.2" y="1109" width="0.2" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="828.24" y="1119.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_S_key(std::_Rb_tree_node&lt;unsigned long&gt; const*) (1 samples, 0.02%)</title><rect x="952.1" y="1173" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="955.06" y="1183.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (546 samples, 9.18%)</title><rect x="716.3" y="1109" width="108.3" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="719.29" y="1119.5" >bool LinkedLi..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; const&amp;) (1 samples, 0.02%)</title><rect x="449.6" y="1397" width="0.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="452.57" y="1407.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate(std::allocator&lt;unsigned long&gt;&amp;, unsigned long) (1 samples, 0.02%)</title><rect x="576.8" y="1301" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="579.78" y="1311.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (2 samples, 0.03%)</title><rect x="759.4" y="869" width="0.4" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="762.36" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (2 samples, 0.03%)</title><rect x="784.6" y="565" width="0.4" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="787.56" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (4 samples, 0.07%)</title><rect x="866.9" y="1301" width="0.8" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="869.92" y="1311.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;unsigned long&gt; std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_&lt;unsigned long const&amp;, std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, unsigned long const&amp;, std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_Alloc_node&amp;) (3 samples, 0.05%)</title><rect x="945.5" y="1301" width="0.6" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="948.51" y="1311.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;unsigned long&gt;(unsigned long*) (1 samples, 0.02%)</title><rect x="964.4" y="1445" width="0.2" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="967.36" y="1455.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator*() const (1 samples, 0.02%)</title><rect x="582.7" y="1349" width="0.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="585.73" y="1359.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::destroy&lt;unsigned long&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*) (1 samples, 0.02%)</title><rect x="520.6" y="1381" width="0.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="523.62" y="1391.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (1 samples, 0.02%)</title><rect x="787.3" y="453" width="0.2" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="790.34" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (6 samples, 0.10%)</title><rect x="736.1" y="997" width="1.2" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="739.14" y="1007.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (812 samples, 13.66%)</title><rect x="679.6" y="1205" width="161.1" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="682.58" y="1215.5" >bool LinkedList::Dep..</text>
</g>
<g >
<title>SpanningTree::Propagate(unsigned long) (71 samples, 1.19%)</title><rect x="944.9" y="1365" width="14.1" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="947.91" y="1375.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (1 samples, 0.02%)</title><rect x="781.2" y="645" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="784.19" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_S_key(std::_Rb_tree_node&lt;unsigned long&gt; const*) (1 samples, 0.02%)</title><rect x="947.1" y="1253" width="0.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="950.09" y="1263.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (130 samples, 2.19%)</title><rect x="770.1" y="805" width="25.8" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="773.07" y="815.5" >b..</text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (1 samples, 0.02%)</title><rect x="813.7" y="965" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="816.73" y="975.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::destroy&lt;unsigned long&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*) (1 samples, 0.02%)</title><rect x="719.5" y="1077" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="722.47" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (3 samples, 0.05%)</title><rect x="879.8" y="1317" width="0.6" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="882.82" y="1327.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (2 samples, 0.03%)</title><rect x="914.5" y="1397" width="0.4" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="917.55" y="1407.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;) (2 samples, 0.03%)</title><rect x="953.4" y="1173" width="0.4" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="956.44" y="1183.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (3 samples, 0.05%)</title><rect x="778.2" y="709" width="0.6" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="781.21" y="719.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (3 samples, 0.05%)</title><rect x="829.4" y="1141" width="0.6" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="832.41" y="1151.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_Tp_allocator() (8 samples, 0.13%)</title><rect x="459.7" y="1381" width="1.6" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="462.69" y="1391.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (1 samples, 0.02%)</title><rect x="791.7" y="709" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="794.71" y="719.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (7 samples, 0.12%)</title><rect x="943.5" y="1333" width="1.4" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="946.52" y="1343.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (3 samples, 0.05%)</title><rect x="818.3" y="1061" width="0.6" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="821.30" y="1071.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (7 samples, 0.12%)</title><rect x="911.2" y="1413" width="1.4" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="914.17" y="1423.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (3 samples, 0.05%)</title><rect x="832.8" y="1157" width="0.6" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="835.79" y="1167.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (3 samples, 0.05%)</title><rect x="791.1" y="709" width="0.6" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="794.11" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::operator[](unsigned long) const (1 samples, 0.02%)</title><rect x="919.9" y="1445" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="922.91" y="1455.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (1 samples, 0.02%)</title><rect x="780.2" y="661" width="0.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="783.20" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="672.4" y="1173" width="0.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="675.44" y="1183.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (56 samples, 0.94%)</title><rect x="779.2" y="693" width="11.1" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="782.20" y="703.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::destroy&lt;unsigned long&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*) (1 samples, 0.02%)</title><rect x="707.0" y="1109" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="709.97" y="1119.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (14 samples, 0.24%)</title><rect x="593.6" y="1317" width="2.8" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="596.65" y="1327.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (2 samples, 0.03%)</title><rect x="833.8" y="1173" width="0.4" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="836.78" y="1183.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (2 samples, 0.03%)</title><rect x="815.9" y="1029" width="0.4" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="818.92" y="1039.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (6 samples, 0.10%)</title><rect x="834.4" y="1173" width="1.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="837.37" y="1183.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (1 samples, 0.02%)</title><rect x="771.9" y="773" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="774.86" y="783.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate(unsigned long*, unsigned long) (6 samples, 0.10%)</title><rect x="494.8" y="1365" width="1.2" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="497.82" y="1375.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::destroy&lt;unsigned long&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*) (2 samples, 0.03%)</title><rect x="747.1" y="933" width="0.4" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="750.05" y="943.5" ></text>
</g>
<g >
<title>DisjointSetUnion::Get(unsigned long) (1 samples, 0.02%)</title><rect x="276.3" y="1445" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="279.32" y="1455.5" ></text>
</g>
<g >
<title>unsigned long* std::__niter_base&lt;unsigned long*&gt;(unsigned long*) (9 samples, 0.15%)</title><rect x="511.9" y="1333" width="1.8" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="514.89" y="1343.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (4 samples, 0.07%)</title><rect x="819.1" y="1061" width="0.8" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="822.09" y="1071.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;unsigned long&gt;::__new_allocator() (1 samples, 0.02%)</title><rect x="921.9" y="1397" width="0.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="924.89" y="1407.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (2 samples, 0.03%)</title><rect x="838.5" y="1157" width="0.4" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="841.54" y="1167.5" ></text>
</g>
<g >
<title>LinkedList::AddEdge(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="948.1" y="1317" width="0.4" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="951.09" y="1327.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (10 samples, 0.17%)</title><rect x="759.8" y="853" width="1.9" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="762.75" y="863.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (358 samples, 6.02%)</title><rect x="740.5" y="997" width="71.1" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="743.50" y="1007.5" >bool Lin..</text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (1,735 samples, 29.18%)</title><rect x="551.4" y="1397" width="344.3" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="554.38" y="1407.5" >bool LinkedList::DepthFirstSearch&lt;SpanningTree..</text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (1 samples, 0.02%)</title><rect x="871.7" y="1301" width="0.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="874.68" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (11 samples, 0.18%)</title><rect x="692.5" y="1157" width="2.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="695.48" y="1167.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (1 samples, 0.02%)</title><rect x="958.8" y="1237" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="961.80" y="1247.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="816.3" y="997" width="0.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="819.31" y="1007.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (8 samples, 0.13%)</title><rect x="878.8" y="1333" width="1.6" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="881.83" y="1343.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (1 samples, 0.02%)</title><rect x="791.9" y="709" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="794.90" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="661.9" y="1205" width="0.2" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="664.92" y="1215.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (1 samples, 0.02%)</title><rect x="397.8" y="1461" width="0.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="400.78" y="1471.5" ></text>
</g>
<g >
<title>std::vector&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::operator[](unsigned long) const (1 samples, 0.02%)</title><rect x="795.7" y="789" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="798.67" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (2 samples, 0.03%)</title><rect x="706.4" y="1109" width="0.4" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="709.37" y="1119.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;unsigned long&gt;, bool&gt; std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt;(unsigned long const&amp;) (18 samples, 0.30%)</title><rect x="931.8" y="1397" width="3.6" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="934.81" y="1407.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (2 samples, 0.03%)</title><rect x="911.8" y="1397" width="0.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="914.77" y="1407.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate(std::allocator&lt;unsigned long&gt;&amp;, unsigned long) (3 samples, 0.05%)</title><rect x="532.1" y="1333" width="0.6" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="535.13" y="1343.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (2 samples, 0.03%)</title><rect x="776.4" y="725" width="0.4" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="779.42" y="735.5" ></text>
</g>
<g >
<title>SpanningTree::Propagate(unsigned long) (139 samples, 2.34%)</title><rect x="931.6" y="1445" width="27.6" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="934.61" y="1455.5" >S..</text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (21 samples, 0.35%)</title><rect x="611.1" y="1317" width="4.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="614.11" y="1327.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (8 samples, 0.13%)</title><rect x="683.4" y="1157" width="1.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="686.35" y="1167.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator++() (1 samples, 0.02%)</title><rect x="821.1" y="1077" width="0.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="824.08" y="1087.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="950.1" y="1269" width="0.4" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="953.07" y="1279.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator++(int) (1 samples, 0.02%)</title><rect x="931.4" y="1397" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="934.42" y="1407.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (1 samples, 0.02%)</title><rect x="824.3" y="1077" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="827.25" y="1087.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="476.2" y="1365" width="0.4" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="479.17" y="1375.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (15 samples, 0.25%)</title><rect x="644.3" y="1269" width="2.9" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="647.25" y="1279.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (6 samples, 0.10%)</title><rect x="680.8" y="1173" width="1.2" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="683.77" y="1183.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (2 samples, 0.03%)</title><rect x="939.2" y="1333" width="0.4" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="942.16" y="1343.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (3 samples, 0.05%)</title><rect x="764.1" y="821" width="0.6" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="767.12" y="831.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (23 samples, 0.39%)</title><rect x="628.2" y="1301" width="4.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="631.18" y="1311.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base() const (1 samples, 0.02%)</title><rect x="527.8" y="1365" width="0.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="530.76" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::max_size() const (1 samples, 0.02%)</title><rect x="475.8" y="1381" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="478.77" y="1391.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (1 samples, 0.02%)</title><rect x="854.6" y="1253" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="857.61" y="1263.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (1 samples, 0.02%)</title><rect x="816.9" y="1029" width="0.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="819.91" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="781.0" y="645" width="0.2" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="783.99" y="655.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (32 samples, 0.54%)</title><rect x="782.4" y="629" width="6.3" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="785.38" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_Alloc_node::_Alloc_node(std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;&amp;) (1 samples, 0.02%)</title><rect x="922.7" y="1397" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="925.68" y="1407.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator*() const (2 samples, 0.03%)</title><rect x="710.1" y="1093" width="0.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="713.14" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (1 samples, 0.02%)</title><rect x="847.7" y="1205" width="0.2" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="850.67" y="1215.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (1 samples, 0.02%)</title><rect x="785.4" y="533" width="0.2" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="788.35" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (3 samples, 0.05%)</title><rect x="817.7" y="1029" width="0.6" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="820.70" y="1039.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate(unsigned long) (1 samples, 0.02%)</title><rect x="576.8" y="1317" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="579.78" y="1327.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (1 samples, 0.02%)</title><rect x="807.6" y="933" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="810.58" y="943.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="723.0" y="1029" width="0.2" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="726.04" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::max_size() const (10 samples, 0.17%)</title><rect x="535.1" y="1333" width="2.0" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="538.11" y="1343.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() (1 samples, 0.02%)</title><rect x="945.9" y="1237" width="0.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="948.90" y="1247.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (19 samples, 0.32%)</title><rect x="927.8" y="1429" width="3.8" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="930.84" y="1439.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (1 samples, 0.02%)</title><rect x="735.9" y="997" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="738.94" y="1007.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;unsigned long&gt;, bool&gt; std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt;(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="948.1" y="1285" width="0.4" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="951.09" y="1295.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (1 samples, 0.02%)</title><rect x="949.5" y="1205" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="952.48" y="1215.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (306 samples, 5.15%)</title><rect x="747.5" y="965" width="60.7" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="750.45" y="975.5" >bool L..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (1 samples, 0.02%)</title><rect x="795.1" y="773" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="798.08" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="759.2" y="837" width="0.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="762.16" y="847.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator++() (1 samples, 0.02%)</title><rect x="793.9" y="773" width="0.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="796.89" y="783.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;unsigned long&gt;, bool&gt; std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt;(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="953.4" y="1189" width="0.4" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="956.44" y="1199.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;unsigned long&gt;, std::_Rb_tree_const_iterator&lt;unsigned long&gt;) (3 samples, 0.05%)</title><rect x="943.5" y="1317" width="0.6" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="946.52" y="1327.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="901.4" y="1365" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="904.45" y="1375.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="789.5" y="661" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="792.52" y="671.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate(unsigned long*, unsigned long) (1 samples, 0.02%)</title><rect x="484.5" y="1381" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="487.50" y="1391.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (10 samples, 0.17%)</title><rect x="759.8" y="869" width="1.9" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="762.75" y="879.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (3 samples, 0.05%)</title><rect x="814.3" y="1013" width="0.6" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="817.33" y="1023.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned long, unsigned long&gt;::operator=(std::pair&lt;unsigned long, unsigned long&gt; const&amp;) (11 samples, 0.18%)</title><rect x="409.7" y="1365" width="2.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="412.68" y="1375.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (3 samples, 0.05%)</title><rect x="725.6" y="1029" width="0.6" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="728.62" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin() (1 samples, 0.02%)</title><rect x="691.9" y="1125" width="0.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="694.88" y="1135.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_get_insert_unique_pos(unsigned long const&amp;) (5 samples, 0.08%)</title><rect x="949.1" y="1253" width="1.0" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="952.08" y="1263.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (3 samples, 0.05%)</title><rect x="941.9" y="1365" width="0.6" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="944.93" y="1375.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_lower_bound(std::_Rb_tree_node&lt;unsigned long&gt;*, std::_Rb_tree_node_base*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="944.1" y="1301" width="0.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="947.12" y="1311.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator*() const (1 samples, 0.02%)</title><rect x="592.7" y="1333" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="595.66" y="1343.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_S_key(std::_Rb_tree_node&lt;unsigned long&gt; const*) (4 samples, 0.07%)</title><rect x="923.7" y="1381" width="0.8" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="926.68" y="1391.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::min&lt;unsigned long&gt;(unsigned long const&amp;, unsigned long const&amp;) (10 samples, 0.17%)</title><rect x="503.4" y="1317" width="1.9" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="506.35" y="1327.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (17 samples, 0.29%)</title><rect x="545.8" y="1365" width="3.4" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="548.82" y="1375.5" ></text>
</g>
<g >
<title>LinkedList::RemoveEdge(unsigned long, unsigned long) (8 samples, 0.13%)</title><rect x="943.3" y="1365" width="1.6" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="946.32" y="1375.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="947.5" y="1317" width="0.4" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="950.49" y="1327.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="765.3" y="805" width="0.2" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="768.31" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (3 samples, 0.05%)</title><rect x="767.3" y="805" width="0.6" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="770.30" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (3 samples, 0.05%)</title><rect x="778.2" y="693" width="0.6" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="781.21" y="703.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (2 samples, 0.03%)</title><rect x="825.8" y="1077" width="0.4" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="828.84" y="1087.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (24 samples, 0.40%)</title><rect x="783.6" y="613" width="4.7" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="786.57" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (5 samples, 0.08%)</title><rect x="635.1" y="1269" width="1.0" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="638.13" y="1279.5" ></text>
</g>
<g >
<title>DisjointSetUnion::InSameSet(unsigned long, unsigned long) (16 samples, 0.27%)</title><rect x="1168.8" y="1461" width="3.1" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="1171.77" y="1471.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (1 samples, 0.02%)</title><rect x="786.9" y="37" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="789.94" y="47.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (1 samples, 0.02%)</title><rect x="958.6" y="1125" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="961.60" y="1135.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_check_len(unsigned long, char const*) const (52 samples, 0.87%)</title><rect x="497.2" y="1365" width="10.3" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="500.20" y="1375.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::max&lt;unsigned long&gt;(unsigned long const&amp;, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="541.1" y="1349" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="544.06" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::pop_back() (3 samples, 0.05%)</title><rect x="550.8" y="1381" width="0.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="553.78" y="1391.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::max_size(std::allocator&lt;unsigned long&gt; const&amp;) (3 samples, 0.05%)</title><rect x="464.5" y="1349" width="0.6" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="467.46" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (1 samples, 0.02%)</title><rect x="813.3" y="997" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="816.34" y="1007.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator++() (1 samples, 0.02%)</title><rect x="847.9" y="1237" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="850.87" y="1247.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (22 samples, 0.37%)</title><rect x="637.9" y="1285" width="4.4" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="640.90" y="1295.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (1 samples, 0.02%)</title><rect x="814.1" y="1013" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="817.13" y="1023.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;unsigned long&gt;, std::_Rb_tree_const_iterator&lt;unsigned long&gt;) (4 samples, 0.07%)</title><rect x="937.8" y="1365" width="0.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="940.77" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::pop_back() (1 samples, 0.02%)</title><rect x="780.8" y="661" width="0.2" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="783.79" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (1 samples, 0.02%)</title><rect x="816.5" y="1029" width="0.2" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="819.51" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (2 samples, 0.03%)</title><rect x="738.1" y="981" width="0.4" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="741.12" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; const&amp;) (4 samples, 0.07%)</title><rect x="454.9" y="1381" width="0.8" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="457.93" y="1391.5" ></text>
</g>
<g >
<title>LinkedList::AddEdge(unsigned long, unsigned long) (27 samples, 0.45%)</title><rect x="922.5" y="1445" width="5.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="925.49" y="1455.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_end() (1 samples, 0.02%)</title><rect x="937.2" y="1349" width="0.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="940.17" y="1359.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (1 samples, 0.02%)</title><rect x="949.5" y="1189" width="0.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="952.48" y="1199.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::pop_back() (1 samples, 0.02%)</title><rect x="608.9" y="1317" width="0.2" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="611.93" y="1327.5" ></text>
</g>
<g >
<title>SpanningTree::InitPhase() (109 samples, 1.83%)</title><rect x="398.2" y="1477" width="21.6" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="401.17" y="1487.5" >S..</text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (18 samples, 0.30%)</title><rect x="703.6" y="1141" width="3.6" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="706.59" y="1151.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (12 samples, 0.20%)</title><rect x="873.1" y="1333" width="2.4" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="876.07" y="1343.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (1 samples, 0.02%)</title><rect x="838.7" y="1141" width="0.2" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="841.74" y="1151.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (5 samples, 0.08%)</title><rect x="835.8" y="1157" width="1.0" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="838.76" y="1167.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (2 samples, 0.03%)</title><rect x="796.1" y="805" width="0.4" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="799.07" y="815.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;unsigned long&gt;::_Rb_tree_iterator(std::_Rb_tree_node_base*) (1 samples, 0.02%)</title><rect x="944.1" y="1285" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="947.12" y="1295.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (116 samples, 1.95%)</title><rect x="772.1" y="789" width="23.0" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="775.06" y="799.5" >b..</text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_S_key(std::_Rb_tree_node&lt;unsigned long&gt; const*) (2 samples, 0.03%)</title><rect x="949.3" y="1237" width="0.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="952.28" y="1247.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (3 samples, 0.05%)</title><rect x="607.1" y="1285" width="0.6" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="610.14" y="1295.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (12 samples, 0.20%)</title><rect x="906.8" y="1413" width="2.4" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="909.81" y="1423.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;unsigned long&gt; &gt; &gt;::deallocate(std::allocator&lt;std::_Rb_tree_node&lt;unsigned long&gt; &gt;&amp;, std::_Rb_tree_node&lt;unsigned long&gt;*, unsigned long) (1 samples, 0.02%)</title><rect x="937.8" y="1301" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="940.77" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_relocate(unsigned long*, unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt;&amp;) (18 samples, 0.30%)</title><rect x="471.0" y="1381" width="3.6" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="474.01" y="1391.5" ></text>
</g>
<g >
<title>SpanningTree::Propagate(unsigned long) (9 samples, 0.15%)</title><rect x="956.8" y="1077" width="1.8" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="959.82" y="1087.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (2 samples, 0.03%)</title><rect x="850.1" y="1237" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="853.05" y="1247.5" ></text>
</g>
<g >
<title>LinkedList::AddEdge(unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="951.5" y="1269" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="954.46" y="1279.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;unsigned long&gt;, bool&gt; std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt;(unsigned long const&amp;) (5 samples, 0.08%)</title><rect x="949.1" y="1269" width="1.0" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="952.08" y="1279.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (1 samples, 0.02%)</title><rect x="894.9" y="1365" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="897.90" y="1375.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;* std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_create_node&lt;unsigned long const&amp;&gt;(unsigned long const&amp;) (3 samples, 0.05%)</title><rect x="927.1" y="1365" width="0.5" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="930.05" y="1375.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (87 samples, 1.46%)</title><rect x="775.0" y="757" width="17.3" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="778.04" y="767.5" ></text>
</g>
<g >
<title>SpanningTree::Propagate(unsigned long) (42 samples, 0.71%)</title><rect x="950.7" y="1301" width="8.3" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="953.67" y="1311.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="954.4" y="1173" width="0.2" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="957.44" y="1183.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (2 samples, 0.03%)</title><rect x="855.2" y="1269" width="0.4" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="858.21" y="1279.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (2 samples, 0.03%)</title><rect x="823.5" y="1093" width="0.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="826.46" y="1103.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (29 samples, 0.49%)</title><rect x="29.4" y="1525" width="5.8" height="15.0" fill="rgb(234,99,99)" rx="2" ry="2" />
<text  x="32.45" y="1535.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (11 samples, 0.18%)</title><rect x="899.7" y="1397" width="2.1" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="902.66" y="1407.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;unsigned long&gt;, std::_Rb_tree_const_iterator&lt;unsigned long&gt;) (2 samples, 0.03%)</title><rect x="946.1" y="1301" width="0.4" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="949.10" y="1311.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_S_key(std::_Rb_tree_node&lt;unsigned long&gt; const*) (1 samples, 0.02%)</title><rect x="951.5" y="1189" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="954.46" y="1199.5" ></text>
</g>
<g >
<title>LinkedList::RemoveEdge(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="951.1" y="1285" width="0.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="954.06" y="1295.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_iterator&lt;unsigned long&gt; const&amp;) (1 samples, 0.02%)</title><rect x="944.7" y="1317" width="0.2" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="947.71" y="1327.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_get_insert_unique_pos(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="951.5" y="1221" width="0.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="954.46" y="1231.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (3 samples, 0.05%)</title><rect x="584.5" y="1317" width="0.6" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="587.52" y="1327.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (3 samples, 0.05%)</title><rect x="879.8" y="1301" width="0.6" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="882.82" y="1311.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="736.7" y="965" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="739.73" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__enable_if&lt;__is_scalar&lt;int&gt;::__value, void&gt;::__type std::__fill_a1&lt;int*, int&gt;(int*, int*, int const&amp;) (4 samples, 0.07%)</title><rect x="407.7" y="1381" width="0.8" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="410.70" y="1391.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (1 samples, 0.02%)</title><rect x="786.3" y="437" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="789.35" y="447.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;unsigned long&gt; &gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;std::_Rb_tree_node&lt;unsigned long&gt; &gt;&amp;, unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="935.0" y="1333" width="0.2" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="937.99" y="1343.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;std::pair&lt;unsigned long, unsigned long&gt; const*, std::vector&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::pair&lt;unsigned long, unsigned long&gt; const*, std::vector&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;std::pair&lt;unsigned long, unsigned long&gt; const*, std::vector&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt; &gt; &gt; const&amp;) (350 samples, 5.89%)</title><rect x="992.1" y="1477" width="69.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="995.14" y="1487.5" >bool __..</text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (8 samples, 0.13%)</title><rect x="786.1" y="501" width="1.6" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="789.15" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (2 samples, 0.03%)</title><rect x="836.8" y="1157" width="0.4" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="839.75" y="1167.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;) (1 samples, 0.02%)</title><rect x="938.8" y="1349" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="941.76" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (1 samples, 0.02%)</title><rect x="740.1" y="965" width="0.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="743.11" y="975.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (7 samples, 0.12%)</title><rect x="613.3" y="1269" width="1.4" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="616.30" y="1279.5" ></text>
</g>
<g >
<title>std::vector&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::operator[](unsigned long) (1 samples, 0.02%)</title><rect x="938.6" y="1397" width="0.2" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="941.56" y="1407.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (1 samples, 0.02%)</title><rect x="769.3" y="773" width="0.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="772.28" y="783.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::insert(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="952.1" y="1237" width="0.4" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="955.06" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (6 samples, 0.10%)</title><rect x="671.4" y="1189" width="1.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="674.44" y="1199.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (1 samples, 0.02%)</title><rect x="785.4" y="501" width="0.2" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="788.35" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (7 samples, 0.12%)</title><rect x="485.1" y="1381" width="1.4" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="488.10" y="1391.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;std::pair&lt;unsigned long, unsigned long&gt; const*, std::vector&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::pair&lt;unsigned long, unsigned long&gt; const*, std::vector&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;std::pair&lt;unsigned long, unsigned long&gt; const*, std::vector&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt; &gt; &gt; const&amp;) (2 samples, 0.03%)</title><rect x="1172.7" y="1461" width="0.4" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="1175.73" y="1471.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (5 samples, 0.08%)</title><rect x="868.1" y="1317" width="1.0" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="871.11" y="1327.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator*() const (2 samples, 0.03%)</title><rect x="629.6" y="1269" width="0.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="632.57" y="1279.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::clear() (1 samples, 0.02%)</title><rect x="957.6" y="981" width="0.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="960.61" y="991.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="954.4" y="1157" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="957.44" y="1167.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (7 samples, 0.12%)</title><rect x="733.2" y="1029" width="1.4" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="736.16" y="1039.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate(unsigned long*, unsigned long) (3 samples, 0.05%)</title><rect x="532.7" y="1349" width="0.6" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="535.72" y="1359.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (2 samples, 0.03%)</title><rect x="796.5" y="821" width="0.4" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="799.47" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (3 samples, 0.05%)</title><rect x="766.1" y="805" width="0.6" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="769.10" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator*() const (2 samples, 0.03%)</title><rect x="745.5" y="933" width="0.4" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="748.47" y="943.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::insert(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="950.9" y="1269" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="953.86" y="1279.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::equal_range(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="953.0" y="1189" width="0.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="956.05" y="1199.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::size() const (16 samples, 0.27%)</title><rect x="404.3" y="1461" width="3.2" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="407.33" y="1471.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator*() const (3 samples, 0.05%)</title><rect x="605.0" y="1301" width="0.6" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="607.96" y="1311.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long) (2 samples, 0.03%)</title><rect x="625.2" y="1237" width="0.4" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="628.20" y="1247.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;unsigned long&gt;*) (1 samples, 0.02%)</title><rect x="939.0" y="1317" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="941.96" y="1327.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::destroy&lt;unsigned long&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*) (2 samples, 0.03%)</title><rect x="665.5" y="1205" width="0.4" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="668.49" y="1215.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;unsigned long&gt; std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_&lt;unsigned long const&amp;, std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, unsigned long const&amp;, std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_Alloc_node&amp;) (2 samples, 0.03%)</title><rect x="947.1" y="1285" width="0.4" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="950.09" y="1295.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::pop_back() (3 samples, 0.05%)</title><rect x="586.3" y="1349" width="0.6" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="589.31" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::operator[](unsigned long) (1 samples, 0.02%)</title><rect x="956.6" y="1077" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="959.62" y="1087.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (2 samples, 0.03%)</title><rect x="830.0" y="1141" width="0.4" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="833.01" y="1151.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (6 samples, 0.10%)</title><rect x="457.5" y="1349" width="1.2" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="460.51" y="1359.5" ></text>
</g>
<g >
<title>unsigned long* std::__niter_base&lt;unsigned long*&gt;(unsigned long*) (5 samples, 0.08%)</title><rect x="473.6" y="1349" width="1.0" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="476.59" y="1359.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;unsigned long, unsigned long&gt; const*, std::vector&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt; &gt; &gt;::base() const (1 samples, 0.02%)</title><rect x="1172.5" y="1461" width="0.2" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="1175.54" y="1471.5" ></text>
</g>
<g >
<title>LinkedList::AddEdge(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="953.4" y="1221" width="0.4" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="956.44" y="1231.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector() (1 samples, 0.02%)</title><rect x="965.4" y="1461" width="0.1" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="968.35" y="1471.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (1 samples, 0.02%)</title><rect x="786.9" y="69" width="0.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="789.94" y="79.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate(unsigned long*, unsigned long) (1 samples, 0.02%)</title><rect x="689.7" y="1125" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="692.70" y="1135.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (3 samples, 0.05%)</title><rect x="849.5" y="1205" width="0.6" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="852.46" y="1215.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="697.0" y="1125" width="0.2" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="700.04" y="1135.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="638.3" y="1253" width="0.2" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="641.30" y="1263.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (1 samples, 0.02%)</title><rect x="785.8" y="517" width="0.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="788.75" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="797.7" y="821" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="800.66" y="831.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (1 samples, 0.02%)</title><rect x="716.7" y="1077" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="719.69" y="1087.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (3 samples, 0.05%)</title><rect x="956.8" y="1029" width="0.6" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="959.82" y="1039.5" ></text>
</g>
<g >
<title>unsigned long* std::__relocate_a&lt;unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt; &gt;(unsigned long*, unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt;&amp;) (1 samples, 0.02%)</title><rect x="514.3" y="1365" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="517.27" y="1375.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator*() const (1 samples, 0.02%)</title><rect x="661.7" y="1221" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="664.72" y="1231.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (578 samples, 9.72%)</title><rect x="711.9" y="1125" width="114.7" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="714.93" y="1135.5" >bool LinkedLis..</text>
</g>
<g >
<title>std::vector&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::operator[](unsigned long) const (3 samples, 0.05%)</title><rect x="912.8" y="1413" width="0.6" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="915.76" y="1423.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (2 samples, 0.03%)</title><rect x="783.2" y="581" width="0.4" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="786.17" y="591.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (8 samples, 0.13%)</title><rect x="613.1" y="1285" width="1.6" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="616.10" y="1295.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (4 samples, 0.07%)</title><rect x="696.6" y="1141" width="0.8" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="699.65" y="1151.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="746.7" y="917" width="0.2" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="749.66" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="784.4" y="565" width="0.2" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="787.36" y="575.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.02%)</title><rect x="937.8" y="1285" width="0.2" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="940.77" y="1295.5" ></text>
</g>
<g >
<title>std::vector&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::operator[](unsigned long) (1 samples, 0.02%)</title><rect x="953.2" y="1221" width="0.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="956.25" y="1231.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_S_key(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="952.1" y="1189" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="955.06" y="1199.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (1 samples, 0.02%)</title><rect x="854.0" y="1253" width="0.2" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="857.02" y="1263.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (1 samples, 0.02%)</title><rect x="805.8" y="917" width="0.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="808.80" y="927.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (1 samples, 0.02%)</title><rect x="799.0" y="837" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="802.05" y="847.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (8 samples, 0.13%)</title><rect x="888.9" y="1365" width="1.6" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="891.95" y="1375.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;unsigned long&gt;) (1 samples, 0.02%)</title><rect x="939.0" y="1333" width="0.2" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="941.96" y="1343.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (2 samples, 0.03%)</title><rect x="790.7" y="693" width="0.4" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="793.71" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (4 samples, 0.07%)</title><rect x="756.2" y="885" width="0.8" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="759.18" y="895.5" ></text>
</g>
<g >
<title>std::enable_if&lt;__and_&lt;std::__not_&lt;std::__is_tuple_like&lt;unsigned long&gt; &gt;, std::is_move_constructible&lt;unsigned long&gt;, std::is_move_assignable&lt;unsigned long&gt; &gt;::value, void&gt;::type std::swap&lt;unsigned long&gt;(unsigned long&amp;, unsigned long&amp;) (3 samples, 0.05%)</title><rect x="442.0" y="1445" width="0.6" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="445.03" y="1455.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (1 samples, 0.02%)</title><rect x="781.0" y="661" width="0.2" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="783.99" y="671.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="744.9" y="917" width="0.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="747.87" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (1 samples, 0.02%)</title><rect x="932.8" y="1317" width="0.2" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="935.81" y="1327.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::insert(unsigned long const&amp;) (6 samples, 0.10%)</title><rect x="940.3" y="1365" width="1.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="943.35" y="1375.5" ></text>
</g>
<g >
<title>std::_Identity&lt;unsigned long&gt;::operator()(unsigned long const&amp;) const (2 samples, 0.03%)</title><rect x="932.0" y="1381" width="0.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="935.01" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (1 samples, 0.02%)</title><rect x="580.6" y="1317" width="0.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="583.55" y="1327.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (2 samples, 0.03%)</title><rect x="708.8" y="1109" width="0.3" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="711.75" y="1119.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (2 samples, 0.03%)</title><rect x="896.3" y="1365" width="0.4" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="899.29" y="1375.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (4 samples, 0.07%)</title><rect x="786.5" y="421" width="0.8" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="789.55" y="431.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="646.6" y="1221" width="0.4" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="649.64" y="1231.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;unsigned long&gt;::_Rb_tree_iterator(std::_Rb_tree_node_base*) (1 samples, 0.02%)</title><rect x="928.8" y="1381" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="931.84" y="1391.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::destroy&lt;unsigned long&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*) (2 samples, 0.03%)</title><rect x="586.5" y="1333" width="0.4" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="589.51" y="1343.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (144 samples, 2.42%)</title><rect x="767.9" y="821" width="28.6" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="770.89" y="831.5" >bo..</text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_const_iterator&lt;unsigned long&gt;, bool&gt;::pair&lt;std::_Rb_tree_iterator&lt;unsigned long&gt;&amp;, bool&amp;&gt;(std::_Rb_tree_iterator&lt;unsigned long&gt;&amp;, bool&amp;) (1 samples, 0.02%)</title><rect x="948.9" y="1269" width="0.2" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="951.88" y="1279.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (1 samples, 0.02%)</title><rect x="817.5" y="1029" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="820.50" y="1039.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (3 samples, 0.05%)</title><rect x="915.3" y="1429" width="0.6" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="918.34" y="1439.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (4 samples, 0.07%)</title><rect x="529.0" y="1365" width="0.7" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="531.95" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (20 samples, 0.34%)</title><rect x="638.3" y="1269" width="4.0" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="641.30" y="1279.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (2 samples, 0.03%)</title><rect x="775.6" y="741" width="0.4" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="778.63" y="751.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;) (3 samples, 0.05%)</title><rect x="925.5" y="1397" width="0.6" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="928.46" y="1407.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (11 samples, 0.18%)</title><rect x="850.8" y="1253" width="2.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="853.84" y="1263.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::__is_bitwise_relocatable&lt;unsigned long&gt;::value, unsigned long*&gt;::type std::__relocate_a_1&lt;unsigned long, unsigned long&gt;(unsigned long*, unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt;&amp;) (3 samples, 0.05%)</title><rect x="473.0" y="1349" width="0.6" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="475.99" y="1359.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (9 samples, 0.15%)</title><rect x="859.6" y="1285" width="1.8" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="862.58" y="1295.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (2 samples, 0.03%)</title><rect x="771.7" y="789" width="0.4" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="774.66" y="799.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_get_insert_unique_pos(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="956.2" y="1045" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="959.22" y="1055.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (4 samples, 0.07%)</title><rect x="825.4" y="1109" width="0.8" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="828.44" y="1119.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_lower_bound(std::_Rb_tree_node&lt;unsigned long&gt;*, std::_Rb_tree_node_base*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="958.2" y="933" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="961.21" y="943.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_drop_node(std::_Rb_tree_node&lt;unsigned long&gt;*) (1 samples, 0.02%)</title><rect x="937.8" y="1333" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="940.77" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (2 samples, 0.03%)</title><rect x="780.4" y="661" width="0.4" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="783.39" y="671.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::min&lt;unsigned long&gt;(unsigned long const&amp;, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="626.6" y="1205" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="629.59" y="1215.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (10 samples, 0.17%)</title><rect x="897.7" y="1397" width="2.0" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="900.68" y="1407.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (15 samples, 0.25%)</title><rect x="629.6" y="1285" width="2.9" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="632.57" y="1295.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="808.0" y="949" width="0.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="810.98" y="959.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="623.2" y="1253" width="0.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="626.22" y="1263.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (6 samples, 0.10%)</title><rect x="860.2" y="1269" width="1.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="863.17" y="1279.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base() const (2 samples, 0.03%)</title><rect x="455.3" y="1365" width="0.4" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="458.33" y="1375.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (2 samples, 0.03%)</title><rect x="739.7" y="965" width="0.4" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="742.71" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (1 samples, 0.02%)</title><rect x="806.2" y="917" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="809.19" y="927.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (1 samples, 0.02%)</title><rect x="791.9" y="725" width="0.2" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="794.90" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_max_size(std::allocator&lt;unsigned long&gt; const&amp;) (27 samples, 0.45%)</title><rect x="500.0" y="1333" width="5.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="502.98" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (1 samples, 0.02%)</title><rect x="645.6" y="1253" width="0.2" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="648.64" y="1263.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (1 samples, 0.02%)</title><rect x="947.1" y="1221" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="950.09" y="1231.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="742.1" y="965" width="0.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="745.09" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (1 samples, 0.02%)</title><rect x="789.3" y="645" width="0.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="792.32" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::equal_range(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="958.0" y="997" width="0.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="961.01" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt; &gt;::assign(unsigned long, std::pair&lt;unsigned long, unsigned long&gt; const&amp;) (17 samples, 0.29%)</title><rect x="408.5" y="1461" width="3.4" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="411.49" y="1471.5" ></text>
</g>
<g >
<title>void std::__fill_a&lt;unsigned long*, unsigned long&gt;(unsigned long*, unsigned long*, unsigned long const&amp;) (11 samples, 0.18%)</title><rect x="414.2" y="1397" width="2.2" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="417.25" y="1407.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator++() (1 samples, 0.02%)</title><rect x="812.3" y="997" width="0.2" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="815.34" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (1 samples, 0.02%)</title><rect x="939.8" y="1301" width="0.1" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="942.75" y="1311.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::size() const (1 samples, 0.02%)</title><rect x="959.0" y="1429" width="0.2" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="962.00" y="1439.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::size() const (13 samples, 0.22%)</title><rect x="387.1" y="1445" width="2.5" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="390.06" y="1455.5" ></text>
</g>
<g >
<title>std::_Identity&lt;unsigned long&gt;::operator()(unsigned long const&amp;) const (1 samples, 0.02%)</title><rect x="932.6" y="1349" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="935.61" y="1359.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (2 samples, 0.03%)</title><rect x="846.1" y="1221" width="0.4" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="849.08" y="1231.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (1 samples, 0.02%)</title><rect x="805.8" y="933" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="808.80" y="943.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="714.1" y="1077" width="0.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="717.11" y="1087.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (1 samples, 0.02%)</title><rect x="787.7" y="485" width="0.2" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="790.74" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="822.7" y="1045" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="825.66" y="1055.5" ></text>
</g>
<g >
<title>DisjointSetUnion::Get(unsigned long) (14 samples, 0.24%)</title><rect x="1169.2" y="1445" width="2.7" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1172.16" y="1455.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="665.3" y="1189" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="668.29" y="1199.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (10 samples, 0.17%)</title><rect x="742.3" y="981" width="2.0" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="745.29" y="991.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="951.7" y="1253" width="0.4" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="954.66" y="1263.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (2 samples, 0.03%)</title><rect x="859.2" y="1237" width="0.4" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="862.18" y="1247.5" ></text>
</g>
<g >
<title>LinkedList::RemoveEdge(unsigned long, unsigned long) (3 samples, 0.05%)</title><rect x="941.9" y="1381" width="0.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="944.93" y="1391.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long) (2 samples, 0.03%)</title><rect x="532.9" y="1333" width="0.4" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="535.92" y="1343.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (2 samples, 0.03%)</title><rect x="852.0" y="1221" width="0.4" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="855.03" y="1231.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="457.3" y="1349" width="0.2" height="15.0" fill="rgb(239,106,106)" rx="2" ry="2" />
<text  x="460.31" y="1359.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (1 samples, 0.02%)</title><rect x="834.0" y="1141" width="0.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="836.98" y="1151.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (6 samples, 0.10%)</title><rect x="935.4" y="1397" width="1.2" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="938.39" y="1407.5" ></text>
</g>
<g >
<title>std::less&lt;unsigned long&gt;::operator()(unsigned long const&amp;, unsigned long const&amp;) const (1 samples, 0.02%)</title><rect x="937.4" y="1349" width="0.2" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="940.37" y="1359.5" ></text>
</g>
<g >
<title>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;) (1 samples, 0.02%)</title><rect x="943.9" y="1301" width="0.2" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="946.92" y="1311.5" ></text>
</g>
<g >
<title>SpanningTree::Propagate(unsigned long) (23 samples, 0.39%)</title><rect x="954.2" y="1205" width="4.6" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="957.24" y="1215.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="804.6" y="917" width="0.2" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="807.60" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (1 samples, 0.02%)</title><rect x="366.4" y="1429" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="369.42" y="1439.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;* std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_Alloc_node::operator()&lt;unsigned long const&amp;&gt;(unsigned long const&amp;) const (2 samples, 0.03%)</title><rect x="934.8" y="1365" width="0.4" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="937.79" y="1375.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;unsigned long&gt;::_M_max_size() const (1 samples, 0.02%)</title><rect x="493.8" y="1333" width="0.2" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="496.83" y="1343.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (2 samples, 0.03%)</title><rect x="383.1" y="1445" width="0.4" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="386.09" y="1455.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="784.2" y="565" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="787.16" y="575.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (2 samples, 0.03%)</title><rect x="786.9" y="133" width="0.4" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="789.94" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;unsigned long&gt;::_Rb_tree_iterator(std::_Rb_tree_node_base*) (1 samples, 0.02%)</title><rect x="926.9" y="1381" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="929.85" y="1391.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="773.2" y="725" width="0.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="776.25" y="735.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (1,029 samples, 17.31%)</title><rect x="650.8" y="1269" width="204.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="653.80" y="1279.5" >bool LinkedList::DepthFirs..</text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (2 samples, 0.03%)</title><rect x="786.9" y="165" width="0.4" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="789.94" y="175.5" ></text>
</g>
<g >
<title>SpanningTree::Propagate(unsigned long) (14 samples, 0.24%)</title><rect x="955.8" y="1125" width="2.8" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="958.83" y="1135.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;unsigned long&gt;) (1 samples, 0.02%)</title><rect x="937.8" y="1349" width="0.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="940.77" y="1359.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (6 samples, 0.10%)</title><rect x="548.0" y="1349" width="1.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="551.01" y="1359.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="744.7" y="933" width="0.2" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="747.67" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (1 samples, 0.02%)</title><rect x="774.4" y="741" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="777.44" y="751.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (5 samples, 0.08%)</title><rect x="856.0" y="1269" width="1.0" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="859.00" y="1279.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (4 samples, 0.07%)</title><rect x="518.2" y="1365" width="0.8" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="521.24" y="1375.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="688.7" y="1125" width="0.2" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="691.71" y="1135.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (6 samples, 0.10%)</title><rect x="786.3" y="469" width="1.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="789.35" y="479.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (4 samples, 0.07%)</title><rect x="772.7" y="773" width="0.7" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="775.65" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="828.2" y="1125" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="831.22" y="1135.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (2 samples, 0.03%)</title><rect x="759.4" y="853" width="0.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="762.36" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_upper_bound(std::_Rb_tree_node&lt;unsigned long&gt;*, std::_Rb_tree_node_base*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="955.8" y="1045" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="958.83" y="1055.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (2 samples, 0.03%)</title><rect x="809.0" y="965" width="0.4" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="811.97" y="975.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (1 samples, 0.02%)</title><rect x="784.4" y="597" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="787.36" y="607.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::insert(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="957.4" y="1029" width="0.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="960.41" y="1039.5" ></text>
</g>
<g >
<title>LinkedList::RemoveEdge(unsigned long, unsigned long) (6 samples, 0.10%)</title><rect x="935.4" y="1429" width="1.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="938.39" y="1439.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;* std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_Alloc_node::operator()&lt;unsigned long const&amp;&gt;(unsigned long const&amp;) const (1 samples, 0.02%)</title><rect x="947.3" y="1269" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="950.29" y="1279.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (3 samples, 0.05%)</title><rect x="822.9" y="1093" width="0.6" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="825.86" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (2 samples, 0.03%)</title><rect x="792.3" y="725" width="0.4" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="795.30" y="735.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="901.6" y="1381" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="904.65" y="1391.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (2 samples, 0.03%)</title><rect x="694.3" y="1125" width="0.4" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="697.27" y="1135.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (3 samples, 0.05%)</title><rect x="614.7" y="1301" width="0.6" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="617.69" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (1 samples, 0.02%)</title><rect x="670.1" y="1205" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="673.05" y="1215.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (4 samples, 0.07%)</title><rect x="849.3" y="1237" width="0.8" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="852.26" y="1247.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (4 samples, 0.07%)</title><rect x="872.3" y="1333" width="0.8" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="875.28" y="1343.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="797.9" y="805" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="800.86" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (19 samples, 0.32%)</title><rect x="688.3" y="1157" width="3.8" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="691.31" y="1167.5" ></text>
</g>
<g >
<title>SpanningTree::Propagate(unsigned long) (96 samples, 1.61%)</title><rect x="939.9" y="1397" width="19.1" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="942.95" y="1407.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.02%)</title><rect x="625.4" y="1221" width="0.2" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="628.40" y="1231.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[](unsigned long) (8 samples, 0.13%)</title><rect x="389.6" y="1461" width="1.6" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="392.64" y="1471.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (4 samples, 0.07%)</title><rect x="762.5" y="821" width="0.8" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="765.53" y="831.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="603.8" y="1285" width="0.2" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="606.77" y="1295.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (3 samples, 0.05%)</title><rect x="559.1" y="1333" width="0.6" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="562.12" y="1343.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (15 samples, 0.25%)</title><rect x="476.8" y="1429" width="2.9" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="479.76" y="1439.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::destroy&lt;unsigned long&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*) (1 samples, 0.02%)</title><rect x="780.8" y="645" width="0.2" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="783.79" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (8 samples, 0.13%)</title><rect x="668.5" y="1205" width="1.6" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="671.47" y="1215.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="837.0" y="1141" width="0.2" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="839.95" y="1151.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_relocate(unsigned long*, unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt;&amp;) (1 samples, 0.02%)</title><rect x="574.8" y="1333" width="0.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="577.80" y="1343.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (3 samples, 0.05%)</title><rect x="646.4" y="1237" width="0.6" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="649.44" y="1247.5" ></text>
</g>
<g >
<title>LinkedList::AddEdge(unsigned long, unsigned long) (6 samples, 0.10%)</title><rect x="936.6" y="1413" width="1.2" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="939.58" y="1423.5" ></text>
</g>
<g >
<title>__gnu_cxx::__enable_if&lt;!__is_scalar&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;::__value, void&gt;::__type std::__fill_a1&lt;std::pair&lt;unsigned long, unsigned long&gt;*, std::pair&lt;unsigned long, unsigned long&gt; &gt;(std::pair&lt;unsigned long, unsigned long&gt;*, std::pair&lt;unsigned long, unsigned long&gt;*, std::pair&lt;unsigned long, unsigned long&gt; const&amp;) (1 samples, 0.02%)</title><rect x="409.1" y="1397" width="0.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="412.09" y="1407.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_Tp_allocator() (2 samples, 0.03%)</title><rect x="496.0" y="1365" width="0.4" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="499.01" y="1375.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator*() const (1 samples, 0.02%)</title><rect x="773.4" y="741" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="776.45" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (3 samples, 0.05%)</title><rect x="677.6" y="1157" width="0.6" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="680.60" y="1167.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (6 samples, 0.10%)</title><rect x="595.2" y="1301" width="1.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="598.24" y="1311.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;* std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_create_node&lt;unsigned long const&amp;&gt;(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="941.3" y="1301" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="944.34" y="1311.5" ></text>
</g>
<g >
<title>void std::__fill_a&lt;std::pair&lt;unsigned long, unsigned long&gt;*, std::pair&lt;unsigned long, unsigned long&gt; &gt;(std::pair&lt;unsigned long, unsigned long&gt;*, std::pair&lt;unsigned long, unsigned long&gt;*, std::pair&lt;unsigned long, unsigned long&gt; const&amp;) (13 samples, 0.22%)</title><rect x="409.3" y="1397" width="2.6" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="412.29" y="1407.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_drop_node(std::_Rb_tree_node&lt;unsigned long&gt;*) (1 samples, 0.02%)</title><rect x="941.9" y="1301" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="944.93" y="1311.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::destroy&lt;unsigned long&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*) (1 samples, 0.02%)</title><rect x="719.3" y="1061" width="0.2" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="722.27" y="1071.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_S_key(std::_Rb_tree_node&lt;unsigned long&gt; const*) (4 samples, 0.07%)</title><rect x="934.0" y="1349" width="0.8" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="937.00" y="1359.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="781.0" y="629" width="0.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="783.99" y="639.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (4 samples, 0.07%)</title><rect x="458.7" y="1349" width="0.8" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="461.70" y="1359.5" ></text>
</g>
<g >
<title>__memcpy_avx_unaligned_erms (3 samples, 0.05%)</title><rect x="538.9" y="1317" width="0.6" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="541.88" y="1327.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="954.6" y="1157" width="0.4" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="957.64" y="1167.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (1 samples, 0.02%)</title><rect x="794.9" y="757" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="797.88" y="767.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate(std::allocator&lt;unsigned long&gt;&amp;, unsigned long) (14 samples, 0.24%)</title><rect x="456.7" y="1365" width="2.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="459.72" y="1375.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;unsigned long&gt;::_Rb_tree_iterator(std::_Rb_tree_node_base*) (1 samples, 0.02%)</title><rect x="938.0" y="1333" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="940.97" y="1343.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="953.8" y="1189" width="0.4" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="956.84" y="1199.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_drop_node(std::_Rb_tree_node&lt;unsigned long&gt;*) (1 samples, 0.02%)</title><rect x="957.0" y="981" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="960.02" y="991.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (19 samples, 0.32%)</title><rect x="927.8" y="1413" width="3.8" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="930.84" y="1423.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (13 samples, 0.22%)</title><rect x="877.8" y="1349" width="2.6" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="880.83" y="1359.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (1 samples, 0.02%)</title><rect x="826.4" y="1093" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="829.43" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (3 samples, 0.05%)</title><rect x="475.2" y="1365" width="0.6" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="478.17" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (8 samples, 0.13%)</title><rect x="440.4" y="1429" width="1.6" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="443.44" y="1439.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (1 samples, 0.02%)</title><rect x="882.6" y="1349" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="885.60" y="1359.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (2 samples, 0.03%)</title><rect x="792.3" y="741" width="0.4" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="795.30" y="751.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (2 samples, 0.03%)</title><rect x="836.8" y="1173" width="0.4" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="839.75" y="1183.5" ></text>
</g>
<g >
<title>DisjointSetUnion::Unite(unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="1171.9" y="1461" width="0.2" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="1174.94" y="1471.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="765.3" y="789" width="0.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="768.31" y="799.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="795.5" y="789" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="798.48" y="799.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;unsigned long&gt; std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_&lt;unsigned long const&amp;, std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, unsigned long const&amp;, std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_Alloc_node&amp;) (1 samples, 0.02%)</title><rect x="952.3" y="1205" width="0.2" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="955.25" y="1215.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (1 samples, 0.02%)</title><rect x="819.9" y="1061" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="822.89" y="1071.5" ></text>
</g>
<g >
<title>LinkedList::RemoveEdge(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="946.1" y="1349" width="0.4" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="949.10" y="1359.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_Tp_allocator() (1 samples, 0.02%)</title><rect x="577.0" y="1317" width="0.2" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="579.98" y="1327.5" ></text>
</g>
<g >
<title>std::vector&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::operator[](unsigned long) const (1 samples, 0.02%)</title><rect x="846.7" y="1221" width="0.2" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="849.68" y="1231.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator*() const (2 samples, 0.03%)</title><rect x="647.6" y="1237" width="0.4" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="650.63" y="1247.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (2 samples, 0.03%)</title><rect x="792.3" y="757" width="0.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="795.30" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (2 samples, 0.03%)</title><rect x="664.3" y="1189" width="0.4" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="667.30" y="1199.5" ></text>
</g>
<g >
<title>LinkedList::RemoveEdge(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="954.6" y="1173" width="0.4" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="957.64" y="1183.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::pop_back() (1 samples, 0.02%)</title><rect x="740.3" y="981" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="743.31" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::operator[](unsigned long) (1 samples, 0.02%)</title><rect x="950.5" y="1285" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="953.47" y="1295.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::insert(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="956.0" y="1077" width="0.4" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="959.02" y="1087.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (1 samples, 0.02%)</title><rect x="877.4" y="1333" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="880.44" y="1343.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator++() (1 samples, 0.02%)</title><rect x="788.7" y="629" width="0.2" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="791.73" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (8 samples, 0.13%)</title><rect x="613.1" y="1301" width="1.6" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="616.10" y="1311.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (15 samples, 0.25%)</title><rect x="563.5" y="1349" width="3.0" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="566.48" y="1359.5" ></text>
</g>
<g >
<title>LinkedList::AddEdge(unsigned long, unsigned long) (4 samples, 0.07%)</title><rect x="942.5" y="1365" width="0.8" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="945.53" y="1375.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate(std::allocator&lt;unsigned long&gt;&amp;, unsigned long) (2 samples, 0.03%)</title><rect x="689.3" y="1109" width="0.4" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="692.30" y="1119.5" ></text>
</g>
<g >
<title>LinkedList::RemoveEdge(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="951.7" y="1269" width="0.4" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="954.66" y="1279.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="762.9" y="805" width="0.4" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="765.93" y="815.5" ></text>
</g>
<g >
<title>SpanningTree::Propagate(unsigned long) (1 samples, 0.02%)</title><rect x="958.2" y="1029" width="0.2" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="961.21" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() (1 samples, 0.02%)</title><rect x="945.9" y="1205" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="948.90" y="1215.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_begin() (1 samples, 0.02%)</title><rect x="949.1" y="1237" width="0.2" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="952.08" y="1247.5" ></text>
</g>
<g >
<title>unsigned long* std::__niter_base&lt;unsigned long*&gt;(unsigned long*) (3 samples, 0.05%)</title><rect x="580.0" y="1285" width="0.6" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="582.96" y="1295.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (2 samples, 0.03%)</title><rect x="778.4" y="677" width="0.4" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="781.41" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (2 samples, 0.03%)</title><rect x="818.5" y="1029" width="0.4" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="821.50" y="1039.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (4 samples, 0.07%)</title><rect x="821.7" y="1077" width="0.8" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="824.67" y="1087.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator++() (1 samples, 0.02%)</title><rect x="914.9" y="1429" width="0.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="917.94" y="1439.5" ></text>
</g>
<g >
<title>unsigned long* std::__relocate_a&lt;unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt; &gt;(unsigned long*, unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt;&amp;) (12 samples, 0.20%)</title><rect x="472.2" y="1365" width="2.4" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="475.20" y="1375.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (96 samples, 1.61%)</title><rect x="523.2" y="1397" width="19.1" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="526.20" y="1407.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (1 samples, 0.02%)</title><rect x="882.4" y="1333" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="885.40" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="779.6" y="661" width="0.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="782.60" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (2 samples, 0.03%)</title><rect x="801.6" y="853" width="0.4" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="804.63" y="863.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (206 samples, 3.46%)</title><rect x="759.4" y="885" width="40.8" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="762.36" y="895.5" >boo..</text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (26 samples, 0.44%)</title><rect x="615.3" y="1317" width="5.1" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="618.28" y="1327.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long) (4 samples, 0.07%)</title><rect x="495.2" y="1349" width="0.8" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="498.22" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (1 samples, 0.02%)</title><rect x="784.4" y="581" width="0.2" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="787.36" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (1 samples, 0.02%)</title><rect x="781.2" y="613" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="784.19" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (1 samples, 0.02%)</title><rect x="578.0" y="1301" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="580.97" y="1311.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;unsigned long&gt;::allocate(unsigned long, void const*) (4 samples, 0.07%)</title><rect x="494.0" y="1333" width="0.8" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="497.03" y="1343.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (1 samples, 0.02%)</title><rect x="942.9" y="1269" width="0.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="945.93" y="1279.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="717.3" y="1061" width="0.4" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="720.29" y="1071.5" ></text>
</g>
<g >
<title>SpanningTree::Propagate(unsigned long) (2 samples, 0.03%)</title><rect x="958.2" y="1045" width="0.4" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="961.21" y="1055.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (3 samples, 0.05%)</title><rect x="814.3" y="1029" width="0.6" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="817.33" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::size() const (7 samples, 0.12%)</title><rect x="412.7" y="1461" width="1.3" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="415.66" y="1471.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (2 samples, 0.03%)</title><rect x="726.6" y="1045" width="0.4" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="729.61" y="1055.5" ></text>
</g>
<g >
<title>unsigned long&amp;&amp; std::__pair_get&lt;1ul&gt;::__move_get&lt;unsigned long, unsigned long&gt;(std::pair&lt;unsigned long, unsigned long&gt;&amp;&amp;) (1 samples, 0.02%)</title><rect x="1173.7" y="1461" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1176.73" y="1471.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;unsigned long&gt;, bool&gt; std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt;(unsigned long const&amp;) (4 samples, 0.07%)</title><rect x="942.5" y="1333" width="0.8" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="945.53" y="1343.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (17 samples, 0.29%)</title><rect x="785.0" y="565" width="3.3" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="787.96" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;unsigned long&gt; std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_&lt;unsigned long const&amp;, std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, unsigned long const&amp;, std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_Alloc_node&amp;) (1 samples, 0.02%)</title><rect x="954.2" y="1141" width="0.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="957.24" y="1151.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (27 samples, 0.45%)</title><rect x="686.7" y="1173" width="5.4" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="689.72" y="1183.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="955.4" y="1125" width="0.4" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="958.43" y="1135.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (1 samples, 0.02%)</title><rect x="798.3" y="837" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="801.25" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_relocate(unsigned long*, unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt;&amp;) (1 samples, 0.02%)</title><rect x="528.4" y="1365" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="531.36" y="1375.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (3 samples, 0.05%)</title><rect x="957.6" y="1029" width="0.6" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="960.61" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (2 samples, 0.03%)</title><rect x="867.3" y="1285" width="0.4" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="870.32" y="1295.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="739.9" y="949" width="0.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="742.91" y="959.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_S_key(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="947.1" y="1269" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="950.09" y="1279.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator++() (1 samples, 0.02%)</title><rect x="826.8" y="1125" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="829.83" y="1135.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (4 samples, 0.07%)</title><rect x="887.2" y="1365" width="0.8" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="890.16" y="1375.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_iterator&lt;unsigned long&gt; const&amp;) (1 samples, 0.02%)</title><rect x="931.2" y="1397" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="934.22" y="1407.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (5 samples, 0.08%)</title><rect x="786.3" y="453" width="1.0" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="789.35" y="463.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::destroy&lt;unsigned long&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*) (1 samples, 0.02%)</title><rect x="665.9" y="1221" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="668.89" y="1231.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_check_len(unsigned long, char const*) const (49 samples, 0.82%)</title><rect x="461.3" y="1381" width="9.7" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="464.28" y="1391.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;unsigned long&gt;, std::_Rb_tree_const_iterator&lt;unsigned long&gt;) (2 samples, 0.03%)</title><rect x="957.6" y="997" width="0.4" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="960.61" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (1 samples, 0.02%)</title><rect x="696.4" y="1141" width="0.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="699.45" y="1151.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (5 samples, 0.08%)</title><rect x="678.2" y="1173" width="1.0" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="681.19" y="1183.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (10 samples, 0.17%)</title><rect x="917.1" y="1413" width="2.0" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="920.13" y="1423.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (2 samples, 0.03%)</title><rect x="784.6" y="581" width="0.4" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="787.56" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (3 samples, 0.05%)</title><rect x="574.2" y="1349" width="0.6" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="577.20" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (2 samples, 0.03%)</title><rect x="713.7" y="1093" width="0.4" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="716.71" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="743.3" y="933" width="0.2" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="746.28" y="943.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (2 samples, 0.03%)</title><rect x="802.0" y="901" width="0.4" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="805.02" y="911.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (1 samples, 0.02%)</title><rect x="932.8" y="1349" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="935.81" y="1359.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (4 samples, 0.07%)</title><rect x="733.6" y="997" width="0.8" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="736.56" y="1007.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (4 samples, 0.07%)</title><rect x="780.2" y="677" width="0.8" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="783.20" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (1 samples, 0.02%)</title><rect x="816.3" y="1013" width="0.2" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="819.31" y="1023.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (1 samples, 0.02%)</title><rect x="951.5" y="1141" width="0.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="954.46" y="1151.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (2 samples, 0.03%)</title><rect x="843.7" y="1189" width="0.4" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="846.70" y="1199.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (2 samples, 0.03%)</title><rect x="793.5" y="757" width="0.4" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="796.49" y="767.5" ></text>
</g>
<g >
<title>unsigned long&amp;&amp; std::__pair_get&lt;0ul&gt;::__move_get&lt;unsigned long, unsigned long&gt;(std::pair&lt;unsigned long, unsigned long&gt;&amp;&amp;) (2 samples, 0.03%)</title><rect x="1173.1" y="1445" width="0.4" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1176.13" y="1455.5" ></text>
</g>
<g >
<title>__gnu_cxx::__enable_if&lt;__is_scalar&lt;unsigned long&gt;::__value, void&gt;::__type std::__fill_a1&lt;unsigned long*, unsigned long&gt;(unsigned long*, unsigned long*, unsigned long const&amp;) (3 samples, 0.05%)</title><rect x="403.5" y="1365" width="0.6" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="406.53" y="1375.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (1 samples, 0.02%)</title><rect x="934.6" y="1317" width="0.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="937.59" y="1327.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="636.7" y="1253" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="639.71" y="1263.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (9 samples, 0.15%)</title><rect x="710.1" y="1125" width="1.8" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="713.14" y="1135.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long) (5 samples, 0.08%)</title><rect x="971.1" y="1413" width="1.0" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="974.11" y="1423.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;unsigned long&gt; &gt; &gt;::allocate(std::allocator&lt;std::_Rb_tree_node&lt;unsigned long&gt; &gt;&amp;, unsigned long) (1 samples, 0.02%)</title><rect x="941.3" y="1269" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="944.34" y="1279.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (3 samples, 0.05%)</title><rect x="852.4" y="1221" width="0.6" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="855.43" y="1231.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (3 samples, 0.05%)</title><rect x="730.0" y="1013" width="0.6" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="732.99" y="1023.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (4 samples, 0.07%)</title><rect x="654.0" y="1205" width="0.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="656.98" y="1215.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="790.3" y="693" width="0.2" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="793.32" y="703.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (5 samples, 0.08%)</title><rect x="750.4" y="933" width="1.0" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="753.43" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (17 samples, 0.29%)</title><rect x="655.6" y="1237" width="3.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="658.57" y="1247.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (3 samples, 0.05%)</title><rect x="590.9" y="1301" width="0.6" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="593.87" y="1311.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (3 samples, 0.05%)</title><rect x="916.5" y="1413" width="0.6" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="919.53" y="1423.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::pop_back() (1 samples, 0.02%)</title><rect x="520.6" y="1397" width="0.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="523.62" y="1407.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (2 samples, 0.03%)</title><rect x="823.1" y="1061" width="0.4" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="826.06" y="1071.5" ></text>
</g>
<g >
<title>std::less&lt;unsigned long&gt;::operator()(unsigned long const&amp;, unsigned long const&amp;) const (1 samples, 0.02%)</title><rect x="946.9" y="1269" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="949.90" y="1279.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="941.3" y="1253" width="0.2" height="15.0" fill="rgb(214,71,71)" rx="2" ry="2" />
<text  x="944.34" y="1263.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (4 samples, 0.07%)</title><rect x="881.8" y="1349" width="0.8" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="884.80" y="1359.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (7 samples, 0.12%)</title><rect x="583.7" y="1333" width="1.4" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="586.73" y="1343.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (11 samples, 0.18%)</title><rect x="901.8" y="1397" width="2.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="904.85" y="1407.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="486.5" y="1381" width="0.4" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="489.49" y="1391.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="717.3" y="1045" width="0.4" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="720.29" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (2 samples, 0.03%)</title><rect x="914.5" y="1381" width="0.4" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="917.55" y="1391.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::destroy&lt;unsigned long&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*) (1 samples, 0.02%)</title><rect x="551.2" y="1365" width="0.2" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="554.18" y="1375.5" ></text>
</g>
<g >
<title>SpanningTree::Propagate(unsigned long) (27 samples, 0.45%)</title><rect x="953.4" y="1237" width="5.4" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="956.44" y="1247.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (1 samples, 0.02%)</title><rect x="912.6" y="1413" width="0.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="915.56" y="1423.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (1 samples, 0.02%)</title><rect x="1061.6" y="1477" width="0.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1064.60" y="1487.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (865 samples, 14.55%)</title><rect x="672.6" y="1221" width="171.7" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="675.63" y="1231.5" >bool LinkedList::Depth..</text>
</g>
<g >
<title>LinkedList::AddEdge(unsigned long, unsigned long) (6 samples, 0.10%)</title><rect x="944.9" y="1349" width="1.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="947.91" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::pop_back() (1 samples, 0.02%)</title><rect x="719.3" y="1077" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="722.27" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="769.3" y="757" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="772.28" y="767.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="812.5" y="997" width="0.2" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="815.54" y="1007.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl_data::_Vector_impl_data() (1 samples, 0.02%)</title><rect x="922.1" y="1413" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="925.09" y="1423.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (1 samples, 0.02%)</title><rect x="945.1" y="1221" width="0.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="948.11" y="1231.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (5 samples, 0.08%)</title><rect x="773.4" y="773" width="1.0" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="776.45" y="783.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (2 samples, 0.03%)</title><rect x="823.1" y="1077" width="0.4" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="826.06" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (6 samples, 0.10%)</title><rect x="585.1" y="1333" width="1.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="588.12" y="1343.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_S_key(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="945.1" y="1285" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="948.11" y="1295.5" ></text>
</g>
<g >
<title>SpanningTree::Propagate(unsigned long) (187 samples, 3.14%)</title><rect x="922.3" y="1461" width="37.1" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="925.29" y="1471.5" >Spa..</text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_max_size(std::allocator&lt;unsigned long&gt; const&amp;) (1 samples, 0.02%)</title><rect x="626.6" y="1221" width="0.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="629.59" y="1231.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (2 samples, 0.03%)</title><rect x="912.2" y="1397" width="0.4" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="915.17" y="1407.5" ></text>
</g>
<g >
<title>SpanningTree::Propagate(unsigned long) (113 samples, 1.90%)</title><rect x="936.6" y="1429" width="22.4" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="939.58" y="1439.5" >S..</text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (611 samples, 10.28%)</title><rect x="707.2" y="1141" width="121.2" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="710.16" y="1151.5" >bool LinkedList..</text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="674.2" y="1173" width="0.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="677.22" y="1183.5" ></text>
</g>
<g >
<title>SpanningTree::Propagate(unsigned long) (21 samples, 0.35%)</title><rect x="954.6" y="1189" width="4.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="957.64" y="1199.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::max_size(std::allocator&lt;unsigned long&gt; const&amp;) (3 samples, 0.05%)</title><rect x="499.4" y="1333" width="0.6" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="502.38" y="1343.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::destroy&lt;unsigned long&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*) (1 samples, 0.02%)</title><rect x="744.1" y="949" width="0.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="747.08" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[](unsigned long) (12 samples, 0.20%)</title><rect x="1185.4" y="1493" width="2.4" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="1188.44" y="1503.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (1 samples, 0.02%)</title><rect x="748.4" y="933" width="0.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="751.44" y="943.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (2 samples, 0.03%)</title><rect x="723.4" y="1029" width="0.4" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="726.44" y="1039.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (11 samples, 0.18%)</title><rect x="708.0" y="1125" width="2.1" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="710.96" y="1135.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;unsigned long&gt; std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_&lt;unsigned long const&amp;, std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, unsigned long const&amp;, std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_Alloc_node&amp;) (7 samples, 0.12%)</title><rect x="933.8" y="1381" width="1.4" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="936.80" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin() (3 samples, 0.05%)</title><rect x="513.7" y="1365" width="0.6" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="516.67" y="1375.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (219 samples, 3.68%)</title><rect x="758.6" y="901" width="43.4" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="761.56" y="911.5" >bool..</text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (2 samples, 0.03%)</title><rect x="808.2" y="965" width="0.4" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="811.18" y="975.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::max_size(std::allocator&lt;unsigned long&gt; const&amp;) (1 samples, 0.02%)</title><rect x="626.4" y="1221" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="629.39" y="1231.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (1 samples, 0.02%)</title><rect x="949.5" y="1221" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="952.48" y="1231.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (6 samples, 0.10%)</title><rect x="765.5" y="837" width="1.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="768.51" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (3 samples, 0.05%)</title><rect x="905.4" y="1365" width="0.6" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="908.42" y="1375.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (3 samples, 0.05%)</title><rect x="809.4" y="965" width="0.6" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="812.37" y="975.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (1 samples, 0.02%)</title><rect x="817.1" y="1045" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="820.11" y="1055.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::destroy&lt;unsigned long&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*) (1 samples, 0.02%)</title><rect x="755.0" y="901" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="757.99" y="911.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;) (2 samples, 0.03%)</title><rect x="933.4" y="1381" width="0.4" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="936.40" y="1391.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (3 samples, 0.05%)</title><rect x="831.0" y="1141" width="0.6" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="834.00" y="1151.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="955.8" y="1077" width="0.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="958.83" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (6 samples, 0.10%)</title><rect x="692.9" y="1141" width="1.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="695.88" y="1151.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator++() (2 samples, 0.03%)</title><rect x="824.8" y="1109" width="0.4" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="827.85" y="1119.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_relocate(unsigned long*, unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt;&amp;) (17 samples, 0.29%)</title><rect x="537.5" y="1349" width="3.4" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="540.49" y="1359.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_end() (1 samples, 0.02%)</title><rect x="933.8" y="1365" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="936.80" y="1375.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (1 samples, 0.02%)</title><rect x="789.7" y="661" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="792.72" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_get_insert_unique_pos(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="940.5" y="1333" width="0.4" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="943.54" y="1343.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::size() const (1 samples, 0.02%)</title><rect x="958.4" y="1013" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="961.41" y="1023.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_S_right(std::_Rb_tree_node_base*) (1 samples, 0.02%)</title><rect x="933.0" y="1365" width="0.2" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="936.00" y="1375.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="591.7" y="1333" width="0.2" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="594.66" y="1343.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (6 samples, 0.10%)</title><rect x="935.4" y="1413" width="1.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="938.39" y="1423.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (4 samples, 0.07%)</title><rect x="660.3" y="1221" width="0.8" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="663.33" y="1231.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (2 samples, 0.03%)</title><rect x="370.2" y="1429" width="0.4" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="373.19" y="1439.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (1 samples, 0.02%)</title><rect x="871.5" y="1301" width="0.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="874.48" y="1311.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_upper_bound(std::_Rb_tree_node&lt;unsigned long&gt;*, std::_Rb_tree_node_base*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="936.4" y="1365" width="0.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="939.38" y="1375.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (2 samples, 0.03%)</title><rect x="786.9" y="85" width="0.4" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="789.94" y="95.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (11 samples, 0.18%)</title><rect x="786.0" y="517" width="2.1" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="788.95" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (3 samples, 0.05%)</title><rect x="743.5" y="949" width="0.6" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="746.48" y="959.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="948.5" y="1301" width="0.4" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="951.48" y="1311.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="624.6" y="1221" width="0.2" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="627.61" y="1231.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;* std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_Alloc_node::operator()&lt;unsigned long const&amp;&gt;(unsigned long const&amp;) const (1 samples, 0.02%)</title><rect x="943.1" y="1301" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="946.12" y="1311.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (3 samples, 0.05%)</title><rect x="370.6" y="1429" width="0.6" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="373.59" y="1439.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="796.7" y="789" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="799.67" y="799.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_0::operator()(unsigned long) const (1 samples, 0.02%)</title><rect x="782.4" y="613" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="785.38" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::pop_back() (3 samples, 0.05%)</title><rect x="746.9" y="949" width="0.6" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="749.86" y="959.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (5 samples, 0.08%)</title><rect x="830.6" y="1157" width="1.0" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="833.60" y="1167.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (6 samples, 0.10%)</title><rect x="757.4" y="885" width="1.2" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="760.37" y="895.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (6 samples, 0.10%)</title><rect x="525.8" y="1381" width="1.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="528.78" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (1 samples, 0.02%)</title><rect x="895.1" y="1381" width="0.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="898.10" y="1391.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="532.3" y="1317" width="0.2" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="535.33" y="1327.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::assign(unsigned long, unsigned long const&amp;) (12 samples, 0.20%)</title><rect x="414.0" y="1461" width="2.4" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="417.05" y="1471.5" ></text>
</g>
<g >
<title>int* std::fill_n&lt;int*, unsigned long, int&gt;(int*, unsigned long, int const&amp;) (4 samples, 0.07%)</title><rect x="407.7" y="1429" width="0.8" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="410.70" y="1439.5" ></text>
</g>
<g >
<title>LinkedList::RemoveEdge(unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="954.4" y="1189" width="0.2" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="957.44" y="1199.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (5 samples, 0.08%)</title><rect x="596.6" y="1301" width="1.0" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="599.63" y="1311.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (2 samples, 0.03%)</title><rect x="934.4" y="1333" width="0.4" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="937.39" y="1343.5" ></text>
</g>
<g >
<title>_int_free (11 samples, 0.18%)</title><rect x="1187.8" y="1525" width="2.2" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="1190.82" y="1535.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_get_insert_unique_pos(unsigned long const&amp;) (4 samples, 0.07%)</title><rect x="936.8" y="1365" width="0.8" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="939.77" y="1375.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (7 samples, 0.12%)</title><rect x="373.4" y="1461" width="1.4" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="376.37" y="1471.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="783.0" y="565" width="0.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="785.97" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (1 samples, 0.02%)</title><rect x="774.8" y="725" width="0.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="777.84" y="735.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (2 samples, 0.03%)</title><rect x="798.7" y="853" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="801.65" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (1 samples, 0.02%)</title><rect x="798.3" y="853" width="0.2" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="801.25" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (7 samples, 0.12%)</title><rect x="738.9" y="981" width="1.4" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="741.92" y="991.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (24 samples, 0.40%)</title><rect x="604.4" y="1333" width="4.7" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="607.37" y="1343.5" ></text>
</g>
<g >
<title>unsigned long* std::__relocate_a&lt;unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt; &gt;(unsigned long*, unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt;&amp;) (24 samples, 0.40%)</title><rect x="508.9" y="1349" width="4.8" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="511.91" y="1359.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::insert(unsigned long const&amp;) (6 samples, 0.10%)</title><rect x="944.9" y="1333" width="1.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="947.91" y="1343.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::insert(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="951.5" y="1253" width="0.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="954.46" y="1263.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (2 samples, 0.03%)</title><rect x="776.4" y="693" width="0.4" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="779.42" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (2 samples, 0.03%)</title><rect x="675.6" y="1189" width="0.4" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="678.61" y="1199.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::pop_back() (2 samples, 0.03%)</title><rect x="679.2" y="1189" width="0.4" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="682.18" y="1199.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;unsigned long&gt;) (1 samples, 0.02%)</title><rect x="948.5" y="1253" width="0.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="951.48" y="1263.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (2 samples, 0.03%)</title><rect x="894.5" y="1365" width="0.4" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="897.50" y="1375.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_S_key(std::_Rb_tree_node&lt;unsigned long&gt; const*) (1 samples, 0.02%)</title><rect x="926.7" y="1365" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="929.65" y="1375.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="953.0" y="1221" width="0.2" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="956.05" y="1231.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (9 samples, 0.15%)</title><rect x="363.8" y="1429" width="1.8" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="366.84" y="1439.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (6 samples, 0.10%)</title><rect x="645.8" y="1253" width="1.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="648.84" y="1263.5" ></text>
</g>
<g >
<title>std::less&lt;unsigned long&gt;::operator()(unsigned long const&amp;, unsigned long const&amp;) const (3 samples, 0.05%)</title><rect x="924.7" y="1381" width="0.6" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="927.67" y="1391.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (8 samples, 0.13%)</title><rect x="757.0" y="901" width="1.6" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="759.98" y="911.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (2 samples, 0.03%)</title><rect x="816.7" y="1045" width="0.4" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="819.71" y="1055.5" ></text>
</g>
<g >
<title>DisjointSetUnion::Reset() (16 samples, 0.27%)</title><rect x="401.0" y="1461" width="3.1" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="403.95" y="1471.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (25 samples, 0.42%)</title><rect x="661.1" y="1237" width="5.0" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="664.12" y="1247.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;unsigned long&gt;, std::_Rb_tree_const_iterator&lt;unsigned long&gt;) (1 samples, 0.02%)</title><rect x="954.4" y="1141" width="0.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="957.44" y="1151.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;unsigned long&gt;::_Rb_tree_iterator(std::_Rb_tree_node_base*) (2 samples, 0.03%)</title><rect x="930.6" y="1381" width="0.4" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="933.62" y="1391.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="952.5" y="1221" width="0.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="955.45" y="1231.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (3 samples, 0.05%)</title><rect x="903.4" y="1381" width="0.6" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="906.43" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="771.3" y="773" width="0.2" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="774.26" y="783.5" ></text>
</g>
<g >
<title>DisjointSetUnion::Initialize(unsigned long) (9 samples, 0.15%)</title><rect x="401.0" y="1445" width="1.7" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="403.95" y="1455.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (44 samples, 0.74%)</title><rect x="374.8" y="1461" width="8.7" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="377.76" y="1471.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (11 samples, 0.18%)</title><rect x="638.7" y="1253" width="2.2" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="641.70" y="1263.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back() (6 samples, 0.10%)</title><rect x="715.1" y="1093" width="1.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="718.10" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator*() const (2 samples, 0.03%)</title><rect x="656.4" y="1221" width="0.4" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="659.36" y="1231.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::max_size() const (3 samples, 0.05%)</title><rect x="577.4" y="1301" width="0.6" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="580.38" y="1311.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="955.4" y="1109" width="0.4" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="958.43" y="1119.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator(unsigned long* const&amp;) (1 samples, 0.02%)</title><rect x="784.8" y="533" width="0.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="787.76" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (31 samples, 0.52%)</title><rect x="621.8" y="1285" width="6.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="624.83" y="1295.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_addr() const (1 samples, 0.02%)</title><rect x="939.8" y="1285" width="0.1" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="942.75" y="1295.5" ></text>
</g>
<g >
<title>[unknown] (17 samples, 0.29%)</title><rect x="24.1" y="1525" width="3.4" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="27.09" y="1535.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end() (1 samples, 0.02%)</title><rect x="448.4" y="1413" width="0.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="451.38" y="1423.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;unsigned long&gt; std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_&lt;unsigned long const&amp;, std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, unsigned long const&amp;, std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_Alloc_node&amp;) (8 samples, 0.13%)</title><rect x="926.1" y="1397" width="1.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="929.06" y="1407.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;unsigned long&gt; &gt;::allocate(unsigned long, void const*) (1 samples, 0.02%)</title><rect x="927.2" y="1317" width="0.2" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="930.25" y="1327.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::destroy&lt;unsigned long&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*) (1 samples, 0.02%)</title><rect x="711.7" y="1109" width="0.2" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="714.73" y="1119.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_get_insert_unique_pos(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="945.1" y="1301" width="0.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="948.11" y="1311.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (6 samples, 0.10%)</title><rect x="677.0" y="1173" width="1.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="680.00" y="1183.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_drop_node(std::_Rb_tree_node&lt;unsigned long&gt;*) (1 samples, 0.02%)</title><rect x="935.4" y="1365" width="0.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="938.39" y="1375.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (1 samples, 0.02%)</title><rect x="926.7" y="1349" width="0.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="929.65" y="1359.5" ></text>
</g>
<g >
<title>LinkedList::RemoveEdge(unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="958.2" y="997" width="0.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="961.21" y="1007.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (2 samples, 0.03%)</title><rect x="803.4" y="885" width="0.4" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="806.41" y="895.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned long&gt;::_M_ptr() const (1 samples, 0.02%)</title><rect x="951.5" y="1157" width="0.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="954.46" y="1167.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (2 samples, 0.03%)</title><rect x="782.8" y="581" width="0.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="785.77" y="591.5" ></text>
</g>
<g >
<title>decltype (::new ((void*)(0)) unsigned long(std::declval&lt;unsigned long const&amp;&gt;())) std::construct_at&lt;unsigned long, unsigned long const&amp;&gt;(unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="726.0" y="1013" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="729.02" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="721.7" y="1061" width="0.3" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="724.65" y="1071.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::begin() const (1 samples, 0.02%)</title><rect x="869.9" y="1317" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="872.90" y="1327.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::destroy&lt;unsigned long&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*) (1 samples, 0.02%)</title><rect x="700.2" y="1125" width="0.2" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="703.22" y="1135.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (8 samples, 0.13%)</title><rect x="901.8" y="1381" width="1.6" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="904.85" y="1391.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (3 samples, 0.05%)</title><rect x="811.7" y="997" width="0.6" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="814.75" y="1007.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::erase(unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="950.1" y="1285" width="0.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="953.07" y="1295.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (1 samples, 0.02%)</title><rect x="820.9" y="1061" width="0.2" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="823.88" y="1071.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (1 samples, 0.02%)</title><rect x="623.2" y="1269" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="626.22" y="1279.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (2 samples, 0.03%)</title><rect x="895.3" y="1381" width="0.4" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="898.30" y="1391.5" ></text>
</g>
<g >
<title>__gnu_cxx::__enable_if&lt;!__is_scalar&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;::__value, void&gt;::__type std::__fill_a1&lt;std::pair&lt;unsigned long, unsigned long&gt;*, std::pair&lt;unsigned long, unsigned long&gt; &gt;(std::pair&lt;unsigned long, unsigned long&gt;*, std::pair&lt;unsigned long, unsigned long&gt;*, std::pair&lt;unsigned long, unsigned long&gt; const&amp;) (13 samples, 0.22%)</title><rect x="409.3" y="1381" width="2.6" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="412.29" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size() const (1 samples, 0.02%)</title><rect x="733.0" y="1013" width="0.2" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="735.96" y="1023.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="855.8" y="1269" width="0.2" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="858.81" y="1279.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::pop_back() (1 samples, 0.02%)</title><rect x="632.5" y="1285" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="635.55" y="1295.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;unsigned long&gt; std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_&lt;unsigned long const&amp;, std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, unsigned long const&amp;, std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_Alloc_node&amp;) (1 samples, 0.02%)</title><rect x="943.1" y="1317" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="946.12" y="1327.5" ></text>
</g>
<g >
<title>SpanningTree::FindCycle(unsigned long, unsigned long)::$_1::operator()(unsigned long) const (14 samples, 0.24%)</title><rect x="692.1" y="1173" width="2.8" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="695.08" y="1183.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::pop_back() (3 samples, 0.05%)</title><rect x="699.8" y="1141" width="0.6" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="702.82" y="1151.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate(unsigned long*, unsigned long) (13 samples, 0.22%)</title><rect x="969.5" y="1429" width="2.6" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="972.52" y="1439.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (3 samples, 0.05%)</title><rect x="786.7" y="261" width="0.6" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="789.74" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::pop_back() (2 samples, 0.03%)</title><rect x="665.5" y="1221" width="0.4" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="668.49" y="1231.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;unsigned long&gt;::_Rb_tree_iterator(std::_Rb_tree_node_base*) (1 samples, 0.02%)</title><rect x="957.8" y="981" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="960.81" y="991.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_S_key(std::_Rb_tree_node_base const*) (1 samples, 0.02%)</title><rect x="937.6" y="1365" width="0.2" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="940.57" y="1375.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (11 samples, 0.18%)</title><rect x="605.6" y="1301" width="2.1" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="608.56" y="1311.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator*() const (1 samples, 0.02%)</title><rect x="788.9" y="645" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="791.93" y="655.5" ></text>
</g>
<g >
<title>std::operator==(std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;, std::_Rb_tree_const_iterator&lt;unsigned long&gt; const&amp;) (1 samples, 0.02%)</title><rect x="789.1" y="645" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="792.13" y="655.5" ></text>
</g>
<g >
<title>std::_Identity&lt;unsigned long&gt;::operator()(unsigned long const&amp;) const (2 samples, 0.03%)</title><rect x="923.7" y="1365" width="0.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="926.68" y="1375.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::end() const (1 samples, 0.02%)</title><rect x="811.4" y="965" width="0.2" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="814.35" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned long&gt;::operator++() (1 samples, 0.02%)</title><rect x="834.2" y="1173" width="0.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="837.17" y="1183.5" ></text>
</g>
<g >
<title>SpanningTree::Propagate(unsigned long) (38 samples, 0.64%)</title><rect x="951.5" y="1285" width="7.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="954.46" y="1295.5" ></text>
</g>
<g >
<title>unsigned long&amp;&amp; std::__pair_get&lt;0ul&gt;::__move_get&lt;unsigned long, unsigned long&gt;(std::pair&lt;unsigned long, unsigned long&gt;&amp;&amp;) (47 samples, 0.79%)</title><rect x="1072.5" y="1461" width="9.3" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="1075.52" y="1471.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (3 samples, 0.05%)</title><rect x="366.6" y="1445" width="0.6" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="369.62" y="1455.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (402 samples, 6.76%)</title><rect x="734.6" y="1029" width="79.7" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="737.55" y="1039.5" >bool Link..</text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt;(std::allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long const&amp;) (2 samples, 0.03%)</title><rect x="709.1" y="1093" width="0.4" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="712.15" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_fill_assign(unsigned long, unsigned long const&amp;) (6 samples, 0.10%)</title><rect x="402.9" y="1429" width="1.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="405.94" y="1439.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[](unsigned long) (5 samples, 0.08%)</title><rect x="962.4" y="1461" width="1.0" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="965.37" y="1471.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned long&gt;::_M_valptr() const (1 samples, 0.02%)</title><rect x="808.4" y="949" width="0.2" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="811.38" y="959.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::max&lt;unsigned long&gt;(unsigned long const&amp;, unsigned long const&amp;) (7 samples, 0.12%)</title><rect x="506.1" y="1349" width="1.4" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="509.13" y="1359.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_S_key(std::_Rb_tree_node&lt;unsigned long&gt; const*) (1 samples, 0.02%)</title><rect x="949.7" y="1221" width="0.2" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="952.67" y="1231.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator*() const (1 samples, 0.02%)</title><rect x="733.4" y="997" width="0.2" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="736.36" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_relocate(unsigned long*, unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt;&amp;) (31 samples, 0.52%)</title><rect x="507.5" y="1365" width="6.2" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="510.52" y="1375.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (168 samples, 2.83%)</title><rect x="764.7" y="853" width="33.4" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="767.72" y="863.5" >bo..</text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;unsigned long&gt;, bool&gt; std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt;(unsigned long const&amp;) (27 samples, 0.45%)</title><rect x="922.5" y="1413" width="5.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="925.49" y="1423.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator-(long) const (2 samples, 0.03%)</title><rect x="775.6" y="709" width="0.4" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="778.63" y="719.5" ></text>
</g>
<g >
<title>bool LinkedList::DepthFirstSearch&lt;SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;&gt;(unsigned long, SpanningTree::FindCycle(unsigned long, unsigned long)::$_0&amp;, SpanningTree::FindCycle(unsigned long, unsigned long)::$_1&amp;) const (383 samples, 6.44%)</title><rect x="737.5" y="1013" width="76.0" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="740.53" y="1023.5" >bool Lin..</text>
</g>
</g>
</svg>
